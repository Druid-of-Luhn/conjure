language ESSENCE 1.2.0

find pvw: int(1..4)
find pvw_properties: set of int(1..4)
find pvx: int(1..4)
find pvx_properties: set of int(1..4)
find pvy: int(1..4)
find pvy_properties: set of int(1..4)
find pvz: int(1..4)
find pvz_properties: set of int(1..4)
find pvc6: int(1..4)
find pvc6_properties: set of int(1..4)

find scA: int(1..3)
find scA_param1_properties: set of int(1..4)
find scA_param2_properties: set of int(1..4)
find scB: int(1..3)
find scB_param1_properties: set of int(1..4)
find scB_param2_properties: set of int(1..4)

$ variable/value ordering?

such that

$ variable type implications

(pvw = 1) -> (1 in pvw_properties),
(pvx = 1) -> (1 in pvx_properties),
(pvy = 1) -> (1 in pvy_properties),
(pvz = 1) -> (1 in pvz_properties),
(pvc6 = 1) -> (1 in pvc6_properties),

(pvw = 2) -> ((1 in pvw_properties) /\ (4 in pvw_properties)),
(pvx = 2) -> ((1 in pvx_properties) /\ (4 in pvx_properties)),
(pvy = 2) -> ((1 in pvy_properties) /\ (4 in pvy_properties)),
(pvz = 2) -> ((1 in pvz_properties) /\ (4 in pvz_properties)),
(pvc6 = 2) -> ((1 in pvc6_properties) /\ (4 in pvc6_properties)),

(pvw = 3) -> ((1 in pvw_properties) /\ (4 in pvw_properties) /\
    (3 in pvw_properties)),
(pvx = 3) -> ((1 in pvx_properties) /\ (4 in pvx_properties) /\
    (3 in pvx_properties)),
(pvy = 3) -> ((1 in pvy_properties) /\ (4 in pvy_properties) /\
    (3 in pvy_properties)),
(pvz = 3) -> ((1 in pvz_properties) /\ (4 in pvz_properties) /\
    (3 in pvz_properties)),
(pvc6 = 3) -> ((1 in pvc6_properties) /\ (4 in pvc6_properties) /\
    (3 in pvc6_properties)),

(pvw = 4) -> ((1 in pvw_properties) /\ (4 in pvw_properties) /\
    (2 in pvw_properties)),
(pvx = 4) -> ((1 in pvx_properties) /\ (4 in pvx_properties) /\
    (2 in pvx_properties)),
(pvy = 4) -> ((1 in pvy_properties) /\ (4 in pvy_properties) /\
    (2 in pvy_properties)),
(pvz = 4) -> ((1 in pvz_properties) /\ (4 in pvz_properties) /\
    (2 in pvz_properties)),
(pvc6 = 4) -> ((1 in pvc6_properties) /\ (4 in pvc6_properties) /\
    (2 in pvc6_properties)),


$ variable properties required in problem spec

pvx_properties subsetEq {1, 3},
pvy_properties subsetEq {1},
pvc6_properties subsetEq {1, 2},


$ constraint type implications

(scA = 1) -> (4 in scA_param1_properties),
(scA = 1) -> (4 in scA_param2_properties),

(scB = 1) -> (4 in scB_param1_properties),
(scB = 1) -> (4 in scB_param2_properties),

(scA = 3) -> (3 in scA_param1_properties),
(scA = 3) -> (2 in scA_param2_properties),

(scB = 3) -> (3 in scB_param1_properties),
(scB = 3) -> (2 in scB_param2_properties),


$ constraint properties required in problem spec

scB_param1_properties subsetEq pvz_properties,
scA_param1_properties subsetEq (pvx_properties union {1, 3}),
scA_param1_properties subsetEq (pvy_properties union {1}),
scA_param2_properties subsetEq (pvw_properties union {1, 2}),
scA_param2_properties subsetEq (pvc6_properties union {1, 2}),
scB_param1_properties subsetEq (pvx_properties union {1, 3})
