#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'

options = OpenStruct.new
options.dryRun = false
options.jobs = 1                # nil means pass -j to cabal. otherwise -jNUMBER
options.profiling = false
options.tests = false
options.optimisation = false
options.documentation = false
options.llvm = false
options.traceLogs = false
options.useEKG = false

OptionParser.new do |opts|
    opts.banner = "Usage: scripts/build/make [options]"

    opts.on("--[no-]dry-run", "If enabled, calls cabal with --dry-run") do |v|
        options.dryRun = v
    end

    opts.on("-j[OPTIONAL]", "--jobs[=OPTIONAL]", "Build in parallel.") do |v|
        options.jobs = Integer(v)
    end

    opts.on("-d", "--[no-]documentation", "Enable/disable building documentation.") do |v|
        options.documentation = v
    end

    opts.on("-p", "--[no-]profiling", "Build with profiling enabled.") do |v|
        options.profiling = v
    end

    opts.on("-t", "--[no-]tests", "Build and run tests too.") do |v|
        options.tests = v
    end

    opts.on("-O", "--[no-]optimisation", "Enable/disable optimisation.") do |v|
        options.optimisation = v
    end

    opts.on("-l", "--[no-]llvm", "Enable/disable llvm.") do |v|
        options.llvm = v
    end

    opts.on("--[no-]trace-logs", "If enabled, logs are printed to stderr as they are cretaed. They will also be in the log file.") do |v|
        options.traceLogs = v
    end

    opts.on("--[no-]use-ekg", "If enabled, conjureDF will use EKG to report metrics.") do |v|
        options.useEKG = v
    end

end.parse!

paramsBuild = []
paramsBuild << "cabal" << "install" << "--force-reinstalls"

if options.jobs > 1
    paramsBuild << "-j#{options.jobs}"
elsif options.jobs == 0
    paramsBuild << "-j"
end

if options.documentation
    paramsBuild << "--enable-documentation"
else
    paramsBuild << "--disable-documentation"
end

if options.profiling
    paramsBuild << "--enable-library-profiling"
    paramsBuild << "--enable-executable-profiling"
else
    paramsBuild << "--disable-library-profiling"
    paramsBuild << "--disable-executable-profiling"
end

if options.optimisation
    paramsBuild << "-O2" << "-funbox-strict-fields"
    paramsBuild << "-fexpose-all-unfoldings"
else
    paramsBuild << "-O0"
end

paramsBuild << '--ghc-options="-fllvm"'      if options.llvm
paramsBuild << '--ghc-options="-DTRACELOGS"' if options.traceLogs

if options.useEKG
    paramsBuild << '-fuse-ekg'
else
    paramsBuild << '-f-use-ekg'
end

if options.dryRun
    paramsBuild << "--dry-run"
    puts paramsBuild.join(" ")
    system(*paramsBuild)
else
    system(*paramsBuild)
end

if options.tests
    paramsTestBuild = paramsBuild
    paramsTestBuild << "--enable-tests"
    system(*paramsTestBuild)

    paramsTestRun = []
    paramsTestRun << "cabal" << "test"
    system(*paramsTestRun)
end

