language Essence 1.2.0

given n_big : int
given n_periods, maxl, minl, n_courses, maxc, minc : int(1..)

letting Course be domain int(1..n_courses)
letting Period be domain int(1..n_periods)

given prereq : relation of (Course ** Course)
given credits : function (total) Course -> int(1..n_big)

find curr : function (total) Course -> Period

such that
    forAll c1,c2 : Course . (prereq(c1,c2) => curr(c1) < curr(c2)),
    forAll p : Period . (sum c : curr(_,p). credits(c)) <= maxl,
    forAll p : Period . (sum c : curr(_,p). credits(c)) >= minl,
    forAll p : Period . (card(curr(_,p)) <= maxc /\ card(curr(_,p)) >= minc)
