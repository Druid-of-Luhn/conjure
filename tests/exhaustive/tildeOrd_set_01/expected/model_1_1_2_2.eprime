language ESSENCE' 1.0

find a_Occurrence: matrix indexed by [int(1..4)] of bool
find a_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find b_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Explicit: matrix indexed by [int(1..3)] of int(1..4)
such that
    or([a_Occurrence[q17] /\
        (a_Occurrence[q17] < b_Occurrence[q17] /\
         (and([a_Occurrence[q18] -> a_Occurrence[q18] = b_Occurrence[q18]
                   | q18 : int(1..4), q18 < q17])
          /\
          and([b_Occurrence[q18] /\
               !or([a_Occurrence[q19] /\ q19 = q18 | q19 : int(1..4)])
               -> a_Occurrence[q18] = b_Occurrence[q18]
                   | q18 : int(1..4), q18 < q17])))
            | q17 : int(1..4)])
    \/
    or([b_Occurrence[q17] /\ !or([a_Occurrence[q21] /\ q21 = q17 | q21 : int(1..4)])
        /\
        (a_Occurrence[q17] < b_Occurrence[q17] /\
         (and([a_Occurrence[q18] -> a_Occurrence[q18] = b_Occurrence[q18]
                   | q18 : int(1..4), q18 < q17])
          /\
          and([b_Occurrence[q18] /\
               !or([a_Occurrence[q20] /\ q20 = q18 | q20 : int(1..4)])
               -> a_Occurrence[q18] = b_Occurrence[q18]
                   | q18 : int(1..4), q18 < q17])))
            | q17 : int(1..4)]),
    3 = sum([a_Occurrence[q1] | q1 : int(1..4)]),
    3 = sum([b_Occurrence[q2] | q2 : int(1..4)]),
    and([a_Explicit[q3] < a_Explicit[q3 + 1] | q3 : int(1..2)]),
    and([a_Occurrence[a_Explicit[q8]] | q8 : int(1..3)]),
    and([a_Occurrence[q9] -> or([a_Explicit[q11] = q9 | q11 : int(1..3)])
             | q9 : int(1..4)]),
    and([b_Explicit[q5] < b_Explicit[q5 + 1] | q5 : int(1..2)]),
    and([b_Occurrence[b_Explicit[q13]] | q13 : int(1..3)]),
    and([b_Occurrence[q14] -> or([b_Explicit[q16] = q14 | q16 : int(1..3)])
             | q14 : int(1..4)])

