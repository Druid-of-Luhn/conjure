language ESSENCE' 1.0

find a_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find b_Occurrence: matrix indexed by [int(1..4)] of bool
such that
    or(flatten([or([a_Explicit[q8] = a_Explicit[q6] | q8 : int(1..3)]) <
                b_Occurrence[a_Explicit[q6]]
                /\
                (and(flatten([a_Explicit[q9] < a_Explicit[q6] ->
                              or([a_Explicit[q11] = a_Explicit[q9] | q11 : int(1..3)]) =
                              b_Occurrence[a_Explicit[q9]]
                                  | q9 : int(1..3)]))
                 /\
                 and(flatten([and([b_Occurrence[q5],
                                   !or([a_Explicit[q15] = q5 | q15 : int(1..3)]), q5 < a_Explicit[q6]; int(1..3)])
                              -> or([a_Explicit[q13] = q5 | q13 : int(1..3)]) = b_Occurrence[q5]
                                  | q5 : int(1..4)])))
                    | q6 : int(1..3)]))
    \/
    or(flatten([b_Occurrence[q4] /\ !or([a_Explicit[q26] = q4 | q26 : int(1..3)]) /\
                (or([a_Explicit[q17] = q4 | q17 : int(1..3)]) < b_Occurrence[q4] /\
                 (and(flatten([a_Explicit[q18] < q4 ->
                               or([a_Explicit[q20] = a_Explicit[q18] | q20 : int(1..3)]) =
                               b_Occurrence[a_Explicit[q18]]
                                   | q18 : int(1..3)]))
                  /\
                  and(flatten([b_Occurrence[q5] /\ !or([a_Explicit[q24] = q5 | q24 : int(1..3)])
                               -> or([a_Explicit[q22] = q5 | q22 : int(1..3)]) = b_Occurrence[q5]
                                   | q5 : int(1..4), q5 < q4]))))
                    | q4 : int(1..4)])),
    and([a_Explicit[q1] < a_Explicit[q1 + 1] | q1 : int(1..2)]),
    3 = sum([b_Occurrence[q3] | q3 : int(1..4)])

