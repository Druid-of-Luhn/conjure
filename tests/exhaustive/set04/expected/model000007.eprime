language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
such that
    x_Occurrence[1],
    or([x_ExplicitVarSizeWithFlags_Values[q3] = 2 /\ x_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..3)]),
    sum([x_Occurrence[q1] | q1 : int(1..3)]) <= 3,
    and([x_ExplicitVarSizeWithFlags_Flags[q2 + 1] -> x_ExplicitVarSizeWithFlags_Values[q2] < x_ExplicitVarSizeWithFlags_Values[q2 + 1] | q2 : int(1..3 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false -> x_ExplicitVarSizeWithFlags_Values[q2] = 1 | q2 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q2] | q2 : int(1..3 - 1)]),
    sum([x_ExplicitVarSizeWithFlags_Flags[q2] | q2 : int(1..3)]) <= 3,
    and([x_ExplicitVarSizeWithFlags_Flags[q5] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q5]] | q5 : int(1..3)]),
    and([x_Occurrence[q4] -> or([x_ExplicitVarSizeWithFlags_Values[q6] = q4 /\ x_ExplicitVarSizeWithFlags_Flags[q6] | q6 : int(1..3)]) | q4 : int(1..3)]),
    and([x_Occurrence[q7] -> or([x_ExplicitVarSizeWithFlags_Values[q8] = q7 /\ x_ExplicitVarSizeWithFlags_Flags[q8] | q8 : int(1..3)]) | q7 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q10] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q10]] | q10 : int(1..3)])

