language ESSENCE' 1.0

letting n be 5
find s_Occurrence: matrix indexed by [int(1..5)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..6)
such that
    and([[s_Occurrence[q3]
              | q2 : int(1..5), q3 : int(1..5), q2 = q1 -> q3 = q1 + 1, q2 = q1 + 1 -> q3 = q1,
                q2 != q1 /\ q2 != q1 + 1 -> q3 = q2]
         <=lex [s_Occurrence[q2] | q2 : int(1..5)]
             | q1 : int(1..4)]),
    sum([toInt(s_Occurrence[q1]) | q1 : int(1..5)]) <= 3,
    and([s_ExplicitVarSizeWithDummy[q2] < s_ExplicitVarSizeWithDummy[q2 + 1] \/ s_ExplicitVarSizeWithDummy[q2] = 6
             | q2 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q3] = 6 -> s_ExplicitVarSizeWithDummy[q3 + 1] = 6 | q3 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q4] != 6) | q4 : int(1..3)]) <= 3,
    and([s_ExplicitVarSizeWithDummy[q7] != 6 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q7]] | q7 : int(1..3)]),
    and([s_Occurrence[q8] ->
         or([s_ExplicitVarSizeWithDummy[q10] != 6 /\ s_ExplicitVarSizeWithDummy[q10] = q8 | q10 : int(1..3)])
             | q8 : int(1..5)])

