language ESSENCE' 1.0

letting n be 5
find s_Occurrence: matrix indexed by [int(1..5)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..6)
such that
    and([[s_Occurrence[[q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]] | q2 : int(1..5)] <=lex
         [s_Occurrence[q2] | q2 : int(1..5)]
             | q1 : int(1..4)]),
    sum([toInt(s_Occurrence[q1]) | q1 : int(1..5)]) <= 3,
    and([s_ExplicitVarSizeWithDummy[q5] < s_ExplicitVarSizeWithDummy[q5 + 1] \/ s_ExplicitVarSizeWithDummy[q5] = 6
             | q5 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q6] = 6 -> s_ExplicitVarSizeWithDummy[q6 + 1] = 6 | q6 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q7] != 6) | q7 : int(1..3)]) <= 3,
    and([s_ExplicitVarSizeWithDummy[q10] != 6 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..3)]),
    and([s_Occurrence[q11] ->
         or([s_ExplicitVarSizeWithDummy[q13] != 6 /\ s_ExplicitVarSizeWithDummy[q13] = q11 | q13 : int(1..3)])
             | q11 : int(1..5)])

