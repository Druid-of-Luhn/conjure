language ESSENCE' 1.0

letting n be 5
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..3)] of int(1..5)
find s_Occurrence: matrix indexed by [int(1..5)] of bool
such that
    and([[or([q5 <= s_ExplicitVarSizeWithMarker_Marker /\
              s_ExplicitVarSizeWithMarker_Values[q5] = q3
                  | q5 : int(1..3)])
              | q2 : int(1..5), q3 : int(1..5), q2 = q1 -> q3 = q1 + 1,
                q2 = q1 + 1 -> q3 = q1, q2 != q1 /\ q2 != q1 + 1 -> q3 = q2]
         <=lex
         [or([q7 <= s_ExplicitVarSizeWithMarker_Marker /\
              s_ExplicitVarSizeWithMarker_Values[q7] = q2
                  | q7 : int(1..3)])
              | q2 : int(1..5)]
             | q1 : int(1..4)]),
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] <
         s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q2] = 1
             | q2 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= 3,
    sum([toInt(s_Occurrence[q8]) | q8 : int(1..5)]) <= 3,
    and([s_Occurrence[q9] ->
         or([q11 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q11] = q9
                 | q11 : int(1..3)])
             | q9 : int(1..5)]),
    and([q13 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q13]]
             | q13 : int(1..3)])

