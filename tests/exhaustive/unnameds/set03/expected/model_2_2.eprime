language ESSENCE' 1.0

letting n be 5
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..6)
such that
    and([[or([s_ExplicitVarSizeWithDummy[q9] != 6 /\
              s_ExplicitVarSizeWithDummy[q9] = [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q9 : int(1..3)])
              | q2 : int(1..5)]
         <=lex
         [or([s_ExplicitVarSizeWithDummy[q12] != 6 /\ s_ExplicitVarSizeWithDummy[q12] = q2 | q12 : int(1..3)])
              | q2 : int(1..5)]
             | q1 : int(1..4)]),
    and([s_ExplicitVarSizeWithDummy[q3] < s_ExplicitVarSizeWithDummy[q3 + 1] \/ s_ExplicitVarSizeWithDummy[q3] = 6
             | q3 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q4] = 6 -> s_ExplicitVarSizeWithDummy[q4 + 1] = 6 | q4 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q5] != 6) | q5 : int(1..3)]) <= 3

