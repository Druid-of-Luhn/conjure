language ESSENCE' 1.0

letting n be 5
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..5)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..6)
such that
    and([[or([q8 <= s_ExplicitVarSizeWithMarker_Marker /\
              s_ExplicitVarSizeWithMarker_Values[q8] =
              [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q8 : int(1..3)])
              | q2 : int(1..5)]
         <=lex
         [or([q11 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q11] = q2
                  | q11 : int(1..3)])
              | q2 : int(1..5)]
             | q1 : int(1..4)]),
    and([q3 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q3] < s_ExplicitVarSizeWithMarker_Values[q3 + 1]
             | q3 : int(1..2)]),
    and([q4 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q4] = 1 | q4 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= 3,
    and([s_ExplicitVarSizeWithDummy[q14] < s_ExplicitVarSizeWithDummy[q14 + 1] \/ s_ExplicitVarSizeWithDummy[q14] = 6
             | q14 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q15] = 6 -> s_ExplicitVarSizeWithDummy[q15 + 1] = 6 | q15 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q16] != 6) | q16 : int(1..3)]) <= 3,
    and([s_ExplicitVarSizeWithDummy[q19] != 6 ->
         or([q21 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q21] = s_ExplicitVarSizeWithDummy[q19]
                 | q21 : int(1..3)])
             | q19 : int(1..3)]),
    and([q23 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithDummy[q25] != 6 /\
             s_ExplicitVarSizeWithDummy[q25] = s_ExplicitVarSizeWithMarker_Values[q23]
                 | q25 : int(1..3)])
             | q23 : int(1..3)])

