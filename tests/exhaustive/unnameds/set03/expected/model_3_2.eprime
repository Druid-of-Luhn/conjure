language ESSENCE' 1.0

letting n be 5
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..5)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..6)
such that
    and([[or([q5 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q5] = q3 | q5 : int(1..3)])
              | q2 : int(1..5), q3 : int(1..5), q2 = q1 -> q3 = q1 + 1, q2 = q1 + 1 -> q3 = q1,
                q2 != q1 /\ q2 != q1 + 1 -> q3 = q2]
         <=lex
         [or([q7 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q7] = q2 | q7 : int(1..3)])
              | q2 : int(1..5)]
             | q1 : int(1..4)]),
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] < s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= 3,
    and([s_ExplicitVarSizeWithDummy[q8] < s_ExplicitVarSizeWithDummy[q8 + 1] \/ s_ExplicitVarSizeWithDummy[q8] = 6
             | q8 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q9] = 6 -> s_ExplicitVarSizeWithDummy[q9 + 1] = 6 | q9 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q10] != 6) | q10 : int(1..3)]) <= 3,
    and([s_ExplicitVarSizeWithDummy[q13] != 6 ->
         or([q15 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q15] = s_ExplicitVarSizeWithDummy[q13]
                 | q15 : int(1..3)])
             | q13 : int(1..3)]),
    and([q17 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithDummy[q19] != 6 /\
             s_ExplicitVarSizeWithDummy[q19] = s_ExplicitVarSizeWithMarker_Values[q17]
                 | q19 : int(1..3)])
             | q17 : int(1..3)])

