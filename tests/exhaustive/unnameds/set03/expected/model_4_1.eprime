language ESSENCE' 1.0

letting n be 5
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..5)
find s_Occurrence: matrix indexed by [int(1..5)] of bool
such that
    and([[or([s_ExplicitVarSizeWithFlags_Flags[q10] /\
              s_ExplicitVarSizeWithFlags_Values[q10] =
              [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q10 : int(1..3)])
              | q2 : int(1..5)]
         <=lex
         [or([s_ExplicitVarSizeWithFlags_Flags[q13] /\ s_ExplicitVarSizeWithFlags_Values[q13] = q2 | q13 : int(1..3)])
              | q2 : int(1..5)]
             | q1 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q3] < s_ExplicitVarSizeWithFlags_Values[q3 + 1]
             | q3 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q4] = false -> s_ExplicitVarSizeWithFlags_Values[q4] = 1 | q4 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q5] | q5 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q6]) | q6 : int(1..3)]) <= 3,
    sum([toInt(s_Occurrence[q16]) | q16 : int(1..5)]) <= 3,
    and([s_Occurrence[q17] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q19] /\ s_ExplicitVarSizeWithFlags_Values[q19] = q17 | q19 : int(1..3)])
             | q17 : int(1..5)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q21] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q21]]
             | q21 : int(1..3)])

