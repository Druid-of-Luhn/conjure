language ESSENCE' 1.0

letting n be 5
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..6)
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..5)
such that
    and([[or([s_ExplicitVarSizeWithDummy[q7] != 6 /\
              s_ExplicitVarSizeWithDummy[q7] = [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q7 : int(1..3)])
              | q2 : int(1..5)]
         <=lex
         [or([s_ExplicitVarSizeWithDummy[q10] != 6 /\ s_ExplicitVarSizeWithDummy[q10] = q2 | q10 : int(1..3)])
              | q2 : int(1..5)]
             | q1 : int(1..4)]),
    and([s_ExplicitVarSizeWithDummy[q1] < s_ExplicitVarSizeWithDummy[q1 + 1] \/ s_ExplicitVarSizeWithDummy[q1] = 6
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q2] = 6 -> s_ExplicitVarSizeWithDummy[q2 + 1] = 6 | q2 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q3] != 6) | q3 : int(1..3)]) <= 3,
    and([q13 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q13] < s_ExplicitVarSizeWithMarker_Values[q13 + 1]
             | q13 : int(1..2)]),
    and([q14 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q14] = 1 | q14 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= 3,
    and([q17 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithDummy[q19] != 6 /\
             s_ExplicitVarSizeWithDummy[q19] = s_ExplicitVarSizeWithMarker_Values[q17]
                 | q19 : int(1..3)])
             | q17 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q21] != 6 ->
         or([q23 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q23] = s_ExplicitVarSizeWithDummy[q21]
                 | q23 : int(1..3)])
             | q21 : int(1..3)])

