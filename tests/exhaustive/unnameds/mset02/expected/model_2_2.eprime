language ESSENCE' 1.0

given n: int
find s_ExplicitWithRepetition_Flag: int(0..2 * n * 2)
find s_ExplicitWithRepetition_Values: matrix indexed by [int(1..2 * n * 2)] of int(1..n)
such that
    and([[sum([toInt(q12 <= s_ExplicitWithRepetition_Flag) *
               toInt(s_ExplicitWithRepetition_Values[q12] =
                     [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)])
                   | q12 : int(1..2 * n * 2)])
              | q2 : int(1..n)]
         <=lex
         [sum([toInt(q15 <= s_ExplicitWithRepetition_Flag) * toInt(s_ExplicitWithRepetition_Values[q15] = q2)
                   | q15 : int(1..2 * n * 2)])
              | q2 : int(1..n)]
             | q1 : int(1..n - 1)]),
    and([q3 + 1 <= s_ExplicitWithRepetition_Flag ->
         s_ExplicitWithRepetition_Values[q3] <= s_ExplicitWithRepetition_Values[q3 + 1]
             | q3 : int(1..2 * n * 2 - 1)]),
    and([q4 > s_ExplicitWithRepetition_Flag -> s_ExplicitWithRepetition_Values[q4] = 1 | q4 : int(1..2 * n * 2)]),
    and([q6 <= s_ExplicitWithRepetition_Flag ->
         sum([toInt(q9 <= s_ExplicitWithRepetition_Flag) *
              toInt(s_ExplicitWithRepetition_Values[q9] = s_ExplicitWithRepetition_Values[q6])
                  | q9 : int(1..2 * n * 2)])
         <= 2
             | q6 : int(1..2 * n * 2)])

