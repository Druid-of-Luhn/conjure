language ESSENCE' 1.0

given n: int
find s_ExplicitWithFlags_Flags: matrix indexed by [int(1..2 * n)] of int(0..2)
find s_ExplicitWithFlags_Values: matrix indexed by [int(1..2 * n)] of int(1..n)
such that
    and([[sum([toInt(s_ExplicitWithFlags_Values[q9] =
                     [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)])
               * s_ExplicitWithFlags_Flags[q9]
                   | q9 : int(1..2 * n)])
              | q2 : int(1..n)]
         <=lex
         [sum([toInt(s_ExplicitWithFlags_Values[q11] = q2) * s_ExplicitWithFlags_Flags[q11] | q11 : int(1..2 * n)])
              | q2 : int(1..n)]
             | q1 : int(1..n - 1)]),
    and([s_ExplicitWithFlags_Flags[q3 + 1] > 0 -> s_ExplicitWithFlags_Values[q3] < s_ExplicitWithFlags_Values[q3 + 1]
             | q3 : int(1..2 * n - 1)]),
    and([s_ExplicitWithFlags_Flags[q4] = 0 -> s_ExplicitWithFlags_Values[q4] = 1 | q4 : int(1..2 * n)]),
    and([s_ExplicitWithFlags_Flags[q5 + 1] > 0 -> s_ExplicitWithFlags_Flags[q5] > 0 | q5 : int(1..2 * n - 1)])

