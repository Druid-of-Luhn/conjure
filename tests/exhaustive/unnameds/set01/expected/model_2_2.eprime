language ESSENCE' 1.0

letting n be 3
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
such that
    and([[or([s_ExplicitVarSizeWithDummy[q7] != 4 /\
              s_ExplicitVarSizeWithDummy[q7] = [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q7 : int(1..3)])
              | q2 : int(1..3)]
         <=lex
         [or([s_ExplicitVarSizeWithDummy[q10] != 4 /\ s_ExplicitVarSizeWithDummy[q10] = q2 | q10 : int(1..3)])
              | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q1] < s_ExplicitVarSizeWithDummy[q1 + 1] \/ s_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q2] = 4 -> s_ExplicitVarSizeWithDummy[q2 + 1] = 4 | q2 : int(1..2)])

