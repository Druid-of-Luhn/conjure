language ESSENCE' 1.0

letting n be 3
find s_Occurrence: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
such that
    and([[s_Occurrence[[q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]] | q2 : int(1..3)] <=lex
         [s_Occurrence[q2] | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q7 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q7] < s_ExplicitVarSizeWithFlags_Values[q7 + 1]
             | q7 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q8] = false -> s_ExplicitVarSizeWithFlags_Values[q8] = 1 | q8 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q9 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q9] | q9 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q13] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q13]]
             | q13 : int(1..3)]),
    and([s_Occurrence[q14] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q16] /\ s_ExplicitVarSizeWithFlags_Values[q16] = q14 | q16 : int(1..3)])
             | q14 : int(1..3)])

