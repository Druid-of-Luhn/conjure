language ESSENCE' 1.0

letting n be 3
find s_Occurrence: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
such that
    and([[s_Occurrence[[q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]] | q2 : int(1..3)] <=lex
         [s_Occurrence[q2] | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q7] < s_ExplicitVarSizeWithDummy[q7 + 1] \/ s_ExplicitVarSizeWithDummy[q7] = 4
             | q7 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q8] = 4 -> s_ExplicitVarSizeWithDummy[q8 + 1] = 4 | q8 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q12] != 4 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q12]] | q12 : int(1..3)]),
    and([s_Occurrence[q13] ->
         or([s_ExplicitVarSizeWithDummy[q15] != 4 /\ s_ExplicitVarSizeWithDummy[q15] = q13 | q15 : int(1..3)])
             | q13 : int(1..3)])

