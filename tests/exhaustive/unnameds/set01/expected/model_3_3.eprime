language ESSENCE' 1.0

letting n be 3
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([[or([q5 <= s_ExplicitVarSizeWithMarker_Marker /\
              s_ExplicitVarSizeWithMarker_Values[q5] = q3
                  | q5 : int(1..3)])
              | q2 : int(1..3), q3 : int(1..3), q2 = q1 -> q3 = q1 + 1,
                q2 = q1 + 1 -> q3 = q1, q2 != q1 /\ q2 != q1 + 1 -> q3 = q2]
         <=lex
         [or([q7 <= s_ExplicitVarSizeWithMarker_Marker /\
              s_ExplicitVarSizeWithMarker_Values[q7] = q2
                  | q7 : int(1..3)])
              | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] <
         s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q2] = 1
             | q2 : int(1..3)])

