language ESSENCE' 1.0

letting n be 3
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
such that
    and([[or([q6 <= s_ExplicitVarSizeWithMarker_Marker /\
              s_ExplicitVarSizeWithMarker_Values[q6] =
              [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q6 : int(1..3)])
              | q2 : int(1..3)]
         <=lex
         [or([q9 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q9] = q2 | q9 : int(1..3)])
              | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] < s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..3)])

