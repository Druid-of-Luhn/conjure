language ESSENCE' 1.0

letting n be 3
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([[or([s_ExplicitVarSizeWithDummy[q6] != 4 /\
              s_ExplicitVarSizeWithDummy[q6] = q3
                  | q6 : int(1..3)])
              | q2 : int(1..3), q3 : int(1..3), q2 = q1 -> q3 = q1 + 1,
                q2 = q1 + 1 -> q3 = q1, q2 != q1 /\ q2 != q1 + 1 -> q3 = q2]
         <=lex
         [or([s_ExplicitVarSizeWithDummy[q8] != 4 /\ s_ExplicitVarSizeWithDummy[q8] = q2
                  | q8 : int(1..3)])
              | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q1] < s_ExplicitVarSizeWithDummy[q1 + 1] \/
         s_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q2] = 4 ->
         s_ExplicitVarSizeWithDummy[q2 + 1] = 4
             | q2 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q9 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q9] <
         s_ExplicitVarSizeWithFlags_Values[q9 + 1]
             | q9 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q10] = false ->
         s_ExplicitVarSizeWithFlags_Values[q10] = 1
             | q10 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q11 + 1] ->
         s_ExplicitVarSizeWithFlags_Flags[q11]
             | q11 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q15] ->
         or([s_ExplicitVarSizeWithDummy[q17] != 4 /\
             s_ExplicitVarSizeWithDummy[q17] = s_ExplicitVarSizeWithFlags_Values[q15]
                 | q17 : int(1..3)])
             | q15 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q19] != 4 ->
         or([s_ExplicitVarSizeWithFlags_Flags[q21] /\
             s_ExplicitVarSizeWithFlags_Values[q21] = s_ExplicitVarSizeWithDummy[q19]
                 | q21 : int(1..3)])
             | q19 : int(1..3)])

