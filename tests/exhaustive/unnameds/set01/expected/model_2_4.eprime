language ESSENCE' 1.0

letting n be 3
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
such that
    and([[or([s_ExplicitVarSizeWithDummy[q7] != 4 /\
              s_ExplicitVarSizeWithDummy[q7] = [q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]
                  | q7 : int(1..3)])
              | q2 : int(1..3)]
         <=lex
         [or([s_ExplicitVarSizeWithDummy[q10] != 4 /\ s_ExplicitVarSizeWithDummy[q10] = q2 | q10 : int(1..3)])
              | q2 : int(1..3)]
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q1] < s_ExplicitVarSizeWithDummy[q1 + 1] \/ s_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q2] = 4 -> s_ExplicitVarSizeWithDummy[q2 + 1] = 4 | q2 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q13 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q13] < s_ExplicitVarSizeWithFlags_Values[q13 + 1]
             | q13 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q14] = false -> s_ExplicitVarSizeWithFlags_Values[q14] = 1
             | q14 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q15 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q15] | q15 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q19] ->
         or([s_ExplicitVarSizeWithDummy[q21] != 4 /\
             s_ExplicitVarSizeWithDummy[q21] = s_ExplicitVarSizeWithFlags_Values[q19]
                 | q21 : int(1..3)])
             | q19 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q23] != 4 ->
         or([s_ExplicitVarSizeWithFlags_Flags[q25] /\
             s_ExplicitVarSizeWithFlags_Values[q25] = s_ExplicitVarSizeWithDummy[q23]
                 | q25 : int(1..3)])
             | q23 : int(1..3)])

