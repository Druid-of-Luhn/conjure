language ESSENCE' 1.0

given n: int
find s_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..1 + (n - 1))] of bool
find s_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..1 + (n - 1))] of int(1..n)
such that
    and([[or([s_ExplicitVarSizeWithFlags_Flags[q7] /\
              s_ExplicitVarSizeWithFlags_Values[q7] = q3
                  | q7 : int(1..1 + (n - 1))])
              | q2 : int(1..n), q3 : int(1..n), q2 = q1 -> q3 = q1 + 1,
                q2 = q1 + 1 -> q3 = q1, q2 != q1 /\ q2 != q1 + 1 -> q3 = q2]
         <=lex
         [or([s_ExplicitVarSizeWithFlags_Flags[q9] /\
              s_ExplicitVarSizeWithFlags_Values[q9] = q2
                  | q9 : int(1..1 + (n - 1))])
              | q2 : int(1..n)]
             | q1 : int(1..n - 1)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q1] <
         s_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..1 + (n - 1) - 1)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         s_ExplicitVarSizeWithFlags_Values[q2] = 1
             | q2 : int(1..1 + (n - 1))]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         s_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..1 + (n - 1) - 1)])

