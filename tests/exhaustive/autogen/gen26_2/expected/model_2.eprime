language ESSENCE' 1.0

letting let1 be 10
letting let2 be 0
letting let3 be 0
find var1_PartitionOccurrence_NumParts: int(1..2)
find var1_PartitionOccurrence_WhichPart: matrix indexed by [bool] of int(1..2)
find var1_PartitionOccurrence_PartSizes:
        matrix indexed by [int(1..2)] of int(0..2)
find var1_PartitionOccurrence_FirstIndex: matrix indexed by [int(1..2)] of bool
such that
    false,
    and([q1 <= var1_PartitionOccurrence_NumParts ->
         var1_PartitionOccurrence_PartSizes[q1] <= let3
             | q1 : int(1..2)]),
    and([q1 > var1_PartitionOccurrence_NumParts ->
         var1_PartitionOccurrence_PartSizes[q1] = 0
             | q1 : int(1..2)]),
    10 <= var1_PartitionOccurrence_NumParts,
    var1_PartitionOccurrence_NumParts <= 0,
    var1_PartitionOccurrence_NumParts =
    max([var1_PartitionOccurrence_WhichPart[q4] | q4 : bool]),
    and([var1_PartitionOccurrence_PartSizes[q5] =
         sum([toInt(var1_PartitionOccurrence_WhichPart[q6] = q5) | q6 : bool])
             | q5 : int(1..2)]),
    and([q7 <= var1_PartitionOccurrence_NumParts ->
         and([var1_PartitionOccurrence_WhichPart[q8] = q7 ->
              var1_PartitionOccurrence_FirstIndex[q7] <= q8
                  | q8 : bool])
             | q7 : int(1..2)]),
    and([q7 <= var1_PartitionOccurrence_NumParts ->
         or([var1_PartitionOccurrence_WhichPart[q8] = q7 /\
             var1_PartitionOccurrence_FirstIndex[q7] = q8
                 | q8 : bool])
             | q7 : int(1..2)]),
    and([var1_PartitionOccurrence_PartSizes[q7] = 0 ->
         var1_PartitionOccurrence_FirstIndex[q7] = false
             | q7 : int(1..2)]),
    and([q9 <= var1_PartitionOccurrence_NumParts /\
         q10 <= var1_PartitionOccurrence_NumParts
         ->
         (q9 < q10 <->
          var1_PartitionOccurrence_FirstIndex[q9] <
          var1_PartitionOccurrence_FirstIndex[q10])
             | q9 : int(1..2), q10 : int(1..2)])

