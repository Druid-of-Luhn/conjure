language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..4)] of int(0..3)
find x_Occurrence: matrix indexed by [int(0..3)] of bool
find z: int(-100..100)
find aux1: int(-1..5)
such that
    and([and([x_ExplicitVarSizeWithFlags_Flags[q7], x_Occurrence[j],
              (x_ExplicitVarSizeWithFlags_Values[q7] + j) % 2 = 0; int(1..3)])
         -> x_ExplicitVarSizeWithFlags_Values[q7] + j - 1 <= aux1
             | q7 : int(1..4), j : int(0..3)]),
    or([and([x_ExplicitVarSizeWithFlags_Flags[q7], x_Occurrence[j],
             (x_ExplicitVarSizeWithFlags_Values[q7] + j) % 2 = 0; int(1..3)])
        /\ x_ExplicitVarSizeWithFlags_Values[q7] + j - 1 = aux1
            | q7 : int(1..4), j : int(0..3)]),
    z = aux1,
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = 0
             | q2 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..3)]),
    and([x_Occurrence[q8] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q10] /\
             x_ExplicitVarSizeWithFlags_Values[q10] = q8
                 | q10 : int(1..4)])
             | q8 : int(0..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q12] ->
         x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q12]]
             | q12 : int(1..4)])

