language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..4)] of int(0..3)
find z: int(-100..100)
find aux1: int(-1..5)
such that
    and([and([x_ExplicitVarSizeWithFlags_Flags[q6],
              x_ExplicitVarSizeWithFlags_Flags[q7],
              (x_ExplicitVarSizeWithFlags_Values[q6] + x_ExplicitVarSizeWithFlags_Values[q7])
              % 2
              = 0; int(1..3)])
         ->
         x_ExplicitVarSizeWithFlags_Values[q6] + x_ExplicitVarSizeWithFlags_Values[q7] -
         1
         <= aux1
             | q6 : int(1..4), q7 : int(1..4)]),
    or([and([x_ExplicitVarSizeWithFlags_Flags[q6],
             x_ExplicitVarSizeWithFlags_Flags[q7],
             (x_ExplicitVarSizeWithFlags_Values[q6] + x_ExplicitVarSizeWithFlags_Values[q7])
             % 2
             = 0; int(1..3)])
        /\
        x_ExplicitVarSizeWithFlags_Values[q6] + x_ExplicitVarSizeWithFlags_Values[q7] -
        1
        = aux1
            | q6 : int(1..4), q7 : int(1..4)]),
    z = aux1,
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = 0
             | q2 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..3)])

