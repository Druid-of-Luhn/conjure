language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..4)] of int(0..3)
find z: int(-100..100)
find aux1: int(-1..5)
such that
    and([and([q4 <= x_ExplicitVarSizeWithMarker_Marker,
              q5 <= x_ExplicitVarSizeWithMarker_Marker,
              (x_ExplicitVarSizeWithMarker_Values[q4] +
               x_ExplicitVarSizeWithMarker_Values[q5])
              % 2
              = 0; int(1..3)])
         ->
         x_ExplicitVarSizeWithMarker_Values[q4] + x_ExplicitVarSizeWithMarker_Values[q5]
         - 1
         <= aux1
             | q4 : int(1..4), q5 : int(1..4)]),
    or([and([q4 <= x_ExplicitVarSizeWithMarker_Marker,
             q5 <= x_ExplicitVarSizeWithMarker_Marker,
             (x_ExplicitVarSizeWithMarker_Values[q4] +
              x_ExplicitVarSizeWithMarker_Values[q5])
             % 2
             = 0; int(1..3)])
        /\
        x_ExplicitVarSizeWithMarker_Values[q4] + x_ExplicitVarSizeWithMarker_Values[q5]
        - 1
        = aux1
            | q4 : int(1..4), q5 : int(1..4)]),
    z = aux1,
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] <
         x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q2] = 0
             | q2 : int(1..4)])

