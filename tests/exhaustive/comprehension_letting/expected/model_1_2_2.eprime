language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(0..3)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..4)] of int(0..3)
find z: int(-100..100)
find aux1: int(-1..5)
such that
    and([and([x_Occurrence[i], q5 <= x_ExplicitVarSizeWithMarker_Marker,
              (i + x_ExplicitVarSizeWithMarker_Values[q5]) % 2 = 0; int(1..3)])
         -> i + x_ExplicitVarSizeWithMarker_Values[q5] - 1 <= aux1
             | i : int(0..3), q5 : int(1..4)]),
    or([and([x_Occurrence[i], q5 <= x_ExplicitVarSizeWithMarker_Marker,
             (i + x_ExplicitVarSizeWithMarker_Values[q5]) % 2 = 0; int(1..3)])
        /\ i + x_ExplicitVarSizeWithMarker_Values[q5] - 1 = aux1
            | i : int(0..3), q5 : int(1..4)]),
    z = aux1,
    and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q2] <
         x_ExplicitVarSizeWithMarker_Values[q2 + 1]
             | q2 : int(1..3)]),
    and([q3 > x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q3] = 0
             | q3 : int(1..4)]),
    and([q7 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q7]]
             | q7 : int(1..4)]),
    and([x_Occurrence[q8] ->
         or([q10 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q10] = q8
                 | q10 : int(1..4)])
             | q8 : int(0..3)])

