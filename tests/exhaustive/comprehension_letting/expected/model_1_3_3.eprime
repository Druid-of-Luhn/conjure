language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(0..3)] of bool
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..4)] of int(0..3)
find z: int(-100..100)
find aux1: int(-1..5)
such that
    and([and([x_Occurrence[i], x_ExplicitVarSizeWithFlags_Flags[q7],
              (i + x_ExplicitVarSizeWithFlags_Values[q7]) % 2 = 0; int(1..3)])
         -> i + x_ExplicitVarSizeWithFlags_Values[q7] - 1 <= aux1
             | i : int(0..3), q7 : int(1..4)]),
    or([and([x_Occurrence[i], x_ExplicitVarSizeWithFlags_Flags[q7],
             (i + x_ExplicitVarSizeWithFlags_Values[q7]) % 2 = 0; int(1..3)])
        /\ i + x_ExplicitVarSizeWithFlags_Values[q7] - 1 = aux1
            | i : int(0..3), q7 : int(1..4)]),
    z = aux1,
    and([x_ExplicitVarSizeWithFlags_Flags[q2 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q2] <
         x_ExplicitVarSizeWithFlags_Values[q2 + 1]
             | q2 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3] = false ->
         x_ExplicitVarSizeWithFlags_Values[q3] = 0
             | q3 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q4 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q4]
             | q4 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q9] ->
         x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q9]]
             | q9 : int(1..4)]),
    and([x_Occurrence[q10] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q12] /\
             x_ExplicitVarSizeWithFlags_Values[q12] = q10
                 | q12 : int(1..4)])
             | q10 : int(0..3)])

