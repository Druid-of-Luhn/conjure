language ESSENCE' 1.0

letting A be domain int(1..2)
find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
letting let1 be 1
find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_Explicit: matrix indexed by [int(1..let1)] of int(1..2)
such that
    and([s_Occurrence[q8] -> f_Function1DPartial_Flags[q8] | q8 : int(1..2)]),
    and([s_Explicit[q7] !=
         min([s_Occurrence[q11] * q11 + !s_Occurrence[q11] * 9999 | q11 : int(1..2)])
         ->
         and([f_Function1DPartial_Values[s_Explicit[q7]] >
              f_Function1DPartial_Values[min([s_Occurrence[q9] * q9 + !s_Occurrence[q9] * 9999
                                                  | q9 : int(1..2)])],
              f_Function1DPartial_Flags[s_Explicit[q7]],
              f_Function1DPartial_Flags[min([s_Occurrence[q10] * q10 +
                                             !s_Occurrence[q10] * 9999
                                                 | q10 : int(1..2)])]; int(1..3)])
             | q7 : int(1..let1)]),
    let1 = sum([s_Occurrence[q1] | q1 : int(1..2)]),
    and([f_Function1DPartial_Flags[q2] = false -> f_Function1DPartial_Values[q2] = 1
             | q2 : int(1..2)]),
    and([s_Explicit[q5] < s_Explicit[q5 + 1] | q5 : int(1..let1 - 1)]),
    and([s_Occurrence[s_Explicit[q13]] | q13 : int(1..let1)]),
    and([s_Occurrence[q14] -> or([s_Explicit[q16] = q14 | q16 : int(1..let1)])
             | q14 : int(1..2)])

