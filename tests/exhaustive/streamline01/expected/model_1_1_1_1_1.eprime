language ESSENCE' 1.0

letting A be domain int(1..2)
find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
letting q1 be 1
find s_Occurrence: matrix indexed by [int(1..2)] of bool
such that
    and([s_Occurrence[q4] -> f_Function1DPartial_Flags[q4] | q4 : int(1..2)]),
    and([s_Occurrence[i] /\
         i != min([s_Occurrence[q7] * q7 + !s_Occurrence[q7] * 9999 | q7 : int(1..2)])
         ->
         and([f_Function1DPartial_Values[i] >
              f_Function1DPartial_Values[min([s_Occurrence[q5] * q5 + !s_Occurrence[q5] * 9999
                                                  | q5 : int(1..2)])],
              f_Function1DPartial_Flags[i],
              f_Function1DPartial_Flags[min([s_Occurrence[q6] * q6 + !s_Occurrence[q6] * 9999
                                                 | q6 : int(1..2)])]; int(1..3)])
             | i : int(1..2)]),
    q1 = sum([s_Occurrence[q2] | q2 : int(1..2)]),
    and([f_Function1DPartial_Flags[q3] = false -> f_Function1DPartial_Values[q3] = 1
             | q3 : int(1..2)])

