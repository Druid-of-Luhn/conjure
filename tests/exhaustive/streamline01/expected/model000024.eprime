language ESSENCE' 1.0

letting A be domain int(1..2)
find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
letting q1 be 1
find s_Explicit: matrix indexed by [int(1..q1)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..2)] of bool
such that
    and([f_Function1DPartial_Flags[s_Explicit[q7]] | q7 : int(1..q1)]),
    and([s_Explicit[q5] != min([s_Explicit[q10] | q10 : int(1..q1)]) ->
         and([f_Function1DPartial_Values[s_Explicit[q5]] > f_Function1DPartial_Values[min([s_Occurrence[q6] * q6 + !s_Occurrence[q6] * 9999 | q6 : int(1..2)])],
              f_Function1DPartial_Flags[s_Explicit[q5]], f_Function1DPartial_Flags[min([s_Occurrence[q8] * q8 + !s_Occurrence[q8] * 9999 | q8 : int(1..2)])]; int(1..3)])
             | q5 : int(1..q1)]),
    and([s_Explicit[q2] < s_Explicit[q2 + 1] | q2 : int(1..q1 - 1)]),
    and([f_Function1DPartial_Flags[q3] = false -> f_Function1DPartial_Values[q3] = 1 | q3 : int(1..2)]),
    q1 = sum([s_Occurrence[q4] | q4 : int(1..2)]),
    and([s_Occurrence[q9] -> or([s_Explicit[q12] = q9 | q12 : int(1..q1)]) | q9 : int(1..2)]),
    and([s_Occurrence[s_Explicit[q13]] | q13 : int(1..q1)])

