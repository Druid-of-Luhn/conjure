language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2 * (1 + (3 - 1)))] of bool
find x_ExplicitVarSizeWithFlags_Values_isEven: matrix indexed by [int(1..2 * (1 + (3 - 1)))] of bool
find x_ExplicitVarSizeWithFlags_Values_theVal: matrix indexed by [int(1..2 * (1 + (3 - 1)))] of int(1..3)
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q2] -> (x_ExplicitVarSizeWithFlags_Values_theVal[q2] % 2 = 0 <-> x_ExplicitVarSizeWithFlags_Values_isEven[q2])
             | q2 : int(1..6)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values_isEven[q1] < x_ExplicitVarSizeWithFlags_Values_isEven[q1 + 1] \/
         x_ExplicitVarSizeWithFlags_Values_isEven[q1] = x_ExplicitVarSizeWithFlags_Values_isEven[q1 + 1] /\
         x_ExplicitVarSizeWithFlags_Values_theVal[q1] < x_ExplicitVarSizeWithFlags_Values_theVal[q1 + 1]
             | q1 : int(1..5)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1] = false -> x_ExplicitVarSizeWithFlags_Values_isEven[q1] = false /\ x_ExplicitVarSizeWithFlags_Values_theVal[q1] = 1
             | q1 : int(1..6)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..5)])

