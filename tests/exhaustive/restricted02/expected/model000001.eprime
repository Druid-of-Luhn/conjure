language ESSENCE' 1.0

find x_FunctionND: matrix indexed by [int(1..2), int(1..3)] of int(1..3)
such that
    and([and([!(q1_1 = q2_1 /\ q1_2 = q2_2) ->
              and([x_FunctionND[q1_1, q1_2] != x_FunctionND[q2_1, q2_2], or([q5_1 = q1_1 /\ q5_2 = q1_2 | q5_1 : int(i), q5_2 : int(1..3)]),
                   or([q6_1 = q2_1 /\ q6_2 = q2_2 | q6_1 : int(i), q6_2 : int(1..3)])])
                  | q1_1 : int(i), q1_2 : int(1..3), q2_1 : int(i), q2_2 : int(1..3)])
             | i : int(1..2)]),
    and([and([!(q3_1 = q4_1 /\ q3_2 = q4_2) ->
              and([x_FunctionND[q3_1, q3_2] != x_FunctionND[q4_1, q4_2], or([q7_1 = q3_1 /\ q7_2 = q3_2 | q7_1 : int(1..2), q7_2 : int(i)]),
                   or([q8_1 = q4_1 /\ q8_2 = q4_2 | q8_1 : int(1..2), q8_2 : int(i)])])
                  | q3_1 : int(1..2), q3_2 : int(i), q4_1 : int(1..2), q4_2 : int(i)])
             | i : int(1..3)])

