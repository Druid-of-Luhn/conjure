language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find s_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..2)] of int(1..2)
such that
    or([s_ExplicitVarSizeWithFlags_Flags[q8] /\
        s_ExplicitVarSizeWithFlags_Values[q8] = sum([s_Occurrence[q9] | q9 : int(1..2)])
            | q8 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] ->
    s_ExplicitVarSizeWithFlags_Values[1] < s_ExplicitVarSizeWithFlags_Values[2],
    and([s_ExplicitVarSizeWithFlags_Flags[q3] = false ->
         s_ExplicitVarSizeWithFlags_Values[q3] = 1
             | q3 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] -> s_ExplicitVarSizeWithFlags_Flags[1],
    and([s_ExplicitVarSizeWithFlags_Flags[q11] ->
         s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q11]]
             | q11 : int(1..2)]),
    and([s_Occurrence[q12] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q14] /\
             s_ExplicitVarSizeWithFlags_Values[q14] = q12
                 | q14 : int(1..2)])
             | q12 : int(1..2)])

