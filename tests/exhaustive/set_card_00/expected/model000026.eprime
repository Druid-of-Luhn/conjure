language ESSENCE' 1.0

find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..1 + (2 - 1))] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..1 + (2 - 1))] of int(1..2)
find s_ExplicitVarSizeWithMarker_Marker: int(0..1 + (2 - 1))
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..1 + (2 - 1))] of int(1..2)
such that
    or([s_ExplicitVarSizeWithFlags_Flags[q4] /\ s_ExplicitVarSizeWithFlags_Values[q4] = sum([s_ExplicitVarSizeWithFlags_Flags[q5] * 1 | q5 : int(1..2)])
            | q4 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] -> s_ExplicitVarSizeWithFlags_Values[1] < s_ExplicitVarSizeWithFlags_Values[2],
    and([s_ExplicitVarSizeWithFlags_Flags[q1] = false -> s_ExplicitVarSizeWithFlags_Values[q1] = 1 | q1 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] -> s_ExplicitVarSizeWithFlags_Flags[1],
    2 <= s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[1] < s_ExplicitVarSizeWithMarker_Values[2],
    and([q2 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..2)]),
    and([q6 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q7] /\ s_ExplicitVarSizeWithFlags_Values[q7] = s_ExplicitVarSizeWithMarker_Values[q6] | q7 : int(1..2)])
             | q6 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q8] ->
         or([q9 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q9] = s_ExplicitVarSizeWithFlags_Values[q8] | q9 : int(1..2)])
             | q8 : int(1..2)])

