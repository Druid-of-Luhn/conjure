language ESSENCE' 1.0

find s_ExplicitVarSizeWithMarker_Marker: int(0..2)
find s_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find s_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..2)] of int(1..2)
such that
    or([s_ExplicitVarSizeWithFlags_Flags[q4] /\
        s_ExplicitVarSizeWithFlags_Values[q4] = s_ExplicitVarSizeWithMarker_Marker
            | q4 : int(1..2)]),
    2 <= s_ExplicitVarSizeWithMarker_Marker ->
    s_ExplicitVarSizeWithMarker_Values[1] < s_ExplicitVarSizeWithMarker_Values[2],
    and([q1 > s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] = 1
             | q1 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] ->
    s_ExplicitVarSizeWithFlags_Values[1] < s_ExplicitVarSizeWithFlags_Values[2],
    and([s_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         s_ExplicitVarSizeWithFlags_Values[q2] = 1
             | q2 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] -> s_ExplicitVarSizeWithFlags_Flags[1],
    and([s_ExplicitVarSizeWithFlags_Flags[q5] ->
         or([q6 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q6] = s_ExplicitVarSizeWithFlags_Values[q5]
                 | q6 : int(1..2)])
             | q5 : int(1..2)]),
    and([q7 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q8] /\
             s_ExplicitVarSizeWithFlags_Values[q8] = s_ExplicitVarSizeWithMarker_Values[q7]
                 | q8 : int(1..2)])
             | q7 : int(1..2)])

