language ESSENCE' 1.0

find x_Explicit_ExplicitVarSizeWithMarker_Marker: matrix indexed by [int(1..2)] of int(0..3)
find x_Explicit_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..2), int(1..3)] of int(1..2)
such that
    x_Explicit_ExplicitVarSizeWithMarker_Marker[1] < x_Explicit_ExplicitVarSizeWithMarker_Marker[2] \/
    x_Explicit_ExplicitVarSizeWithMarker_Marker[1] = x_Explicit_ExplicitVarSizeWithMarker_Marker[2] /\
    x_Explicit_ExplicitVarSizeWithMarker_Values[1, ..] <lex x_Explicit_ExplicitVarSizeWithMarker_Values[2, ..],
    and([and([q2 + 1 <= x_Explicit_ExplicitVarSizeWithMarker_Marker[q1] ->
              x_Explicit_ExplicitVarSizeWithMarker_Values[q1, q2] < x_Explicit_ExplicitVarSizeWithMarker_Values[q1, q2 + 1]
                  | q2 : int(1..2)])
             | q1 : int(1..2)]),
    and([and([q2 > x_Explicit_ExplicitVarSizeWithMarker_Marker[q1] -> x_Explicit_ExplicitVarSizeWithMarker_Values[q1, q2] = 1 | q2 : int(1..3)]) | q1 : int(1..2)]),
    and([x_Explicit_ExplicitVarSizeWithMarker_Marker[q1] <= 3 | q1 : int(1..2)])

