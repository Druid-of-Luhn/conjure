language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..16)] of bool
find x_ExplicitVarSizeWithFlags_Values_1:
        matrix indexed by [int(1..16)] of int(1..4)
find x_ExplicitVarSizeWithFlags_Values_2:
        matrix indexed by [int(1..16)] of int(3..6)
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q3] ->
         x_ExplicitVarSizeWithFlags_Values_1[q3] =
         x_ExplicitVarSizeWithFlags_Values_2[q3]
             | q3 : int(1..16)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values_1[q1] <
         x_ExplicitVarSizeWithFlags_Values_1[q1 + 1]
         \/
         x_ExplicitVarSizeWithFlags_Values_1[q1] =
         x_ExplicitVarSizeWithFlags_Values_1[q1 + 1]
         /\
         x_ExplicitVarSizeWithFlags_Values_2[q1] <
         x_ExplicitVarSizeWithFlags_Values_2[q1 + 1]
             | q1 : int(1..15)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1] = false ->
         x_ExplicitVarSizeWithFlags_Values_1[q1] = 1 /\
         x_ExplicitVarSizeWithFlags_Values_2[q1] = 3
             | q1 : int(1..16)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q1]
             | q1 : int(1..15)]),
    2 <= sum([x_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..16)])

