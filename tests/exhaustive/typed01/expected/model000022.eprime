language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..1)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..1)] of int(1)
find y_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..1)] of bool
find y_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..1)] of int(1)
find y_Occurrence: matrix indexed by [int(1)] of bool
such that
    x_Occurrence[1] /\ (y_ExplicitVarSizeWithFlags_Flags[1] /\ y_ExplicitVarSizeWithFlags_Values[1] = 1) -> or([[; int(1..0)][q4] = 1 | q4 : int(1..0)]),
    and([x_Occurrence[1] /\ (y_ExplicitVarSizeWithFlags_Flags[1] /\ y_ExplicitVarSizeWithFlags_Values[1] = 1) /\ 1 = [; int(1..0)][q5] | q5 : int(1..0)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q1 + 1] -> y_ExplicitVarSizeWithFlags_Values[q1] < y_ExplicitVarSizeWithFlags_Values[q1 + 1] | q1 : int(1..1 - 1)]),
    y_ExplicitVarSizeWithFlags_Flags[1] = false -> y_ExplicitVarSizeWithFlags_Values[1] = 1,
    and([y_ExplicitVarSizeWithFlags_Flags[q1 + 1] -> y_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..1 - 1)]),
    and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] < x_ExplicitVarSizeWithMarker_Values[q2 + 1] | q2 : int(1..1 - 1)]),
    1 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[1] = 1,
    1 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[1]],
    x_Occurrence[1] -> 1 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[1] = 1,
    y_Occurrence[1] -> y_ExplicitVarSizeWithFlags_Flags[1] /\ y_ExplicitVarSizeWithFlags_Values[1] = 1,
    y_ExplicitVarSizeWithFlags_Flags[1] -> y_Occurrence[y_ExplicitVarSizeWithFlags_Values[1]]

