language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..4)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..4)] of int(1..4)
find aux1_Occurrence: matrix indexed by [int(1..2)] of bool
find aux2_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find aux2_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..2)] of int(3..4)
such that
    and([x_Function1DPartial_Flags[q11] -> aux1_Occurrence[q11]
             | q11 : int(1..4), or([q10 = q11 | q10 : int(1..2)])]),
    and([aux1_Occurrence[q7] ->
         or([x_Function1DPartial_Flags[q13] /\ q13 = q7
                 | q13 : int(1..4), or([q12 = q13 | q12 : int(1..2)])])
             | q7 : int(1..2)]),
    and([aux1_Occurrence[q6] ->
         x_Function1DPartial_Values[q6] % 2 = 0 /\ x_Function1DPartial_Flags[q6]
             | q6 : int(1..2)]),
    aux2_ExplicitVarSizeWithFlags_Flags[2] ->
    aux2_ExplicitVarSizeWithFlags_Values[1] <
    aux2_ExplicitVarSizeWithFlags_Values[2],
    and([aux2_ExplicitVarSizeWithFlags_Flags[q18] = false ->
         aux2_ExplicitVarSizeWithFlags_Values[q18] = 3
             | q18 : int(1..2)]),
    aux2_ExplicitVarSizeWithFlags_Flags[2] ->
    aux2_ExplicitVarSizeWithFlags_Flags[1],
    and([x_Function1DPartial_Flags[q27] ->
         or([aux2_ExplicitVarSizeWithFlags_Flags[q29] /\
             aux2_ExplicitVarSizeWithFlags_Values[q29] = q27
                 | q29 : int(1..2)])
             | q27 : int(1..4), or([q26 = q27 | q26 : int(3..4)])]),
    and([aux2_ExplicitVarSizeWithFlags_Flags[q22] ->
         or([x_Function1DPartial_Flags[q24] /\
             q24 = aux2_ExplicitVarSizeWithFlags_Values[q22]
                 | q24 : int(1..4), or([q23 = q24 | q23 : int(3..4)])])
             | q22 : int(1..2)]),
    and([aux2_ExplicitVarSizeWithFlags_Flags[q25] ->
         x_Function1DPartial_Values[aux2_ExplicitVarSizeWithFlags_Values[q25]] % 2 = 1 /\
         x_Function1DPartial_Flags[aux2_ExplicitVarSizeWithFlags_Values[q25]]
             | q25 : int(1..2)]),
    and([x_Function1DPartial_Flags[q1] /\ x_Function1DPartial_Flags[q2] ->
         x_Function1DPartial_Values[q1] != x_Function1DPartial_Values[q2]
             | q1 : int(1..4), q2 : int(1..4), q1 < q2]),
    and([x_Function1DPartial_Flags[q3] = false -> x_Function1DPartial_Values[q3] = 1
             | q3 : int(1..4)])

