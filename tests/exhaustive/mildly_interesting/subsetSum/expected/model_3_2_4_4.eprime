language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Explicit: matrix indexed by [int(1..fin1)] of int(fin2..fin3)
letting let1 be fin1
letting let2 be fin2
letting let3 be fin3
find x_ExplicitVarSizeWithMarker_Marker: int(0..let1)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..let1)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..let1)] of int(let2..let3)
such that
    and([q19 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([nums_Explicit[q21] = x_ExplicitVarSizeWithMarker_Values[q19] | q21 : int(1..fin1)])
             | q19 : int(1..let1)]),
    s =
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q17]) * x_ExplicitVarSizeWithFlags_Values[q17] | q17 : int(1..let1)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..let1 - 1)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = let2 | q2 : int(1..let1)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    x_ExplicitVarSizeWithMarker_Marker <= let1,
    and([x_ExplicitVarSizeWithFlags_Flags[q4 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q4] < x_ExplicitVarSizeWithFlags_Values[q4 + 1]
             | q4 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q5] = false -> x_ExplicitVarSizeWithFlags_Values[q5] = let2
             | q5 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q6 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q6] | q6 : int(1..let1 - 1)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q7]) | q7 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q7]) | q7 : int(1..let1)]) <= let1,
    and([x_ExplicitVarSizeWithFlags_Flags[q10] ->
         or([q12 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q12] = x_ExplicitVarSizeWithFlags_Values[q10]
                 | q12 : int(1..let1)])
             | q10 : int(1..let1)]),
    and([q14 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithFlags_Flags[q16] /\
             x_ExplicitVarSizeWithFlags_Values[q16] = x_ExplicitVarSizeWithMarker_Values[q14]
                 | q16 : int(1..let1)])
             | q14 : int(1..let1)])

