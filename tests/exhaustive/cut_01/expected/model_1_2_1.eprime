language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..3)
find x_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..3)] of int(1..3)
find cut1: bool
find cut2: bool
branching on
    [cut1, cut2, x_Occurrence, x_ExplicitVarSizeWithMarker_Marker,
     x_ExplicitVarSizeWithMarker_Values]
such that
    !cut1 <-> and([x_Occurrence[[1, 2; int(1..2)][q2]] | q2 : int(1..2)]),
    !cut2 <->
    or([q4 <= x_ExplicitVarSizeWithMarker_Marker /\
        x_ExplicitVarSizeWithMarker_Values[q4] = 1
            | q4 : int(1..3)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] <
         x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q1 > x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] = 1
             | q1 : int(1..3)]),
    and([q5 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q5]]
             | q5 : int(1..3)]),
    and([x_Occurrence[q3] ->
         or([q7 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q7] = q3
                 | q7 : int(1..3)])
             | q3 : int(1..3)])

