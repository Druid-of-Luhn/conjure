language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(1..3)
find cut1: bool
find cut2: bool
branching on
    [cut1, cut2, x_ExplicitVarSizeWithFlags_Flags,
     x_ExplicitVarSizeWithFlags_Values]
such that
    !cut1 <->
    and([or([x_ExplicitVarSizeWithFlags_Flags[q10] /\
             x_ExplicitVarSizeWithFlags_Values[q10] = [1, 2; int(1..2)][q8]
                 | q10 : int(1..3)])
             | q8 : int(1..2)]),
    !cut2 <->
    or([x_ExplicitVarSizeWithFlags_Flags[q12] /\
        x_ExplicitVarSizeWithFlags_Values[q12] = 1
            | q12 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = 1
             | q2 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..2)])

