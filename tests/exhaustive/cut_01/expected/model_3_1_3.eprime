language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(1..3)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
find cut1: bool
find cut2: bool
branching on
    [cut1, cut2, x_ExplicitVarSizeWithFlags_Flags,
     x_ExplicitVarSizeWithFlags_Values, x_Occurrence]
such that
    !cut1 <->
    and([or([x_ExplicitVarSizeWithFlags_Flags[q4] /\
             x_ExplicitVarSizeWithFlags_Values[q4] = [1, 2; int(1..2)][q2]
                 | q4 : int(1..3)])
             | q2 : int(1..2)]),
    !cut2 <-> x_Occurrence[1],
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1] = false ->
         x_ExplicitVarSizeWithFlags_Values[q1] = 1
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q1]
             | q1 : int(1..2)]),
    and([x_Occurrence[q3] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q6] /\
             x_ExplicitVarSizeWithFlags_Values[q6] = q3
                 | q6 : int(1..3)])
             | q3 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q7] ->
         x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q7]]
             | q7 : int(1..3)])

