language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: matrix indexed by [int(1..2)] of int(0..1 + (3 - 1))
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..2), int(1..1 + (3 - 1))] of int(1..3)
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2), int(1..1 + (3 - 1))] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2), int(1..1 + (3 - 1))] of int(1..3)
such that
    and([q5 <= x_ExplicitVarSizeWithMarker_Marker[j] -> x_ExplicitVarSizeWithMarker_Values[j, q5] % 2 = 0 | j : int(1..2), q5 : int(1..3)]),
    and([and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker[q1] -> x_ExplicitVarSizeWithMarker_Values[q1, q2] < x_ExplicitVarSizeWithMarker_Values[q1, q2 + 1]
                  | q2 : int(1..2)])
             | q1 : int(1..2)]),
    and([and([q2 > x_ExplicitVarSizeWithMarker_Marker[q1] -> x_ExplicitVarSizeWithMarker_Values[q1, q2] = 1 | q2 : int(1..3)]) | q1 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q3, q4 + 1] -> x_ExplicitVarSizeWithFlags_Values[q3, q4] < x_ExplicitVarSizeWithFlags_Values[q3, q4 + 1]
                  | q4 : int(1..2)])
             | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q3, q4] = false -> x_ExplicitVarSizeWithFlags_Values[q3, q4] = 1 | q4 : int(1..3)]) | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q3, q4 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q3, q4] | q4 : int(1..2)]) | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q6, q8] ->
              or([q9 <= x_ExplicitVarSizeWithMarker_Marker[q6] /\ x_ExplicitVarSizeWithMarker_Values[q6, q9] = x_ExplicitVarSizeWithFlags_Values[q6, q8] | q9 : int(1..3)])
                  | q8 : int(1..3)])
         /\
         and([q10 <= x_ExplicitVarSizeWithMarker_Marker[q6] ->
              or([x_ExplicitVarSizeWithFlags_Flags[q6, q11] /\ x_ExplicitVarSizeWithFlags_Values[q6, q11] = x_ExplicitVarSizeWithMarker_Values[q6, q10] | q11 : int(1..3)])
                  | q10 : int(1..3)])
             | q6 : int(1..2)])

