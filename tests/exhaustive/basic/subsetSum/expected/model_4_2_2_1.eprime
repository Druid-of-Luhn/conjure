language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Explicit: matrix indexed by [int(1..fin1)] of int(fin2..fin3)
letting let1 be fin1
letting let2 be fin2
letting let3 be fin3
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..let1)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..let1)] of int(let2..let3 + 1)
find x_Occurrence: matrix indexed by [int(let2..let3)] of bool
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q31] ->
         or([nums_Explicit[q33] = x_ExplicitVarSizeWithFlags_Values[q31]
                 | q33 : int(1..fin1)])
             | q31 : int(1..let1)]),
    s =
    sum([toInt(x_ExplicitVarSizeWithDummy[q21] != let3 + 1) *
         x_ExplicitVarSizeWithDummy[q21]
             | q21 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = let2
             | q2 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..let1 - 1)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]) <= let1,
    and([x_ExplicitVarSizeWithDummy[q6] < x_ExplicitVarSizeWithDummy[q6 + 1] \/
         x_ExplicitVarSizeWithDummy[q6] = let3 + 1
             | q6 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithDummy[q7] = let3 + 1 ->
         x_ExplicitVarSizeWithDummy[q7 + 1] = let3 + 1
             | q7 : int(1..let1 - 1)]),
    1 <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q8] != let3 + 1) | q8 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q8] != let3 + 1) | q8 : int(1..let1)]) <=
    let1,
    and([x_ExplicitVarSizeWithDummy[q23] != let3 + 1 ->
         or([x_ExplicitVarSizeWithFlags_Flags[q25] /\
             x_ExplicitVarSizeWithFlags_Values[q25] = x_ExplicitVarSizeWithDummy[q23]
                 | q25 : int(1..let1)])
             | q23 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q27] ->
         or([x_ExplicitVarSizeWithDummy[q29] != let3 + 1 /\
             x_ExplicitVarSizeWithDummy[q29] = x_ExplicitVarSizeWithFlags_Values[q27]
                 | q29 : int(1..let1)])
             | q27 : int(1..let1)]),
    1 <= sum([toInt(x_Occurrence[q10]) | q10 : int(let2..let3)]),
    sum([toInt(x_Occurrence[q10]) | q10 : int(let2..let3)]) <= let1,
    and([x_Occurrence[q11] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q13] /\
             x_ExplicitVarSizeWithFlags_Values[q13] = q11
                 | q13 : int(1..let1)])
             | q11 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q15] ->
         x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q15]]
             | q15 : int(1..let1)]),
    and([x_Occurrence[q16] ->
         or([x_ExplicitVarSizeWithDummy[q18] != let3 + 1 /\
             x_ExplicitVarSizeWithDummy[q18] = q16
                 | q18 : int(1..let1)])
             | q16 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithDummy[q20] != let3 + 1 ->
         x_Occurrence[x_ExplicitVarSizeWithDummy[q20]]
             | q20 : int(1..let1)])

