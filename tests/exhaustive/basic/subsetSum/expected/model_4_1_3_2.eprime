language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Occurrence: matrix indexed by [int(fin2..fin3)] of bool
letting let1 be fin1
letting let2 be fin2
letting let3 be fin3
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..let1)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithMarker_Marker: int(0..let1)
find x_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..let1)] of int(let2..let3, 1 + max(`int(let2..let3)`))
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q52] ->
         nums_Occurrence[x_ExplicitVarSizeWithFlags_Values[q52]]
             | q52 : int(1..let1)]),
    s =
    sum([toInt(q42 <= x_ExplicitVarSizeWithMarker_Marker) *
         x_ExplicitVarSizeWithMarker_Values[q42]
             | q42 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = let2
             | q2 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..let1 - 1)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]) <= let1,
    and([q6 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q6] <
         x_ExplicitVarSizeWithMarker_Values[q6 + 1]
             | q6 : int(1..let1 - 1)]),
    and([q7 > x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q7] = let2
             | q7 : int(1..let1)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    x_ExplicitVarSizeWithMarker_Marker <= let1,
    and([q44 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithFlags_Flags[q46] /\
             x_ExplicitVarSizeWithFlags_Values[q46] = x_ExplicitVarSizeWithMarker_Values[q44]
                 | q46 : int(1..let1)])
             | q44 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q48] ->
         or([q50 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q50] = x_ExplicitVarSizeWithFlags_Values[q48]
                 | q50 : int(1..let1)])
             | q48 : int(1..let1)]),
    and([x_ExplicitVarSizeWithDummy[q9] < x_ExplicitVarSizeWithDummy[q9 + 1] \/
         x_ExplicitVarSizeWithDummy[q9] = 1 + max([q13 | q13 : int(let2..let3)])
             | q9 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithDummy[q10] = 1 + max([q14 | q14 : int(let2..let3)]) ->
         x_ExplicitVarSizeWithDummy[q10 + 1] = 1 + max([q15 | q15 : int(let2..let3)])
             | q10 : int(1..let1 - 1)]),
    1 <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q11] !=
               1 + max([q16 | q16 : int(let2..let3)]))
             | q11 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q11] !=
               1 + max([q17 | q17 : int(let2..let3)]))
             | q11 : int(1..let1)])
    <= let1,
    and([x_ExplicitVarSizeWithDummy[q19] !=
         max([q22 | q22 : int(let2..let3, 1 + max([q23 | q23 : int(let2..let3)]))])
         ->
         or([x_ExplicitVarSizeWithFlags_Flags[q21] /\
             x_ExplicitVarSizeWithFlags_Values[q21] = x_ExplicitVarSizeWithDummy[q19]
                 | q21 : int(1..let1)])
             | q19 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q25] ->
         or([x_ExplicitVarSizeWithDummy[q27] !=
             max([q28 | q28 : int(let2..let3, 1 + max([q29 | q29 : int(let2..let3)]))])
             /\ x_ExplicitVarSizeWithDummy[q27] = x_ExplicitVarSizeWithFlags_Values[q25]
                 | q27 : int(1..let1)])
             | q25 : int(1..let1)]),
    and([x_ExplicitVarSizeWithDummy[q31] !=
         max([q34 | q34 : int(let2..let3, 1 + max([q35 | q35 : int(let2..let3)]))])
         ->
         or([q33 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q33] = x_ExplicitVarSizeWithDummy[q31]
                 | q33 : int(1..let1)])
             | q31 : int(1..let1)]),
    and([q37 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithDummy[q39] !=
             max([q40 | q40 : int(let2..let3, 1 + max([q41 | q41 : int(let2..let3)]))])
             /\ x_ExplicitVarSizeWithDummy[q39] = x_ExplicitVarSizeWithMarker_Values[q37]
                 | q39 : int(1..let1)])
             | q37 : int(1..let1)])

