language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Explicit: matrix indexed by [int(1..fin1)] of int(fin2..fin3)
letting let1 be fin1
letting let2 be fin2
letting let3 be fin3
find x_Occurrence: matrix indexed by [int(let2..let3)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..let1)
find x_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..let1)] of int(let2..let3, 1 + max(`int(let2..let3)`))
such that
    and([x_Occurrence[q41] -> or([nums_Explicit[q43] = q41 | q43 : int(1..fin1)])
             | q41 : int(let2..let3)]),
    s =
    sum([toInt(q35 <= x_ExplicitVarSizeWithMarker_Marker) *
         x_ExplicitVarSizeWithMarker_Values[q35]
             | q35 : int(1..let1)]),
    1 <= sum([toInt(x_Occurrence[q1]) | q1 : int(let2..let3)]),
    sum([toInt(x_Occurrence[q1]) | q1 : int(let2..let3)]) <= let1,
    and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q2] <
         x_ExplicitVarSizeWithMarker_Values[q2 + 1]
             | q2 : int(1..let1 - 1)]),
    and([q3 > x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q3] = let2
             | q3 : int(1..let1)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    x_ExplicitVarSizeWithMarker_Marker <= let1,
    and([q37 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q37]]
             | q37 : int(1..let1)]),
    and([x_Occurrence[q38] ->
         or([q40 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q40] = q38
                 | q40 : int(1..let1)])
             | q38 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithDummy[q5] < x_ExplicitVarSizeWithDummy[q5 + 1] \/
         x_ExplicitVarSizeWithDummy[q5] = 1 + max([q9 | q9 : int(let2..let3)])
             | q5 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithDummy[q6] = 1 + max([q10 | q10 : int(let2..let3)]) ->
         x_ExplicitVarSizeWithDummy[q6 + 1] = 1 + max([q11 | q11 : int(let2..let3)])
             | q6 : int(1..let1 - 1)]),
    1 <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q7] !=
               1 + max([q12 | q12 : int(let2..let3)]))
             | q7 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q7] !=
               1 + max([q13 | q13 : int(let2..let3)]))
             | q7 : int(1..let1)])
    <= let1,
    and([x_ExplicitVarSizeWithDummy[q15] !=
         max([q16 | q16 : int(let2..let3, 1 + max([q17 | q17 : int(let2..let3)]))])
         -> x_Occurrence[x_ExplicitVarSizeWithDummy[q15]]
             | q15 : int(1..let1)]),
    and([x_Occurrence[q18] ->
         or([x_ExplicitVarSizeWithDummy[q20] !=
             max([q21 | q21 : int(let2..let3, 1 + max([q22 | q22 : int(let2..let3)]))])
             /\ x_ExplicitVarSizeWithDummy[q20] = q18
                 | q20 : int(1..let1)])
             | q18 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithDummy[q24] !=
         max([q27 | q27 : int(let2..let3, 1 + max([q28 | q28 : int(let2..let3)]))])
         ->
         or([q26 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q26] = x_ExplicitVarSizeWithDummy[q24]
                 | q26 : int(1..let1)])
             | q24 : int(1..let1)]),
    and([q30 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithDummy[q32] !=
             max([q33 | q33 : int(let2..let3, 1 + max([q34 | q34 : int(let2..let3)]))])
             /\ x_ExplicitVarSizeWithDummy[q32] = x_ExplicitVarSizeWithMarker_Values[q30]
                 | q32 : int(1..let1)])
             | q30 : int(1..let1)])

