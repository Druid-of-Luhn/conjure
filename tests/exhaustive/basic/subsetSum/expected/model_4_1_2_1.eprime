language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Occurrence: matrix indexed by [int(fin2..fin3)] of bool
letting let1 be fin1
letting let2 be fin2
letting let3 be fin3
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..let1)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..let1)] of int(let2..let3, 1 + max(`int(let2..let3)`))
find x_Occurrence: matrix indexed by [int(let2..let3)] of bool
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q46] ->
         nums_Occurrence[x_ExplicitVarSizeWithFlags_Values[q46]]
             | q46 : int(1..let1)]),
    s =
    sum([toInt(x_ExplicitVarSizeWithDummy[q30] !=
               max([q31 | q31 : int(let2..let3, 1 + max([q32 | q32 : int(let2..let3)]))]))
         * x_ExplicitVarSizeWithDummy[q30]
             | q30 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = let2
             | q2 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..let1 - 1)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]) <= let1,
    and([x_ExplicitVarSizeWithDummy[q6] < x_ExplicitVarSizeWithDummy[q6 + 1] \/
         x_ExplicitVarSizeWithDummy[q6] = 1 + max([q11 | q11 : int(let2..let3)])
             | q6 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithDummy[q7] = 1 + max([q12 | q12 : int(let2..let3)]) ->
         x_ExplicitVarSizeWithDummy[q7 + 1] = 1 + max([q13 | q13 : int(let2..let3)])
             | q7 : int(1..let1 - 1)]),
    1 <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q8] !=
               1 + max([q14 | q14 : int(let2..let3)]))
             | q8 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q8] !=
               1 + max([q15 | q15 : int(let2..let3)]))
             | q8 : int(1..let1)])
    <= let1,
    and([x_ExplicitVarSizeWithDummy[q34] !=
         max([q37 | q37 : int(let2..let3, 1 + max([q38 | q38 : int(let2..let3)]))])
         ->
         or([x_ExplicitVarSizeWithFlags_Flags[q36] /\
             x_ExplicitVarSizeWithFlags_Values[q36] = x_ExplicitVarSizeWithDummy[q34]
                 | q36 : int(1..let1)])
             | q34 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q40] ->
         or([x_ExplicitVarSizeWithDummy[q42] !=
             max([q43 | q43 : int(let2..let3, 1 + max([q44 | q44 : int(let2..let3)]))])
             /\ x_ExplicitVarSizeWithDummy[q42] = x_ExplicitVarSizeWithFlags_Values[q40]
                 | q42 : int(1..let1)])
             | q40 : int(1..let1)]),
    1 <= sum([toInt(x_Occurrence[q10]) | q10 : int(let2..let3)]),
    sum([toInt(x_Occurrence[q10]) | q10 : int(let2..let3)]) <= let1,
    and([x_Occurrence[q16] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q18] /\
             x_ExplicitVarSizeWithFlags_Values[q18] = q16
                 | q18 : int(1..let1)])
             | q16 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q20] ->
         x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q20]]
             | q20 : int(1..let1)]),
    and([x_Occurrence[q21] ->
         or([x_ExplicitVarSizeWithDummy[q23] !=
             max([q24 | q24 : int(let2..let3, 1 + max([q25 | q25 : int(let2..let3)]))])
             /\ x_ExplicitVarSizeWithDummy[q23] = q21
                 | q23 : int(1..let1)])
             | q21 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithDummy[q27] !=
         max([q28 | q28 : int(let2..let3, 1 + max([q29 | q29 : int(let2..let3)]))])
         -> x_Occurrence[x_ExplicitVarSizeWithDummy[q27]]
             | q27 : int(1..let1)])

