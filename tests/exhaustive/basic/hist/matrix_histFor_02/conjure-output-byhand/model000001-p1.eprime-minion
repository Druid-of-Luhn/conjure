MINION 3
**VARIABLES**
DISCRETE m_00000 #
{0..99}
DISCRETE m_00001 #
{0..99}
DISCRETE m_00002 #
{0..99}
DISCRETE m_00003 #
{0..99}
DISCRETE m_00004 #
{0..99}
DISCRETE n_00000 #
{2..3}
DISCRETE n_00001 #
{2..3}
DISCRETE m_whichBin_00000 #
{1..2}
DISCRETE m_whichBin_00001 #
{1..2}
DISCRETE m_whichBin_00002 #
{1..2}
DISCRETE m_whichBin_00003 #
{1..2}
DISCRETE m_whichBin_00004 #
{1..2}
BOOL aux11 #(1=m_whichBin_00000)
BOOL aux12 #((m_00000<4) /\ (1<=m_00000))
BOOL aux13 #(2=m_whichBin_00000)
BOOL aux14 #((m_00000<6) /\ (4<=m_00000))
BOOL aux15 #(1=m_whichBin_00001)
BOOL aux16 #((m_00001<4) /\ (1<=m_00001))
BOOL aux17 #(2=m_whichBin_00001)
BOOL aux18 #((m_00001<6) /\ (4<=m_00001))
BOOL aux19 #(1=m_whichBin_00002)
BOOL aux20 #((m_00002<4) /\ (1<=m_00002))
BOOL aux21 #(2=m_whichBin_00002)
BOOL aux22 #((m_00002<6) /\ (4<=m_00002))
BOOL aux23 #(1=m_whichBin_00003)
BOOL aux24 #((m_00003<4) /\ (1<=m_00003))
BOOL aux25 #(2=m_whichBin_00003)
BOOL aux26 #((m_00003<6) /\ (4<=m_00003))
BOOL aux27 #(1=m_whichBin_00004)
BOOL aux28 #((m_00004<4) /\ (1<=m_00004))
BOOL aux29 #(2=m_whichBin_00004)
BOOL aux30 #((m_00004<6) /\ (4<=m_00004))
BOOL aux31 #((m_00000<4) /\ (1<=m_00000))
BOOL aux32 #((m_00001<4) /\ (1<=m_00001))
BOOL aux33 #((m_00002<4) /\ (1<=m_00002))
BOOL aux34 #((m_00003<4) /\ (1<=m_00003))
BOOL aux35 #((m_00004<4) /\ (1<=m_00004))
DISCRETE aux36 #(aux31 + aux32 + aux33 + aux34 + aux35)
{0..5}
BOOL aux37 #((m_00000<6) /\ (4<=m_00000))
BOOL aux38 #((m_00001<6) /\ (4<=m_00001))
BOOL aux39 #((m_00002<6) /\ (4<=m_00002))
BOOL aux40 #((m_00003<6) /\ (4<=m_00003))
BOOL aux41 #((m_00004<6) /\ (4<=m_00004))
DISCRETE aux42 #(aux37 + aux38 + aux39 + aux40 + aux41)
{0..5}
DISCRETE aux43 #(n_00000 + n_00001)
{4..6}
**VARIABLES**
ALIAS bins_1[2]=[1, 4]
**VARIABLES**
ALIAS bins_2[2]=[4, 6]
**SEARCH**
PRINT[[m_00000],[m_00001],[m_00002],[m_00003],[m_00004],[n_00000],[n_00001],[m_whichBin_00000],[m_whichBin_00001],[m_whichBin_00002],[m_whichBin_00003],[m_whichBin_00004]]
VARORDER STATIC [m_00000, m_00001, m_00002, m_00003, m_00004, n_00000, n_00001, m_whichBin_00000, m_whichBin_00001, m_whichBin_00002, m_whichBin_00003, m_whichBin_00004]
VARORDER AUX [m_00000,m_00001,m_00002,m_00003,m_00004,n_00000,n_00001,m_whichBin_00000,m_whichBin_00001,m_whichBin_00002,m_whichBin_00003,m_whichBin_00004,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43]
**CONSTRAINTS**
reify(w-literal(m_whichBin_00000,1), aux11)
reify(watched-and({ineq(m_00000, 4, -1),ineq(1, m_00000, 0)}), aux12)
reify(w-literal(m_whichBin_00000,2), aux13)
reify(watched-and({ineq(m_00000, 6, -1),ineq(4, m_00000, 0)}), aux14)
reify(w-literal(m_whichBin_00001,1), aux15)
reify(watched-and({ineq(m_00001, 4, -1),ineq(1, m_00001, 0)}), aux16)
reify(w-literal(m_whichBin_00001,2), aux17)
reify(watched-and({ineq(m_00001, 6, -1),ineq(4, m_00001, 0)}), aux18)
reify(w-literal(m_whichBin_00002,1), aux19)
reify(watched-and({ineq(m_00002, 4, -1),ineq(1, m_00002, 0)}), aux20)
reify(w-literal(m_whichBin_00002,2), aux21)
reify(watched-and({ineq(m_00002, 6, -1),ineq(4, m_00002, 0)}), aux22)
reify(w-literal(m_whichBin_00003,1), aux23)
reify(watched-and({ineq(m_00003, 4, -1),ineq(1, m_00003, 0)}), aux24)
reify(w-literal(m_whichBin_00003,2), aux25)
reify(watched-and({ineq(m_00003, 6, -1),ineq(4, m_00003, 0)}), aux26)
reify(w-literal(m_whichBin_00004,1), aux27)
reify(watched-and({ineq(m_00004, 4, -1),ineq(1, m_00004, 0)}), aux28)
reify(w-literal(m_whichBin_00004,2), aux29)
reify(watched-and({ineq(m_00004, 6, -1),ineq(4, m_00004, 0)}), aux30)
reify(watched-and({ineq(m_00000, 4, -1),ineq(1, m_00000, 0)}), aux31)
reify(watched-and({ineq(m_00001, 4, -1),ineq(1, m_00001, 0)}), aux32)
reify(watched-and({ineq(m_00002, 4, -1),ineq(1, m_00002, 0)}), aux33)
reify(watched-and({ineq(m_00003, 4, -1),ineq(1, m_00003, 0)}), aux34)
reify(watched-and({ineq(m_00004, 4, -1),ineq(1, m_00004, 0)}), aux35)
reify(watched-and({ineq(m_00000, 6, -1),ineq(4, m_00000, 0)}), aux37)
reify(watched-and({ineq(m_00001, 6, -1),ineq(4, m_00001, 0)}), aux38)
reify(watched-and({ineq(m_00002, 6, -1),ineq(4, m_00002, 0)}), aux39)
reify(watched-and({ineq(m_00003, 6, -1),ineq(4, m_00003, 0)}), aux40)
reify(watched-and({ineq(m_00004, 6, -1),ineq(4, m_00004, 0)}), aux41)
w-literal(m_00002,5)
eq(aux11, aux12)
eq(aux13, aux14)
eq(aux15, aux16)
eq(aux17, aux18)
eq(aux19, aux20)
eq(aux21, aux22)
eq(aux23, aux24)
eq(aux25, aux26)
eq(aux27, aux28)
eq(aux29, aux30)
gaceq(aux36,n_00000)
gaceq(aux42,n_00001)
gccweak([m_whichBin_00000, m_whichBin_00001, m_whichBin_00002, m_whichBin_00003, m_whichBin_00004],[1, 2],[n_00000, n_00001])
w-literal(aux43,5)
sumleq([aux31,aux32,aux33,aux34,aux35],aux36)
sumgeq([aux31,aux32,aux33,aux34,aux35],aux36)
sumleq([aux37,aux38,aux39,aux40,aux41],aux42)
sumgeq([aux37,aux38,aux39,aux40,aux41],aux42)
sumleq([n_00000,n_00001],aux43)
sumgeq([n_00000,n_00001],aux43)
**EOF**
