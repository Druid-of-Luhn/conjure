language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find aux1_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..3)] of int(1..3, 4)
find aux2_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..3)] of int(1..3, 4)
find aux3_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find aux3_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([aux1_ExplicitVarSizeWithDummy[q10] < aux1_ExplicitVarSizeWithDummy[q10 + 1]
         \/ aux1_ExplicitVarSizeWithDummy[q10] = 4
             | q10 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithDummy[q11] = 4 ->
         aux1_ExplicitVarSizeWithDummy[q11 + 1] = 4
             | q11 : int(1..2)]),
    and([x_Function1DPartial_Flags[q14] ->
         or([aux1_ExplicitVarSizeWithDummy[q16] != 4 /\
             aux1_ExplicitVarSizeWithDummy[q16] = x_Function1DPartial_Values[q14]
                 | q16 : int(1..3)])
             | q14 : int(1..3)]),
    and([aux1_ExplicitVarSizeWithDummy[q17] != 4 ->
         or([x_Function1DPartial_Flags[q18] /\
             x_Function1DPartial_Values[q18] = aux1_ExplicitVarSizeWithDummy[q17]
                 | q18 : int(1..3)])
             | q17 : int(1..3)]),
    and([aux2_ExplicitVarSizeWithDummy[q24] < aux2_ExplicitVarSizeWithDummy[q24 + 1]
         \/ aux2_ExplicitVarSizeWithDummy[q24] = 4
             | q24 : int(1..2)]),
    and([aux2_ExplicitVarSizeWithDummy[q25] = 4 ->
         aux2_ExplicitVarSizeWithDummy[q25 + 1] = 4
             | q25 : int(1..2)]),
    and([x_Function1DPartial_Flags[q28] ->
         or([aux2_ExplicitVarSizeWithDummy[q30] != 4 /\
             aux2_ExplicitVarSizeWithDummy[q30] = x_Function1DPartial_Values[q28]
                 | q30 : int(1..3)])
             | q28 : int(1..3)]),
    and([aux2_ExplicitVarSizeWithDummy[q31] != 4 ->
         or([x_Function1DPartial_Flags[q32] /\
             x_Function1DPartial_Values[q32] = aux2_ExplicitVarSizeWithDummy[q31]
                 | q32 : int(1..3)])
             | q31 : int(1..3)]),
    and([aux3_ExplicitVarSizeWithFlags_Flags[q38 + 1] ->
         aux3_ExplicitVarSizeWithFlags_Values[q38] <
         aux3_ExplicitVarSizeWithFlags_Values[q38 + 1]
             | q38 : int(1..2)]),
    and([aux3_ExplicitVarSizeWithFlags_Flags[q39] = false ->
         aux3_ExplicitVarSizeWithFlags_Values[q39] = 1
             | q39 : int(1..3)]),
    and([aux3_ExplicitVarSizeWithFlags_Flags[q40 + 1] ->
         aux3_ExplicitVarSizeWithFlags_Flags[q40]
             | q40 : int(1..2)]),
    and([x_Function1DPartial_Flags[q43] ->
         or([aux3_ExplicitVarSizeWithFlags_Flags[q45] /\
             aux3_ExplicitVarSizeWithFlags_Values[q45] = x_Function1DPartial_Values[q43]
                 | q45 : int(1..3)])
             | q43 : int(1..3)]),
    and([aux3_ExplicitVarSizeWithFlags_Flags[q46] ->
         or([x_Function1DPartial_Flags[q47] /\
             x_Function1DPartial_Values[q47] = aux3_ExplicitVarSizeWithFlags_Values[q46]
                 | q47 : int(1..3)])
             | q46 : int(1..3)]),
    or([aux1_ExplicitVarSizeWithDummy[q19] != 4 /\
        aux1_ExplicitVarSizeWithDummy[q19] = 1
            | q19 : int(1..3)]),
    or([aux2_ExplicitVarSizeWithDummy[q33] != 4 /\
        aux2_ExplicitVarSizeWithDummy[q33] = 2
            | q33 : int(1..3)]),
    and([aux3_ExplicitVarSizeWithFlags_Flags[q48] ->
         1 = aux3_ExplicitVarSizeWithFlags_Values[q48] \/
         2 = aux3_ExplicitVarSizeWithFlags_Values[q48]
             | q48 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1
             | q1 : int(1..3)])

