language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find aux1_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..3)] of int(1..3, 4)
find aux2_ExplicitVarSizeWithMarker_Marker: int(0..3)
find aux2_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..3)] of int(1..3)
find aux3_ExplicitVarSizeWithMarker_Marker: int(0..3)
find aux3_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([aux1_ExplicitVarSizeWithDummy[q10] < aux1_ExplicitVarSizeWithDummy[q10 + 1]
         \/ aux1_ExplicitVarSizeWithDummy[q10] = 4
             | q10 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithDummy[q11] = 4 ->
         aux1_ExplicitVarSizeWithDummy[q11 + 1] = 4
             | q11 : int(1..2)]),
    and([x_Function1DPartial_Flags[q14] ->
         or([aux1_ExplicitVarSizeWithDummy[q16] != 4 /\
             aux1_ExplicitVarSizeWithDummy[q16] = x_Function1DPartial_Values[q14]
                 | q16 : int(1..3)])
             | q14 : int(1..3)]),
    and([aux1_ExplicitVarSizeWithDummy[q17] != 4 ->
         or([x_Function1DPartial_Flags[q18] /\
             x_Function1DPartial_Values[q18] = aux1_ExplicitVarSizeWithDummy[q17]
                 | q18 : int(1..3)])
             | q17 : int(1..3)]),
    and([q24 + 1 <= aux2_ExplicitVarSizeWithMarker_Marker ->
         aux2_ExplicitVarSizeWithMarker_Values[q24] <
         aux2_ExplicitVarSizeWithMarker_Values[q24 + 1]
             | q24 : int(1..2)]),
    and([q25 > aux2_ExplicitVarSizeWithMarker_Marker ->
         aux2_ExplicitVarSizeWithMarker_Values[q25] = 1
             | q25 : int(1..3)]),
    and([x_Function1DPartial_Flags[q27] ->
         or([q29 <= aux2_ExplicitVarSizeWithMarker_Marker /\
             aux2_ExplicitVarSizeWithMarker_Values[q29] = x_Function1DPartial_Values[q27]
                 | q29 : int(1..3)])
             | q27 : int(1..3)]),
    and([q30 <= aux2_ExplicitVarSizeWithMarker_Marker ->
         or([x_Function1DPartial_Flags[q31] /\
             x_Function1DPartial_Values[q31] = aux2_ExplicitVarSizeWithMarker_Values[q30]
                 | q31 : int(1..3)])
             | q30 : int(1..3)]),
    and([q37 + 1 <= aux3_ExplicitVarSizeWithMarker_Marker ->
         aux3_ExplicitVarSizeWithMarker_Values[q37] <
         aux3_ExplicitVarSizeWithMarker_Values[q37 + 1]
             | q37 : int(1..2)]),
    and([q38 > aux3_ExplicitVarSizeWithMarker_Marker ->
         aux3_ExplicitVarSizeWithMarker_Values[q38] = 1
             | q38 : int(1..3)]),
    and([x_Function1DPartial_Flags[q40] ->
         or([q42 <= aux3_ExplicitVarSizeWithMarker_Marker /\
             aux3_ExplicitVarSizeWithMarker_Values[q42] = x_Function1DPartial_Values[q40]
                 | q42 : int(1..3)])
             | q40 : int(1..3)]),
    and([q43 <= aux3_ExplicitVarSizeWithMarker_Marker ->
         or([x_Function1DPartial_Flags[q44] /\
             x_Function1DPartial_Values[q44] = aux3_ExplicitVarSizeWithMarker_Values[q43]
                 | q44 : int(1..3)])
             | q43 : int(1..3)]),
    or([aux1_ExplicitVarSizeWithDummy[q19] != 4 /\
        aux1_ExplicitVarSizeWithDummy[q19] = 1
            | q19 : int(1..3)]),
    or([q32 <= aux2_ExplicitVarSizeWithMarker_Marker /\
        aux2_ExplicitVarSizeWithMarker_Values[q32] = 2
            | q32 : int(1..3)]),
    and([q45 <= aux3_ExplicitVarSizeWithMarker_Marker ->
         1 = aux3_ExplicitVarSizeWithMarker_Values[q45] \/
         2 = aux3_ExplicitVarSizeWithMarker_Values[q45]
             | q45 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1
             | q1 : int(1..3)])

