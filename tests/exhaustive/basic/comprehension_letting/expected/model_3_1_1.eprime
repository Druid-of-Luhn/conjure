language ESSENCE' 1.0

find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..4)] of int(1..4)
find s_Occurrence: matrix indexed by [int(1..4)] of bool
letting let1 be -100
find x: int(-100..100)
find aux1: int(-16..3)
such that
    and([and([s_ExplicitVarSizeWithFlags_Flags[q7], s_Occurrence[j],
              s_ExplicitVarSizeWithFlags_Values[q7] != j,
              allDiff([s_ExplicitVarSizeWithFlags_Values[q7] + j,
                       s_ExplicitVarSizeWithFlags_Values[q7] * j,
                       s_ExplicitVarSizeWithFlags_Values[q7] / j; int(1..3)]),
              (s_ExplicitVarSizeWithFlags_Values[q7] - j) % 2 = 0; int(1..5)])
         ->
         min([s_ExplicitVarSizeWithFlags_Values[q7] + j,
              s_ExplicitVarSizeWithFlags_Values[q7] - j,
              s_ExplicitVarSizeWithFlags_Values[q7] * j,
              s_ExplicitVarSizeWithFlags_Values[q7] / j; int(1..4)])
         <= aux1
             | q7 : int(1..4), j : int(1..4)]),
    or([and([s_ExplicitVarSizeWithFlags_Flags[q7], s_Occurrence[j],
             s_ExplicitVarSizeWithFlags_Values[q7] != j,
             allDiff([s_ExplicitVarSizeWithFlags_Values[q7] + j,
                      s_ExplicitVarSizeWithFlags_Values[q7] * j,
                      s_ExplicitVarSizeWithFlags_Values[q7] / j; int(1..3)]),
             (s_ExplicitVarSizeWithFlags_Values[q7] - j) % 2 = 0; int(1..5)])
        /\
        min([s_ExplicitVarSizeWithFlags_Values[q7] + j,
             s_ExplicitVarSizeWithFlags_Values[q7] - j,
             s_ExplicitVarSizeWithFlags_Values[q7] * j,
             s_ExplicitVarSizeWithFlags_Values[q7] / j; int(1..4)])
        = aux1
            | q7 : int(1..4), j : int(1..4)]),
    x = aux1,
    and([s_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q1] <
         s_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         s_ExplicitVarSizeWithFlags_Values[q2] = 1
             | q2 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         s_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..3)]),
    and([s_Occurrence[q8] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q10] /\
             s_ExplicitVarSizeWithFlags_Values[q10] = q8
                 | q10 : int(1..4)])
             | q8 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q12] ->
         s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q12]]
             | q12 : int(1..4)])

