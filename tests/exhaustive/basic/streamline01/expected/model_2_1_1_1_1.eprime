language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
letting let1 be 1
find s_Explicit: matrix indexed by [int(1)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..2)] of bool
find conjure_aux1: matrix indexed by [int(1..2)] of int(1..2)
find conjure_aux2: matrix indexed by [int(1..2)] of int(1..2)
find conjure_aux3: int(1..2)
such that
    f_Function1DPartial_Flags[s_Explicit[1]],
    and([and([s_Occurrence[q12] -> q12 >= conjure_aux1[i] | q12 : int(1..2)]) | i : int(1..2)]),
    and([or([s_Occurrence[q12] /\ q12 = conjure_aux1[i] | q12 : int(1..2)]) | i : int(1..2)]),
    and([and([s_Occurrence[q13] -> q13 >= conjure_aux2[i] | q13 : int(1..2)]) | i : int(1..2)]),
    and([or([s_Occurrence[q13] /\ q13 = conjure_aux2[i] | q13 : int(1..2)]) | i : int(1..2)]),
    and([s_Occurrence[q14] -> q14 >= conjure_aux3 | q14 : int(1..2)]),
    or([s_Occurrence[q14] /\ q14 = conjure_aux3 | q14 : int(1..2)]),
    and([s_Occurrence[i] /\ i != conjure_aux3 ->
         and([f_Function1DPartial_Values[i] > f_Function1DPartial_Values[conjure_aux1[i]], f_Function1DPartial_Flags[i],
              f_Function1DPartial_Flags[conjure_aux2[i]];
                  int(1..3)])
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q3] = false -> f_Function1DPartial_Values[q3] = 1 | q3 : int(1..2)]),
    1 = sum([toInt(s_Occurrence[q6]) | q6 : int(1..2)]),
    and([s_Occurrence[q7] -> s_Explicit[1] = q7 | q7 : int(1..2)]),
    s_Occurrence[s_Explicit[1]]

