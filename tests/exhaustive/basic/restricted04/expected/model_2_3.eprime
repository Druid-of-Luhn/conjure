language ESSENCE' 1.0

find x_FunctionNDPartial_Flags: matrix indexed by [int(1..2), int(1..2)] of bool
find x_FunctionNDPartial_Values:
        matrix indexed by [int(1..2), int(1..2)] of int(1..3)
find aux2_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..2), int(1..3)] of bool
find aux2_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..2), int(1..3)] of int(1..3)
find aux1_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find aux1_ExplicitVarSizeWithFlags_Values_1:
        matrix indexed by [int(1..2)] of int(1)
find aux1_ExplicitVarSizeWithFlags_Values_2:
        matrix indexed by [int(1..2)] of int(1..2)
such that
    and([and([aux2_ExplicitVarSizeWithFlags_Flags[q17, q22 + 1] ->
              aux2_ExplicitVarSizeWithFlags_Values[q17, q22] <
              aux2_ExplicitVarSizeWithFlags_Values[q17, q22 + 1]
                  | q22 : int(1..2)])
             | q17 : int(1..2)]),
    and([and([aux2_ExplicitVarSizeWithFlags_Flags[q17, q23] = false ->
              aux2_ExplicitVarSizeWithFlags_Values[q17, q23] = 1
                  | q23 : int(1..3)])
             | q17 : int(1..2)]),
    and([and([aux2_ExplicitVarSizeWithFlags_Flags[q17, q24 + 1] ->
              aux2_ExplicitVarSizeWithFlags_Flags[q17, q24]
                  | q24 : int(1..2)])
             | q17 : int(1..2)]),
    and([and([x_FunctionNDPartial_Flags[q27_1, q27_2] ->
              or([aux2_ExplicitVarSizeWithFlags_Flags[q17, q29] /\
                  aux2_ExplicitVarSizeWithFlags_Values[q17, q29] =
                  x_FunctionNDPartial_Values[q27_1, q27_2]
                      | q29 : int(1..3)])
                  | q27_1 : int(1..2), q27_2 : int(1..2)])
             | q17 : int(1..2)]),
    and([and([aux2_ExplicitVarSizeWithFlags_Flags[q17, q30] ->
              or([x_FunctionNDPartial_Flags[q31_1, q31_2] /\
                  x_FunctionNDPartial_Values[q31_1, q31_2] =
                  aux2_ExplicitVarSizeWithFlags_Values[q17, q30]
                      | q31_1 : int(1..2), q31_2 : int(1..2)])
                  | q30 : int(1..3)])
             | q17 : int(1..2)]),
    aux1_ExplicitVarSizeWithFlags_Flags[2] ->
    aux1_ExplicitVarSizeWithFlags_Values_1[1] <
    aux1_ExplicitVarSizeWithFlags_Values_1[2]
    \/
    aux1_ExplicitVarSizeWithFlags_Values_1[1] =
    aux1_ExplicitVarSizeWithFlags_Values_1[2]
    /\
    aux1_ExplicitVarSizeWithFlags_Values_2[1] <
    aux1_ExplicitVarSizeWithFlags_Values_2[2],
    and([aux1_ExplicitVarSizeWithFlags_Flags[q10] = false ->
         aux1_ExplicitVarSizeWithFlags_Values_1[q10] = 1 /\
         aux1_ExplicitVarSizeWithFlags_Values_2[q10] = 1
             | q10 : int(1..2)]),
    aux1_ExplicitVarSizeWithFlags_Flags[2] ->
    aux1_ExplicitVarSizeWithFlags_Flags[1],
    and([x_FunctionNDPartial_Flags[q34_1, q34_2] ->
         or([aux1_ExplicitVarSizeWithFlags_Flags[q36] /\
             (aux1_ExplicitVarSizeWithFlags_Values_1[q36] = q34_1 /\
              aux1_ExplicitVarSizeWithFlags_Values_2[q36] = q34_2)
                 | q36 : int(1..2)])
             | q34_1 : int(1..2), q34_2 : int(1..2),
               or([1 = q34_1 /\ q33_2 = q34_2 | q33_2 : int(1..2)])]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q14] ->
         or([x_FunctionNDPartial_Flags[q16_1, q16_2] /\
             (q16_1 = aux1_ExplicitVarSizeWithFlags_Values_1[q14] /\
              q16_2 = aux1_ExplicitVarSizeWithFlags_Values_2[q14])
                 | q16_1 : int(1..2), q16_2 : int(1..2),
                   or([1 = q16_1 /\ q15_2 = q16_2 | q15_2 : int(1..2)])])
             | q14 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q17] ->
         or([aux2_ExplicitVarSizeWithFlags_Flags[q17, q32] /\
             aux2_ExplicitVarSizeWithFlags_Values[q17, q32] =
             aux1_ExplicitVarSizeWithFlags_Values_2[q17]
                 | q32 : int(1..3)])
             | q17 : int(1..2)]),
    and([x_FunctionNDPartial_Flags[q1_1, q1_2] /\
         x_FunctionNDPartial_Flags[q2_1, q2_2]
         ->
         x_FunctionNDPartial_Values[q1_1, q1_2] != x_FunctionNDPartial_Values[q2_1, q2_2]
             | q1_1 : int(1..2), q1_2 : int(1..2), q2_1 : int(1..2), q2_2 : int(1..2),
               q1_1 < q2_1 \/ q1_1 = q2_1 /\ q1_2 < q2_2]),
    and([x_FunctionNDPartial_Flags[q3_1, q3_2] = false ->
         x_FunctionNDPartial_Values[q3_1, q3_2] = 1
             | q3_1 : int(1..2), q3_2 : int(1..2)])

