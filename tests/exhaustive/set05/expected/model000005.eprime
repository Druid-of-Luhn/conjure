language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..3)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..4)
such that
    x_Occurrence[1],
    or([x_ExplicitVarSizeWithMarker_Values[q3] = 2 /\ q3 <= x_ExplicitVarSizeWithMarker_Marker | q3 : int(1..3)]),
    sum([x_Occurrence[q1] | q1 : int(1..4)]) <= 3,
    and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] < x_ExplicitVarSizeWithMarker_Values[q2 + 1] | q2 : int(1..3 - 1)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..3)]),
    x_ExplicitVarSizeWithMarker_Marker <= 3,
    and([q4 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q4]] | q4 : int(1..3)]),
    and([x_Occurrence[q7] -> or([x_ExplicitVarSizeWithMarker_Values[q5] = q7 /\ q5 <= x_ExplicitVarSizeWithMarker_Marker | q5 : int(1..3)]) | q7 : int(1..4)]),
    and([q6 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q6]] | q6 : int(1..3)]),
    and([x_Occurrence[q10] -> or([x_ExplicitVarSizeWithMarker_Values[q8] = q10 /\ q8 <= x_ExplicitVarSizeWithMarker_Marker | q8 : int(1..3)]) | q10 : int(1..4)])

