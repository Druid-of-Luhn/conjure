language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..3)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..4)
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..4)
such that
    x_Occurrence[1],
    or([x_ExplicitVarSizeWithMarker_Values[q3] = 2 /\ q3 <= x_ExplicitVarSizeWithMarker_Marker | q3 : int(1..3)]),
    sum([x_Occurrence[q1] | q1 : int(1..4)]) <= 3,
    and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] < x_ExplicitVarSizeWithMarker_Values[q2 + 1] | q2 : int(1..3 - 1)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..3)]),
    x_ExplicitVarSizeWithMarker_Marker <= 3,
    and([q6 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q6]] | q6 : int(1..3)]),
    and([x_Occurrence[q5] -> or([x_ExplicitVarSizeWithMarker_Values[q7] = q5 /\ q7 <= x_ExplicitVarSizeWithMarker_Marker | q7 : int(1..3)]) | q5 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q4 + 1] -> x_ExplicitVarSizeWithFlags_Values[q4] < x_ExplicitVarSizeWithFlags_Values[q4 + 1] | q4 : int(1..3 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q4] = false -> x_ExplicitVarSizeWithFlags_Values[q4] = 1 | q4 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q4 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q4] | q4 : int(1..3 - 1)]),
    sum([x_ExplicitVarSizeWithFlags_Flags[q4] | q4 : int(1..3)]) <= 3,
    and([x_ExplicitVarSizeWithFlags_Flags[q9] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q9]] | q9 : int(1..3)]),
    and([x_Occurrence[q8] -> or([x_ExplicitVarSizeWithFlags_Values[q10] = q8 /\ x_ExplicitVarSizeWithFlags_Flags[q10] | q10 : int(1..3)]) | q8 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q12] ->
         or([x_ExplicitVarSizeWithMarker_Values[q11] = x_ExplicitVarSizeWithFlags_Values[q12] /\
             q11 <= x_ExplicitVarSizeWithMarker_Marker | q11 : int(1..3)]) | q12 : int(1..3)]),
    and([q14 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithFlags_Values[q13] = x_ExplicitVarSizeWithMarker_Values[q14] /\
             x_ExplicitVarSizeWithFlags_Flags[q13] | q13 : int(1..3)]) | q14 : int(1..3)])

