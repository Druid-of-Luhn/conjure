language ESSENCE' 1.0

given v: int(1..20)
find f_Function1D: matrix indexed by [int(1..v)] of int(1..v)
such that
    and([f_Function1D[shadow2] = shadow2 | shadow2 : int(1..v)]),
    and([[f_Function1D[[q2, q1 + 1, q1; int(0..2)][toInt(q2 = q1) + 2 * toInt(q2 = q1 + 1)]] = q3
              | q2 : int(1..v), q3 : int(1..v)]
         <=lex [f_Function1D[q2] = q3 | q2 : int(1..v), q3 : int(1..v)]
             | q1 : int(1..v - 1)])

