language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find aux1_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find aux1_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([aux1_ExplicitVarSizeWithFlags_Flags[q10 + 1] ->
         aux1_ExplicitVarSizeWithFlags_Values[q10] <
         aux1_ExplicitVarSizeWithFlags_Values[q10 + 1]
             | q10 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q11] = false ->
         aux1_ExplicitVarSizeWithFlags_Values[q11] = 1
             | q11 : int(1..3)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q12 + 1] ->
         aux1_ExplicitVarSizeWithFlags_Flags[q12]
             | q12 : int(1..2)]),
    and([x_Function1DPartial_Flags[q16] ->
         or([aux1_ExplicitVarSizeWithFlags_Flags[q22] /\
             aux1_ExplicitVarSizeWithFlags_Values[q22] = q16
                 | q22 : int(1..3)])
             | q16 : int(1..3)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q17] ->
         or([x_Function1DPartial_Flags[q18] /\
             q18 = aux1_ExplicitVarSizeWithFlags_Values[q17]
                 | q18 : int(1..3)])
             | q17 : int(1..3)]),
    x_Function1DPartial_Flags[1],
    x_Function1DPartial_Flags[2],
    and([aux1_ExplicitVarSizeWithFlags_Flags[q15] ->
         1 = aux1_ExplicitVarSizeWithFlags_Values[q15] \/
         2 = aux1_ExplicitVarSizeWithFlags_Values[q15]
             | q15 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1
             | q1 : int(1..3)])

