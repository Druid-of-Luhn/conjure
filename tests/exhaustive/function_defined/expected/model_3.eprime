language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find aux1_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find aux1_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([aux1_ExplicitVarSizeWithFlags_Flags[q11 + 1] ->
         aux1_ExplicitVarSizeWithFlags_Values[q11] <
         aux1_ExplicitVarSizeWithFlags_Values[q11 + 1]
             | q11 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q12] = false ->
         aux1_ExplicitVarSizeWithFlags_Values[q12] = 1
             | q12 : int(1..3)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q13 + 1] ->
         aux1_ExplicitVarSizeWithFlags_Flags[q13]
             | q13 : int(1..2)]),
    and([x_Function1DPartial_Flags[q17] ->
         or([aux1_ExplicitVarSizeWithFlags_Flags[q24] /\
             aux1_ExplicitVarSizeWithFlags_Values[q24] = q17
                 | q24 : int(1..3)])
             | q17 : int(1..3)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q18] ->
         or([x_Function1DPartial_Flags[q19] /\
             q19 = aux1_ExplicitVarSizeWithFlags_Values[q18]
                 | q19 : int(1..3)])
             | q18 : int(1..3)]),
    and([x_Function1DPartial_Flags[[1, 2; int(1..2)][q6]] | q6 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q16] ->
         or([[1, 2; int(1..2)][q22] = aux1_ExplicitVarSizeWithFlags_Values[q16]
                 | q22 : int(1..2)])
             | q16 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1
             | q1 : int(1..3)])

