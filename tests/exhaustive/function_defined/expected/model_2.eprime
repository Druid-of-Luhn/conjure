language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find aux1_ExplicitVarSizeWithMarker_Marker: int(0..3)
find aux1_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..3)] of int(1..3)
such that
    and([q11 + 1 <= aux1_ExplicitVarSizeWithMarker_Marker ->
         aux1_ExplicitVarSizeWithMarker_Values[q11] <
         aux1_ExplicitVarSizeWithMarker_Values[q11 + 1]
             | q11 : int(1..2)]),
    and([q12 > aux1_ExplicitVarSizeWithMarker_Marker ->
         aux1_ExplicitVarSizeWithMarker_Values[q12] = 1
             | q12 : int(1..3)]),
    and([x_Function1DPartial_Flags[q15] ->
         or([q22 <= aux1_ExplicitVarSizeWithMarker_Marker /\
             aux1_ExplicitVarSizeWithMarker_Values[q22] = q15
                 | q22 : int(1..3)])
             | q15 : int(1..3)]),
    and([q16 <= aux1_ExplicitVarSizeWithMarker_Marker ->
         or([x_Function1DPartial_Flags[q17] /\
             q17 = aux1_ExplicitVarSizeWithMarker_Values[q16]
                 | q17 : int(1..3)])
             | q16 : int(1..3)]),
    and([x_Function1DPartial_Flags[[1, 2; int(1..2)][q6]] | q6 : int(1..2)]),
    and([q14 <= aux1_ExplicitVarSizeWithMarker_Marker ->
         or([[1, 2; int(1..2)][q20] = aux1_ExplicitVarSizeWithMarker_Values[q14]
                 | q20 : int(1..2)])
             | q14 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1
             | q1 : int(1..3)])

