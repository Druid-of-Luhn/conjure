language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find q4_ExplicitVarSizeWithMarker_Marker: int(0..3)
find q4_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
such that
    and([q3 + 1 <= q4_ExplicitVarSizeWithMarker_Marker -> q4_ExplicitVarSizeWithMarker_Values[q3] < q4_ExplicitVarSizeWithMarker_Values[q3 + 1] | q3 : int(1..2)]),
    and([q3 > q4_ExplicitVarSizeWithMarker_Marker -> q4_ExplicitVarSizeWithMarker_Values[q3] = 1 | q3 : int(1..3)]),
    and([x_Function1DPartial_Flags[q5] -> or([q11 <= q4_ExplicitVarSizeWithMarker_Marker /\ q4_ExplicitVarSizeWithMarker_Values[q11] = q5 | q11 : int(1..3)])
             | q5 : int(1..3)]),
    and([q9 <= q4_ExplicitVarSizeWithMarker_Marker -> or([x_Function1DPartial_Flags[q6] /\ q6 = q4_ExplicitVarSizeWithMarker_Values[q9] | q6 : int(1..3)])
             | q9 : int(1..3)]),
    and([x_Function1DPartial_Flags[[1, 2; int(1..2)][q2]] | q2 : int(1..2)]),
    and([q8 <= q4_ExplicitVarSizeWithMarker_Marker -> or([[1, 2; int(1..2)][q7] = q4_ExplicitVarSizeWithMarker_Values[q8] | q7 : int(1..2)]) | q8 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1 | q1 : int(1..3)])

