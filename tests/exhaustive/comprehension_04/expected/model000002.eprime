language ESSENCE' 1.0

find x: int(0..1000)
such that
    x =
    sum([1   | i_ExplicitVarSizeWithFlags_Flags : matrix indexed by [int(1..2)] of bool,
               i_ExplicitVarSizeWithFlags_Values_1 : matrix indexed by [int(1..2)] of int(7..9),
               i_ExplicitVarSizeWithFlags_Values_2 : matrix indexed by [int(1..2)] of bool,
               and([i_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
                    i_ExplicitVarSizeWithFlags_Values_1[q1] < i_ExplicitVarSizeWithFlags_Values_1[q1 + 1] \/
                    i_ExplicitVarSizeWithFlags_Values_1[q1] = i_ExplicitVarSizeWithFlags_Values_1[q1 + 1] /\
                    i_ExplicitVarSizeWithFlags_Values_2[q1] < i_ExplicitVarSizeWithFlags_Values_2[q1 + 1]
                        | q1 : int(1..2 - 1)]),
               and([i_ExplicitVarSizeWithFlags_Flags[q1] = false -> i_ExplicitVarSizeWithFlags_Values_1[q1] = 7 /\ i_ExplicitVarSizeWithFlags_Values_2[q1] = false
                        | q1 : int(1..2)]),
               and([i_ExplicitVarSizeWithFlags_Flags[q1 + 1] -> i_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..2 - 1)]),
               1 <= sum([i_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..2)]),
               sum([i_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..2)]) <= 2])

