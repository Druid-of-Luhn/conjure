language ESSENCE' 1.0

given p1: int
letting q1 be p1
find a_Function1DPartial_Flags: matrix indexed by [int(0..q1)] of bool
find a_Function1DPartial_Values: matrix indexed by [int(0..q1)] of int(1..3)
such that
    and([a_Function1DPartial_Flags[q2] /\ a_Function1DPartial_Flags[q3] ->
         a_Function1DPartial_Values[q2] != a_Function1DPartial_Values[q3]
             | q2 : int(0..q1), q3 : int(0..q1), q2 != q3]),
    and([or([a_Function1DPartial_Flags[q3] /\ a_Function1DPartial_Values[q3] = q2
                 | q3 : int(0..q1)])
             | q2 : int(1..3)]),
    and([a_Function1DPartial_Flags[q2] = false -> a_Function1DPartial_Values[q2] = 1
             | q2 : int(0..q1)])

