language ESSENCE' 1.0

find b: bool
find i: int(0..5)
find x: int(1..2)
find aux1_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find aux1_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2)] of bool
find aux2_ExplicitVarSizeWithMarker_Marker: int(0..2)
find aux2_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..2)] of bool
such that
    aux1_ExplicitVarSizeWithFlags_Flags[2] ->
    aux1_ExplicitVarSizeWithFlags_Values[1] <
    aux1_ExplicitVarSizeWithFlags_Values[2],
    and([aux1_ExplicitVarSizeWithFlags_Flags[q8] = false ->
         aux1_ExplicitVarSizeWithFlags_Values[q8] = false
             | q8 : int(1..2)]),
    aux1_ExplicitVarSizeWithFlags_Flags[2] ->
    aux1_ExplicitVarSizeWithFlags_Flags[1],
    or([aux1_ExplicitVarSizeWithFlags_Flags[q37] /\
        aux1_ExplicitVarSizeWithFlags_Values[q37] = false
            | q37 : int(1..2)]),
    or([aux1_ExplicitVarSizeWithFlags_Flags[q39] /\
        aux1_ExplicitVarSizeWithFlags_Values[q39]
            | q39 : int(1..2)]),
    and([aux1_ExplicitVarSizeWithFlags_Flags[q13] ->
         false = aux1_ExplicitVarSizeWithFlags_Values[q13] \/
         aux1_ExplicitVarSizeWithFlags_Values[q13]
             | q13 : int(1..2)]),
    2 <= aux2_ExplicitVarSizeWithMarker_Marker ->
    aux2_ExplicitVarSizeWithMarker_Values[1] <
    aux2_ExplicitVarSizeWithMarker_Values[2],
    and([q25 > aux2_ExplicitVarSizeWithMarker_Marker ->
         aux2_ExplicitVarSizeWithMarker_Values[q25] = false
             | q25 : int(1..2)]),
    or([q31 <= aux2_ExplicitVarSizeWithMarker_Marker /\
        aux2_ExplicitVarSizeWithMarker_Values[q31] = false
            | q31 : int(1..2)]),
    or([q33 <= aux2_ExplicitVarSizeWithMarker_Marker /\
        aux2_ExplicitVarSizeWithMarker_Values[q33]
            | q33 : int(1..2)]),
    and([q28 <= aux2_ExplicitVarSizeWithMarker_Marker ->
         false = aux2_ExplicitVarSizeWithMarker_Values[q28] \/
         aux2_ExplicitVarSizeWithMarker_Values[q28]
             | q28 : int(1..2)]),
    sum([toInt(false = b) * 5 | true]) + toInt(2 = x /\ b) * x = i,
    or([aux1_ExplicitVarSizeWithFlags_Flags[q12] /\
        and([toInt(false = aux1_ExplicitVarSizeWithFlags_Values[q12]) * 5 +
             toInt(aux1_ExplicitVarSizeWithFlags_Values[q12]) * 2
             =
             toInt(false = aux1_ExplicitVarSizeWithFlags_Values[q12]) * 5 +
             toInt(aux1_ExplicitVarSizeWithFlags_Values[q12]) * x,
             false = aux1_ExplicitVarSizeWithFlags_Values[q12] \/
             aux1_ExplicitVarSizeWithFlags_Values[q12],
             or([q27 <= aux2_ExplicitVarSizeWithMarker_Marker /\
                 aux2_ExplicitVarSizeWithMarker_Values[q27] =
                 aux1_ExplicitVarSizeWithFlags_Values[q12]
                     | q27 : int(1..2)]); int(1..3)])
        /\ aux1_ExplicitVarSizeWithFlags_Values[q12] = b
            | q12 : int(1..2)])

