language ESSENCE' 1.0

find x_ExplicitBounded_Length: int(4..4)
find x_ExplicitBounded_Values: matrix indexed by [int(1..4)] of int(1..3)
find aux1_ExplicitBounded_Length: int(2..2)
find aux1_ExplicitBounded_Values: matrix indexed by [int(1..2)] of int(1..4)
such that
    and([!or([and([i = x_ExplicitBounded_Values[q2 + q4] /\
                   q2 + q4 <= x_ExplicitBounded_Length
                       | q4 : int(1..2)])
                  | q2 : int(0..3)])
             | i : int(1..3)]),
    aux1_ExplicitBounded_Values[1] < aux1_ExplicitBounded_Values[2],
    1 <= aux1_ExplicitBounded_Length,
    2 <= aux1_ExplicitBounded_Length,
    and([[1, 3; int(1..2)][q7] =
         x_ExplicitBounded_Values[aux1_ExplicitBounded_Values[q7]]
         /\ q7 <= aux1_ExplicitBounded_Length
         /\
         (aux1_ExplicitBounded_Values[q7] <= x_ExplicitBounded_Length /\
          q7 <= aux1_ExplicitBounded_Length)
             | q7 : int(1..2)]),
    !or([and([[1, 3; int(1..2)][q10] = x_ExplicitBounded_Values[q8 + q10] /\
              q8 + q10 <= x_ExplicitBounded_Length
                  | q10 : int(1..2)])
             | q8 : int(0..3)])

