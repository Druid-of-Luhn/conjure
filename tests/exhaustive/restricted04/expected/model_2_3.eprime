language ESSENCE' 1.0

find x_FunctionNDPartial_Flags: matrix indexed by [int(1..2), int(1..2)] of bool
find x_FunctionNDPartial_Values:
        matrix indexed by [int(1..2), int(1..2)] of int(1..3)
find q3_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find q3_ExplicitVarSizeWithFlags_Values_1:
        matrix indexed by [int(1..2)] of int(1)
find q3_ExplicitVarSizeWithFlags_Values_2:
        matrix indexed by [int(1..2)] of int(1..2)
find q10_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..2), int(1..3)] of bool
find q10_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..2), int(1..3)] of int(1..3)
such that
    q3_ExplicitVarSizeWithFlags_Flags[2] ->
    q3_ExplicitVarSizeWithFlags_Values_1[1] <
    q3_ExplicitVarSizeWithFlags_Values_1[2]
    \/
    q3_ExplicitVarSizeWithFlags_Values_1[1] =
    q3_ExplicitVarSizeWithFlags_Values_1[2]
    /\
    q3_ExplicitVarSizeWithFlags_Values_2[1] <
    q3_ExplicitVarSizeWithFlags_Values_2[2],
    and([q3_ExplicitVarSizeWithFlags_Flags[q7] = false ->
         q3_ExplicitVarSizeWithFlags_Values_1[q7] = 1 /\
         q3_ExplicitVarSizeWithFlags_Values_2[q7] = 1
             | q7 : int(1..2)]),
    q3_ExplicitVarSizeWithFlags_Flags[2] -> q3_ExplicitVarSizeWithFlags_Flags[1],
    and([x_FunctionNDPartial_Flags[q17_1, q17_2] ->
         or([q3_ExplicitVarSizeWithFlags_Flags[q18] /\
             (q3_ExplicitVarSizeWithFlags_Values_1[q18] = q17_1 /\
              q3_ExplicitVarSizeWithFlags_Values_2[q18] = q17_2)
                 | q18 : int(1..2)])
             | q17_1 : int(1..2), q17_2 : int(1..2),
               or([1 = q17_1 /\ q13_2 = q17_2 | q13_2 : int(1..2)])]),
    and([q3_ExplicitVarSizeWithFlags_Flags[q4] ->
         or([x_FunctionNDPartial_Flags[q19_1, q19_2] /\
             (q19_1 = q3_ExplicitVarSizeWithFlags_Values_1[q4] /\
              q19_2 = q3_ExplicitVarSizeWithFlags_Values_2[q4])
                 | q19_1 : int(1..2), q19_2 : int(1..2),
                   or([1 = q19_1 /\ q5_2 = q19_2 | q5_2 : int(1..2)])])
             | q4 : int(1..2)]),
    and([and([q10_ExplicitVarSizeWithFlags_Flags[q8, q9 + 1] ->
              q10_ExplicitVarSizeWithFlags_Values[q8, q9] <
              q10_ExplicitVarSizeWithFlags_Values[q8, q9 + 1]
                  | q9 : int(1..2)])
             | q8 : int(1..2)]),
    and([and([q10_ExplicitVarSizeWithFlags_Flags[q8, q9] = false ->
              q10_ExplicitVarSizeWithFlags_Values[q8, q9] = 1
                  | q9 : int(1..3)])
             | q8 : int(1..2)]),
    and([and([q10_ExplicitVarSizeWithFlags_Flags[q8, q9 + 1] ->
              q10_ExplicitVarSizeWithFlags_Flags[q8, q9]
                  | q9 : int(1..2)])
             | q8 : int(1..2)]),
    and([and([x_FunctionNDPartial_Flags[q11_1, q11_2] ->
              or([q10_ExplicitVarSizeWithFlags_Flags[q8, q16] /\
                  q10_ExplicitVarSizeWithFlags_Values[q8, q16] =
                  x_FunctionNDPartial_Values[q11_1, q11_2]
                      | q16 : int(1..3)])
                  | q11_1 : int(1..2), q11_2 : int(1..2)])
             | q8 : int(1..2)]),
    and([and([q10_ExplicitVarSizeWithFlags_Flags[q8, q15] ->
              or([x_FunctionNDPartial_Flags[q12_1, q12_2] /\
                  x_FunctionNDPartial_Values[q12_1, q12_2] =
                  q10_ExplicitVarSizeWithFlags_Values[q8, q15]
                      | q12_1 : int(1..2), q12_2 : int(1..2)])
                  | q15 : int(1..3)])
             | q8 : int(1..2)]),
    and([q3_ExplicitVarSizeWithFlags_Flags[q8] ->
         or([q10_ExplicitVarSizeWithFlags_Flags[q8, q14] /\
             q10_ExplicitVarSizeWithFlags_Values[q8, q14] =
             q3_ExplicitVarSizeWithFlags_Values_2[q8]
                 | q14 : int(1..3)])
             | q8 : int(1..2)]),
    and([x_FunctionNDPartial_Flags[q1_1, q1_2] /\
         x_FunctionNDPartial_Flags[q2_1, q2_2]
         ->
         x_FunctionNDPartial_Values[q1_1, q1_2] != x_FunctionNDPartial_Values[q2_1, q2_2]
             | q1_1 : int(1..2), q1_2 : int(1..2), q2_1 : int(1..2), q2_2 : int(1..2),
               !(q1_1 = q2_1 /\ q1_2 = q2_2)]),
    and([x_FunctionNDPartial_Flags[q1_1, q1_2] = false ->
         x_FunctionNDPartial_Values[q1_1, q1_2] = 1
             | q1_1 : int(1..2), q1_2 : int(1..2)])

