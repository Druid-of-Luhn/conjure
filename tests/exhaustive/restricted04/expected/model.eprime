language ESSENCE' 1.0

find x_FunctionNDPartial_Flags: matrix indexed by [int(1..2), int(1..2)] of bool
find x_FunctionNDPartial_Values: matrix indexed by [int(1..2), int(1..2)] of int(1..3)
such that
    and([x_FunctionNDPartial_Flags[q5_1, q5_2] ->
         or([x_FunctionNDPartial_Flags[q3_1, q3_2] /\ x_FunctionNDPartial_Values[q3_1, q3_2] = q5_2 | q3_1 : int(1..2), q3_2 : int(1..2)])
             | q5_1 : int(1..2), q5_2 : int(1..2), or([1 = q5_1 /\ q4_2 = q5_2 | q4_2 : int(1..2)])]),
    and([x_FunctionNDPartial_Flags[q1_1, q1_2] /\ x_FunctionNDPartial_Flags[q2_1, q2_2] ->
         x_FunctionNDPartial_Values[q1_1, q1_2] != x_FunctionNDPartial_Values[q2_1, q2_2]
             | q1_1 : int(1..2), q1_2 : int(1..2), q2_1 : int(1..2), q2_2 : int(1..2), !(q1_1 = q2_1 /\ q1_2 = q2_2)]),
    and([x_FunctionNDPartial_Flags[q1_1, q1_2] = false -> x_FunctionNDPartial_Values[q1_1, q1_2] = 1 | q1_1 : int(1..2), q1_2 : int(1..2)])

