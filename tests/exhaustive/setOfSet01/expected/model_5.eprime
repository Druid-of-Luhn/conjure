language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2 ** (1 + (2 - 1)))] of bool
find x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker: matrix indexed by [int(1..2 ** (1 + (2 - 1)))] of int(0..1 + (2 - 1))
find x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..2 ** (1 + (2 - 1))), int(1..1 + (2 - 1))] of int(1..2)
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] < x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1 + 1] \/
         x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] = x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1 + 1] /\
         x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1, ..] <lex x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1 + 1, ..]
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1] = false ->
         x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] = 0 /\
         and([x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1, q3] = 1 | q3 : int(1..2)])
             | q1 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1] ->
         (2 <= x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] ->
          x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1, 1] < x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1, 2])
             | q1 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1] ->
         and([q2 > x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] ->
              x_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1, q2] = 1
                  | q2 : int(1..2)])
             | q1 : int(1..4)])

