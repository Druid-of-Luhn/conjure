language ESSENCE' 1.0

find x: bool
find y: bool
find z: bool
such that
    x =
    (and([or([and([or([[-1; int(1..1)][1] = [-2; int(1..1)][1]; int(1..1)]); int(1..1)]) /\
              and([or([[-2; int(1..1)][1] = [-1; int(1..1)][1]; int(1..1)]); int(1..1)]); int(1..1)]); int(1..1)])
     /\
     and([or([and([or([[-2; int(1..1)][1] = [-1; int(1..1)][1]; int(1..1)]); int(1..1)]) /\
              and([or([[-1; int(1..1)][1] = [-2; int(1..1)][1]; int(1..1)]); int(1..1)]); int(1..1)]); int(1..1)])),
    y =
    (and([or([and([or([[1; int(1..1)][1] = [2; int(1..1)][1]; int(1..1)]); int(1..1)]) /\
              and([or([[2; int(1..1)][1] = [1; int(1..1)][1]; int(1..1)]); int(1..1)]); int(1..1)]); int(1..1)])
     /\
     and([or([and([or([[2; int(1..1)][1] = [1; int(1..1)][1]; int(1..1)]); int(1..1)]) /\
              and([or([[1; int(1..1)][1] = [2; int(1..1)][1]; int(1..1)]); int(1..1)]); int(1..1)]); int(1..1)])),
    z =
    (and([or([and([or([[1; int(1..1)][1] = [1; int(1..1)][1]; int(1..1)]); int(1..1)]) /\
              and([or([[1; int(1..1)][1] = [1; int(1..1)][1]; int(1..1)]); int(1..1)]); int(1..1)]); int(1..1)])
     /\
     and([or([and([or([[1; int(1..1)][1] = [1; int(1..1)][1]; int(1..1)]); int(1..1)]) /\
              and([or([[1; int(1..1)][1] = [1; int(1..1)][1]; int(1..1)]); int(1..1)]); int(1..1)]); int(1..1)]))

