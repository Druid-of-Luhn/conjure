language ESSENCE' 1.0

find a_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find a_Function1DPartial_Values: matrix indexed by [int(1..2)] of bool
find b_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find b_Function1DPartial_Values: matrix indexed by [int(1..2)] of bool
such that
    or(flatten([a_Function1DPartial_Flags[q9] /\
                (sum([a_Function1DPartial_Flags[q12] *
                      (q12 = q9 /\ a_Function1DPartial_Values[q12] = a_Function1DPartial_Values[q9])
                          | q12 : int(1..2)])
                 <
                 sum([b_Function1DPartial_Flags[q14] *
                      (q14 = q9 /\ b_Function1DPartial_Values[q14] = a_Function1DPartial_Values[q9])
                          | q14 : int(1..2)])
                 /\
                 (and(flatten([a_Function1DPartial_Flags[q15] /\
                               (q9 < q15 \/
                                q9 = q15 /\ a_Function1DPartial_Values[q9] < a_Function1DPartial_Values[q15])
                               ->
                               sum([a_Function1DPartial_Flags[q18] *
                                    (q18 = q15 /\ a_Function1DPartial_Values[q18] = a_Function1DPartial_Values[q15])
                                        | q18 : int(1..2)])
                               =
                               sum([b_Function1DPartial_Flags[q20] *
                                    (q20 = q15 /\ b_Function1DPartial_Values[q20] = a_Function1DPartial_Values[q15])
                                        | q20 : int(1..2)])
                                   | q15 : int(1..2)]))
                  /\
                  and(flatten([and([b_Function1DPartial_Flags[q16],
                                    !or([a_Function1DPartial_Flags[q26] /\
                                         (q26 = q16 /\
                                          a_Function1DPartial_Values[q26] = b_Function1DPartial_Values[q16])
                                             | q26 : int(1..2)]),
                                    q9 < q16 \/
                                    q9 = q16 /\
                                    a_Function1DPartial_Values[q9] < b_Function1DPartial_Values[q16]; int(1..3)])
                               ->
                               sum([a_Function1DPartial_Flags[q22] *
                                    (q22 = q16 /\ a_Function1DPartial_Values[q22] = b_Function1DPartial_Values[q16])
                                        | q22 : int(1..2)])
                               =
                               sum([b_Function1DPartial_Flags[q24] *
                                    (q24 = q16 /\ b_Function1DPartial_Values[q24] = b_Function1DPartial_Values[q16])
                                        | q24 : int(1..2)])
                                   | q16 : int(1..2)]))))
                    | q9 : int(1..2)]))
    \/
    or(flatten([b_Function1DPartial_Flags[q10] /\
                !or([a_Function1DPartial_Flags[q44] /\
                     (q44 = q10 /\ a_Function1DPartial_Values[q44] = b_Function1DPartial_Values[q10])
                         | q44 : int(1..2)])
                /\
                (sum([a_Function1DPartial_Flags[q28] *
                      (q28 = q10 /\ a_Function1DPartial_Values[q28] = b_Function1DPartial_Values[q10])
                          | q28 : int(1..2)])
                 <
                 sum([b_Function1DPartial_Flags[q30] *
                      (q30 = q10 /\ b_Function1DPartial_Values[q30] = b_Function1DPartial_Values[q10])
                          | q30 : int(1..2)])
                 /\
                 (and(flatten([a_Function1DPartial_Flags[q31] /\
                               (q10 < q31 \/
                                q10 = q31 /\ b_Function1DPartial_Values[q10] < a_Function1DPartial_Values[q31])
                               ->
                               sum([a_Function1DPartial_Flags[q34] *
                                    (q34 = q31 /\ a_Function1DPartial_Values[q34] = a_Function1DPartial_Values[q31])
                                        | q34 : int(1..2)])
                               =
                               sum([b_Function1DPartial_Flags[q36] *
                                    (q36 = q31 /\ b_Function1DPartial_Values[q36] = a_Function1DPartial_Values[q31])
                                        | q36 : int(1..2)])
                                   | q31 : int(1..2)]))
                  /\
                  and(flatten([and([b_Function1DPartial_Flags[q32],
                                    !or([a_Function1DPartial_Flags[q42] /\
                                         (q42 = q32 /\
                                          a_Function1DPartial_Values[q42] = b_Function1DPartial_Values[q32])
                                             | q42 : int(1..2)]),
                                    q10 < q32 \/
                                    q10 = q32 /\
                                    b_Function1DPartial_Values[q10] < b_Function1DPartial_Values[q32]; int(1..3)])
                               ->
                               sum([a_Function1DPartial_Flags[q38] *
                                    (q38 = q32 /\ a_Function1DPartial_Values[q38] = b_Function1DPartial_Values[q32])
                                        | q38 : int(1..2)])
                               =
                               sum([b_Function1DPartial_Flags[q40] *
                                    (q40 = q32 /\ b_Function1DPartial_Values[q40] = b_Function1DPartial_Values[q32])
                                        | q40 : int(1..2)])
                                   | q32 : int(1..2)]))))
                    | q10 : int(1..2)])),
    and([a_Function1DPartial_Flags[q1] = false ->
         a_Function1DPartial_Values[q1] = false
             | q1 : int(1..2)]),
    and([b_Function1DPartial_Flags[q4] = false ->
         b_Function1DPartial_Values[q4] = false
             | q4 : int(1..2)])

