language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Explicit: matrix indexed by [int(1..fin1)] of int(fin2..fin3)
letting let1 be fin1
letting let2 be fin2
letting let3 be fin3
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..let1)] of bool
find x_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_ExplicitVarSizeWithMarker_Marker: int(0..let1)
find x_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..let1)] of int(let2..let3)
find x_Occurrence: matrix indexed by [int(let2..let3)] of bool
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q12] ->
         or([nums_Explicit[q14] = x_ExplicitVarSizeWithFlags_Values[q12]
                 | q14 : int(1..fin1)])
             | q12 : int(1..let1)]),
    s =
    sum([toInt(q10 <= x_ExplicitVarSizeWithMarker_Marker) *
         x_ExplicitVarSizeWithMarker_Values[q10]
             | q10 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] <
         x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..let1 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         x_ExplicitVarSizeWithFlags_Values[q2] = let2
             | q2 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         x_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..let1 - 1)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]),
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..let1)]) <= let1,
    and([q6 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q6] <
         x_ExplicitVarSizeWithMarker_Values[q6 + 1]
             | q6 : int(1..let1 - 1)]),
    and([q7 > x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q7] = let2
             | q7 : int(1..let1)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    x_ExplicitVarSizeWithMarker_Marker <= let1,
    and([q16 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithFlags_Flags[q18] /\
             x_ExplicitVarSizeWithFlags_Values[q18] = x_ExplicitVarSizeWithMarker_Values[q16]
                 | q18 : int(1..let1)])
             | q16 : int(1..let1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q20] ->
         or([q22 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q22] = x_ExplicitVarSizeWithFlags_Values[q20]
                 | q22 : int(1..let1)])
             | q20 : int(1..let1)]),
    1 <= sum([toInt(x_Occurrence[q9]) | q9 : int(let2..let3)]),
    sum([toInt(x_Occurrence[q9]) | q9 : int(let2..let3)]) <= let1,
    and([x_Occurrence[q23] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q25] /\
             x_ExplicitVarSizeWithFlags_Values[q25] = q23
                 | q25 : int(1..let1)])
             | q23 : int(let2..let3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q27] ->
         x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q27]]
             | q27 : int(1..let1)]),
    and([x_Occurrence[q28] ->
         or([q30 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q30] = q28
                 | q30 : int(1..let1)])
             | q28 : int(let2..let3)]),
    and([q32 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q32]]
             | q32 : int(1..let1)])

