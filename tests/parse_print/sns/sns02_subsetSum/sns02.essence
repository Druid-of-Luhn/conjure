language Essence 1.4

$ https://en.wikipedia.org/wiki/Subset_sum_problem

given s : int
given nums : set of int
find x : set (minSize 1, maxSize |nums|) of int([ i | i <- nums])
such that x subsetEq nums, s = sum i in x . i


find nSize : int(1)

find act1 : bool
neighbourhood removeElem :
    ( act1
    , nSize
    , [x]
    )
such that act1 -> exists i in x . incumbent(x) = x - {i}

find act2 : bool
neighbourhood addElem :
    ( act2
    , nSize
    , [x]
    )
such that act2 -> exists i in x . incumbent(x) = x union {i}

