
$ r <- parseIO pRuleRepr =<< readFile "Phases/test.repr" 

~~> Test
~~> matrix indexed by [t] of bool

    $ where t :: int

*** int(..x)
    where x % 2 = 0

$ ppPrint $ flip runApplyToDom r $ DomainFromTo Nothing (Just (ValueInteger 3))
$ ppPrint $ flip runApplyToDom r $ DomainFromTo Nothing (Just (ValueInteger 4))



*** int(x,y)
    where x % y = 0

$ ppPrint $ flip runApplyToDom r $ DomainIntegerList [ValueInteger 4, ValueInteger 3, ValueInteger 2]
$ ppPrint $ flip runApplyToDom r $ DomainIntegerList [ValueInteger 4, ValueInteger 3]
$ ppPrint $ flip runApplyToDom r $ DomainIntegerList [ValueInteger 4, ValueInteger 2]



*** new type of size n
    where n = 3
$ Phases.Repr> ppPrint . flip runApplyToDom r $ DomainUnnamed (ValueInteger 4) Nothing
$ Phases.Repr> ppPrint . flip runApplyToDom r $ DomainUnnamed (ValueInteger 3) Nothing



$ *** matrix indexed by [t] of a

*** matrix indexed by [t1,t2] of a

*** set (size n, _) of t

*** mset (size n) of t
    ~~> (sum i : t . refn[i]) = n
