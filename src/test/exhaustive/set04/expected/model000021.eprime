language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
such that
    or([x_ExplicitVarSizeWithFlags_Values[q2] = 1 /\ x_ExplicitVarSizeWithFlags_Flags[q2] | q2 : int(1..3)]),
    x_Occurrence[2],
    and([x_ExplicitVarSizeWithFlags_Flags[q4 + 1] -> x_ExplicitVarSizeWithFlags_Values[q4] < x_ExplicitVarSizeWithFlags_Values[q4 + 1] | q4 : int(1..3 - 1)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q5] = false -> x_ExplicitVarSizeWithFlags_Values[q5] = 1 | q5 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q6 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q6] | q6 : int(1..3 - 1)]),
    sum([x_ExplicitVarSizeWithFlags_Flags[q1] | q1 : int(1..3)]) <= 3,
    sum([x_Occurrence[q3] | q3 : int(1..3)]) <= 3,
    and([x_Occurrence[q9] -> or([x_ExplicitVarSizeWithFlags_Values[q7] = q9 /\ x_ExplicitVarSizeWithFlags_Flags[q7] | q7 : int(1..3)]) | q9 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q8] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q8]] | q8 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q10] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q10]] | q10 : int(1..3)]),
    and([x_Occurrence[q13] -> or([x_ExplicitVarSizeWithFlags_Values[q11] = q13 /\ x_ExplicitVarSizeWithFlags_Flags[q11] | q11 : int(1..3)]) | q13 : int(1..3)])

