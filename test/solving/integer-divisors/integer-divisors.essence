language Essence 1.3

given n: int(1..)

find divisors: function (total) int(1..n) --> set of int(1..n)
$ find num_divisors: function (total) int(1..n) --> int(1..n)
$ find num_divisors_divides : set of int(1..n)

$ such that
$     forAll i : int(1..n) .
$         forAll j : int(1..n)
$             , j <= i /\ i % j = 0
$             . j in divisors(i),

$     forAll i : int(1..n) .
$         forAll j : int(1..n)
$             , j <= i /\ i % j != 0
$             . !(j in divisors(i)),

$     forAll i : int(1..n) . num_divisors(i) = |divisors(i)|,

$     forAll i : int(1..n) , i % num_divisors(i) = 0 . i in num_divisors_divides,

such that
    forAll i : int(1..n) .
        forAll j : int(1..i) .
            i % j = 0 -> j in divisors(j)

