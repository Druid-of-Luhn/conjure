language Essence 1.3

given n: int(1..)
letting squares be domain tuple(int(1..n),int(1..n))
letting queens be new type of size n
find  P: function(total,injective) queens --> squares
such that
    forAll q_1,q_2 in queens, q_1 != q_2 .
        P(q_1)[1] != P(q_2)[1]                          /\      $ different rows
        P(q_1)[2] != P(q_2)[2]                          /\      $ different cols
        P(q_2)[1] - P(q_1)[1] != P(q_2)[2] - P(q_1)[2]  /\      $ different downward diagonals
        P(q_2)[1] - P(q_1)[1] != P(q_1)[2] - P(q_2)[2]          $ different upward diagonals

