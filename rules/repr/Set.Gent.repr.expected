
~~> Gent
~~> matrix indexed by [t] of int(0..mx)
~~> forall i : t . refn[i] = 0 \/ refn[i] = 1 + (sum j : t , j < i /\ refn[j] > 0 . 1)
    where t :: int

*** set of t
    letting mx be image(domSize, t)

*** set (size n) of t
    ~~> (sum i : t , refn[i] > 0 . 1) = n
    letting mx be image(domSize, t)

*** set (minSize mn) of t
    ~~> (sum i : t , refn[i] > 0 . 1) >= mn
    letting mx be image(domSize, t)

*** set (maxSize mx) of t
    ~~> (sum i : t , refn[i] > 0 . 1) <= mx

*** set (size n, minSize mn) of t
    ~~> (sum i : t , refn[i] > 0 . 1) = n
    letting mx be image(domSize, t)

*** set (size n, maxSize mx) of t
    ~~> (sum i : t , refn[i] > 0 . 1) = n

*** set (minSize mn, maxSize mx) of t
    ~~> (sum i : t , refn[i] > 0 . 1) >= mn /\ (sum i : t , refn[i] > 0 . 1) <= mx

*** set (size n, minSize mn, maxSize mx) of t
    ~~> (sum i : t , refn[i] > 0 . 1) = n
