
~~> Matrix2D
~~> matrix indexed by [fr,to] of bool
    where fr :: int, to :: int


*** function fr --> to


*** function (total) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) = 1)              $ exactly 1 true on every line

*** function (total, injective) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) = 1)              $ exactly 1 true on every line
    /\  (forAll j : to . (sum i : fr . refn[i,j]) <= 1)             $ at most 1 true on every column, to preserve distinctness

*** function (total, surjective) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) = 1)              $ exactly 1 true on every line
    /\  (forAll j : to . exists i : fr . refn[i,j])                 $ every value in "to" is mapped to by at least one in "fr"

*** function (total, bijective, _) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) = 1)              $ exactly 1 true on every line
    /\  (forAll j : to . (sum i : fr . refn[i,j]) <= 1)             $ at most 1 true on every column, to preserve distinctness
    /\  (forAll j : to . exists i : fr . refn[i,j])                 $ every value in "to" is mapped to by at least one in "fr"

*** function (total, injective, surjective) fr --> to               $ same as (total, bijective)
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) = 1)
    /\  (forAll j : to . (sum i : fr . refn[i,j]) <= 1)
    /\  (forAll j : to . exists i : fr . refn[i,j])


*** function (partial) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) <= 1)             $ at most 1 true on every line

*** function (partial, injective) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) <= 1)             $ at most 1 true on every line
    /\  (forAll j : to . (sum i : fr . refn[i,j]) <= 1)             $ at most 1 true on every column, to preserve distinctness
$ example: 
$           fr = {1,2,3}
$           to = {1,2,3}
$           f = {1 --> 1, 2 --> 2}

*** function (partial, surjective) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) <= 1)             $ at most 1 true on every line
    /\  (forAll j : to . exists i : fr . refn[i,j])                 $ every value in "to" is mapped to by at least one in "fr"
$ example: 
$           fr = {1,2,3}
$           to = {1}
$           f = {1 --> 1, 2 --> 1}

*** function (partial, bijective, _) fr --> to
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) <= 1)             $ at most 1 true on every line
    /\  (forAll j : to . (sum i : fr . refn[i,j]) <= 1)             $ at most 1 true on every column, to preserve distinctness
    /\  (forAll j : to . exists i : fr . refn[i,j])                 $ every value in "to" is mapped to by at least one in "fr"
$ example: 
$           fr = {1,2,3}
$           to = {1,2}
$           f = {1 --> 1, 2 --> 2}

*** function (partial, injective, surjective) fr --> to             $ same as (partial, bijective)
    ~~> (forAll i : fr . (sum j : to . refn[i,j]) <= 1)             $ at most 1 true on every line
    /\  (forAll j : to . (sum i : fr . refn[i,j]) <= 1)
    /\  (forAll j : to . exists i : fr . refn[i,j])
