
# arithmetic operators

+           # sum, infix : (int,int) -> int
-           # (subtraction, infix : (int,int) -> int) OR (unary minus : int -> int)
*           # multiplication, infix : (int,int) -> int
/           # integer division, infix
%           # module, infix
**          # exponentiation, infix : (int,int) -> int

# equality

=           # equals, infix.
!=          # not-equals, infix

# comparison

<           # less-than, infix.
<=          # less-than-or-eq, infix.
>           # greater-than, infix.
>=          # greater-than-or-eq, infix.

# logical operators

/\          # logical-and, infix
\/          # logical-or, infix.
->          # implication, infix
<->         # iff, infix.
!           # negation, prefix

# the function arrow

-->         # function domains and constants

# in rule language

:           # has-domain, infix, (expr,domain) -> bool. also does pattern matching.
::          # has-type, infix, (expr,type) -> bool. also does pattern matching.
@           # bubble operator.

# lex operators

>=lex       
>lex
<=lex
<lex
