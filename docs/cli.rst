
.. _cli:

Command Line Interface
======================

Conjure supports a number of commands.
The fist argument is the name of the command, followed by a number of mandatory arguments (if any) depending on the command, and a number of options.
Options can have short or long names. Following the common convention, short option names are preceded by a single dash and long options names are preceded by two dashes.
Options may or may not take arguments.

Hence, the general form of a Conjure invocation is as follows: ``conjure [COMMAND] ... [OPTIONS]``.

Following is the list of all commands.
This list is also available as the output of ``conjure --help``.


modelling
    The main act. Given a problem specification in Essence, produce constraint programming models in Essence'.
translate-parameter
    Refinement of parameter files written in Essence for a particular Essence' model. The Essence' model needs to be generated by Conjure.
translate-solution
    Translation of solutions back to Essence.
validate-solution
    Validating a solution.
solve
    This is a combined mode, and it is available for convenience. It runs conjure in the modelling mode followed by parameter refinement if required, then Savile Row + Minion to solve, and then solution translation.
pretty
    Pretty print as Essence file to stdout. This mode can be used to view a binary Essence file in textual form.
diff
    Diff on two Essence files. Works on models, parameters, and solutions.
type-check
    Type-checking a single Essence file.
split
    Split an Essence files to various smaller files. Useful for testing.
symmetry-detection
    Dump some JSON to be used as input to ferret for symmetry detection.
parameter-generator
    Generate an Essence model describing the instances of the problem class defined in the input Essence model. An error will be printed if the model has infinitely many instances.
