language Essence 2.0
given n_limit: int(2..)
given deck_width: int(1..n_limit)
given deck_length: int(1..n_limit)
given n_containers: int(1..n_limit)
given n_classes: int(1..n_limit)
letting Container be domain int(1..n_containers)
letting Class be domain int(1..n_classes)
letting Width be domain int(1..deck_width)
letting Length be domain int(1..deck_length)
letting X be domain int(0..deck_width)
letting Y be domain int(0..deck_length)
given width: function (total) Container -> Width
given length: function (total) Container -> Length
given class: function (total) Container -> Class
given separation: function (total) set (size 2) of Class -> int(0..n_limit)
find west: function (total) Container -> X
find east: function (total) Container -> X
find north: function (total) Container -> Y
find south: function (total) Container -> Y
find orientation: function (total) Container -> int(0..1)
such that
    forall c : Container . image(east, c) - image(west,
                                                  c) = image(width, c) /\ image(south,
                                                                                c) - image(north,
                                                                                           c) = image(length,
                                                                                                      c) /\ image(orientation,
                                                                                                                  c) = 0 \/ image(east,
                                                                                                                                  c) - image(west,
                                                                                                                                             c) = image(length,
                                                                                                                                                        c) /\ image(south,
                                                                                                                                                                    c) - image(north,
                                                                                                                                                                               c) = image(width,
                                                                                                                                                                                          c) /\ image(orientation,
                                                                                                                                                                                                      c) = 1,
    forall c1 : Container . (forall c2 : Container . c1 != c2 => image(west,
                                                                       c1) != image(west,
                                                                                    c2) \/ image(north,
                                                                                                 c1) != image(north,
                                                                                                              c2)),
    forall c1 : Container . (forall c2 : Container . c1 != c2 => max(set {image(west,
                                                                                c1),
                                                                          image(west,
                                                                                c2)}) - min(set {image(east,
                                                                                                       c1),
                                                                                                 image(east,
                                                                                                       c2)}) >= 0 \/ max(set {image(north,
                                                                                                                                    c1),
                                                                                                                              image(north,
                                                                                                                                    c2)}) - min(set {image(south,
                                                                                                                                                           c1),
                                                                                                                                                     image(south,
                                                                                                                                                           c2)}) >= 0),
    forall c1 : Container . (forall c2 : Container . c1 != c2 => max(set {image(west,
                                                                                c1),
                                                                          image(west,
                                                                                c2)}) - min(set {image(east,
                                                                                                       c1),
                                                                                                 image(east,
                                                                                                       c2)}) >= image(separation,
                                                                                                                      set {image(class,
                                                                                                                                 c1),
                                                                                                                           image(class,
                                                                                                                                 c2)}) \/ max(set {image(north,
                                                                                                                                                         c1),
                                                                                                                                                   image(north,
                                                                                                                                                         c2)}) - min(set {image(south,
                                                                                                                                                                                c1),
                                                                                                                                                                          image(south,
                                                                                                                                                                                c2)}) >= image(separation,
                                                                                                                                                                                               set {image(class,
                                                                                                                                                                                                          c1),
                                                                                                                                                                                                    image(class,
                                                                                                                                                                                                          c2)}))