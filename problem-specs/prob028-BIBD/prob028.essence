language ESSENCE 1.2.0

given v, b, r, k, lambda_ : int(1..)

where
    r * v = b * k,
    lambda_ * (v-1) = r * (k-1),
    b >= v

letting Obj   be domain new type of size v
letting Block be domain new type of size b

find bibd : relation of ( Obj * Block )

such that
    forall o : Obj . card(bibd(o,_)) = r,
    forall bl : Block . card(bibd(_,bl)) = k,
    forall o1,o2 : Obj . o1 != o2 => card(bibd(o1,_) intersect bibd(o2,_)) = lambda_
