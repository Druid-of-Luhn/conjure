language Essence 1.3

find a: mset (size 3) of int(1..10)
find b: mset (size 3) of int(1..10)
find c: mset (size 3) of int(1..10)
such that
    forAll __1 in a , (exists __7 in b . __7 = __1)
        . (sum __2 in toSet(a)
               . (sum __3 : int(1..min((sum __4 in a . toInt(__4 = __2)),
                                       (sum __5 in b . toInt(__5 = __2))))
                      . toInt(__2 = __1)))
          <=
          (sum __6 in c . toInt(__6 = __1)),
    forAll __1 in c
        . (sum __8 in toSet(a)
               . (sum __9 : int(1..min((sum __10 in a . toInt(__10 = __8)),
                                       (sum __11 in b . toInt(__11 = __8))))
                      . toInt(__8 = __1)))
          <=
          (sum __12 in c . toInt(__12 = __1)),
    forAll __13 in c
        . (sum __14 in c . toInt(__14 = __13))
          <=
          (sum __15 in toSet(a)
               . (sum __16 : int(1..min((sum __17 in a . toInt(__17 = __15)),
                                        (sum __18 in b . toInt(__18 = __15))))
                      . toInt(__15 = __13))),
    forAll __13 in a , (exists __24 in b . __24 = __13)
        . (sum __19 in c . toInt(__19 = __13))
          <=
          (sum __20 in toSet(a)
               . (sum __21 : int(1..min((sum __22 in a . toInt(__22 = __20)),
                                        (sum __23 in b . toInt(__23 = __20))))
                      . toInt(__20 = __13)))
