language Essence 2.0

letting digit be domain int(0..9)

find x : digit
find y : digit

letting xy be x * y

letting myForall be quantifier {
    append  { (x,y) --> x /\ y }
    guard   { (x,y) --> x -> y }
    identity true }

letting mySum be quantifier {
    append   { (x,y) --> x + y }
    guard    { (x,y) --> toInt(x) * y }
    identity 0 }

such that
    myForall i : int(1..9) . xy > i,
    (mySum i : int(1..9) . i) > xy
