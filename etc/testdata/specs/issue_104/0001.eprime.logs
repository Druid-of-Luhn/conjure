[representation] find seq: function (total, surjective) int(1..9) --> int(1..27)
                 (#2)
                 AsReln, Matrix1D
[configuration] seq§region1#AsReln
[addedDecl] find seq_AsReln: relation of (int(1..9) * int(1..27))
[applied] freq(toMSet(seq§region1#AsReln), (1, 1))
          {rules/refns/mset-freq-to-sum.rule}
              (sum v__5 in toMSet(seq§region1#AsReln) . toInt(v__5[1] = 1 /\ v__5[2] = 1))
[applied] (sum v__5 in toMSet(seq§region1#AsReln)
               . toInt(v__5[1] = 1 /\ v__5[2] = 1))
          {rules/refns/function-asreln/function-toMSet-quantified.rule}
              (sum v__5 in toMSet(seq_AsReln§region1) . toInt(v__5[1] = 1 /\ v__5[2] = 1))
[removedDecl] find seq: function (total, surjective) int(1..9) --> int(1..27)
[representation] find seq_AsReln: relation of (int(1..9) * int(1..27))
                 (#1)
                 RelationAsSet
[configuration] seq_AsReln§region1#RelationAsSet
[addedDecl] find seq_AsReln_RelationAsSet: set of (int(1..9), int(1..27))
[applied] (sum v__5 in toMSet(seq_AsReln§region1#RelationAsSet)
               . toInt(v__5[1] = 1 /\ v__5[2] = 1))
          {rules/refns/relation-asset/relation-asset-toMSet.rule}
              (sum v__5 in toMSet(seq_AsReln_RelationAsSet§region1)
                   . toInt(v__5[1] = 1 /\ v__5[2] = 1))
[applied] (sum v__5 in toMSet(seq_AsReln_RelationAsSet§region1)
               . toInt(v__5[1] = 1 /\ v__5[2] = 1))
          {rules/refns/set-toMSet-to-quantified.rule}
              (sum v__5 in seq_AsReln_RelationAsSet§region1
                   . toInt(v__5[1] = 1 /\ v__5[2] = 1))
[applied] (sum v__2 in toSet(seq_AsReln§region1#RelationAsSet) . v__1 = v__2[1])
          {rules/refns/relation-asset/relation-asset-toSet.rule}
              (sum v__2 in seq_AsReln_RelationAsSet§region1 . v__1 = v__2[1])
[applied] (exists v__2 in toSet(seq_AsReln§region1#RelationAsSet)
               . v__1 = v__2[2])
          {rules/refns/relation-asset/relation-asset-toSet.rule}
              (exists v__2 in seq_AsReln_RelationAsSet§region1 . v__1 = v__2[2])
[removedDecl] find seq_AsReln: relation of (int(1..9) * int(1..27))
[representation] find seq_AsReln_RelationAsSet: set of (int(1..9), int(1..27))
                 (#1)
                 ExplicitVarSize
[configuration] seq_AsReln_RelationAsSet§region1#ExplicitVarSize
[addedDecl] find seq_AsReln_RelationAsSet_ExplicitVarSize:
                    matrix indexed by [int(1..243)] of (bool, (int(1..9), int(1..27)))
[applied] (sum v__5 in seq_AsReln_RelationAsSet§region1#ExplicitVarSize
               . toInt(v__5[1] = 1 /\ v__5[2] = 1))
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (sum v__8 : int(1..243)
                   , seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__8, 1]
                   . toInt(seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__8, 2, 1] = 1
                           /\
                           seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__8, 2, 2] = 1))
[applied] (sum v__2 in seq_AsReln_RelationAsSet§region1#ExplicitVarSize
               . v__1 = v__2[1])
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (sum v__9 : int(1..243)
                   , seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__9, 1]
                   . v__1 = seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__9, 2, 1])
[applied] (exists v__2 in seq_AsReln_RelationAsSet§region1#ExplicitVarSize
               . v__1 = v__2[2])
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__10 : int(1..243)
                   , seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__10, 1]
                   . v__1 = seq_AsReln_RelationAsSet_ExplicitVarSize§region1[v__10, 2, 2])
[removedDecl] find seq_AsReln_RelationAsSet_ExplicitVarSize:
                      matrix indexed by [int(1..243)] of (bool, (int(1..9), int(1..27)))
[removedDecl] find seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..243)] of (int(1..9), int(1..27))
[removedDecl] find seq_AsReln_RelationAsSet: set of (int(1..9), int(1..27))