language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..2), int(1, 2), int(6..8)] of bool
find x_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..2), int(1, 2), int(1..3)] of bool
find x_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..2), int(1, 2), int(1..3)] of int(6..8)
such that
    forAll v__3 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 1, v__3]
          ->
          6 = x_ExplicitVarSize_tuple2[1, 1, v__3],
    exists v__8 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 1, v__8]
          /\
          x_ExplicitVarSize_tuple2[1, 1, v__8] = 6,
    forAll v__11 : int(6..8) . x_Occurrence[1, 2, v__11] -> 7 = v__11,
    exists v__14 : int(6..8) . x_Occurrence[1, 2, v__14] /\ v__14 = 7,
    forAll v__17 : int(6..8) . x_Occurrence[2, 1, v__17] -> 7 = v__17 \/ 8 = v__17,
    exists v__20 : int(6..8) . x_Occurrence[2, 1, v__20] /\ v__20 = 7,
    exists v__22 : int(6..8) . x_Occurrence[2, 1, v__22] /\ v__22 = 8,
    forAll v__25 : int(6..8) . x_Occurrence[2, 2, v__25] -> 8 = v__25,
    exists v__28 : int(6..8) . x_Occurrence[2, 2, v__28] /\ v__28 = 8,
    forAll v__32 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 1, v__32]
          ->
          (exists v__31 : int(6..8)
               . x_Occurrence[1, 1, v__31] /\ v__31 = x_ExplicitVarSize_tuple2[1, 1, v__32]),
    forAll v__36 : int(6..8)
        . x_Occurrence[1, 1, v__36]
          ->
          (exists v__35 : int(1..3)
               . x_ExplicitVarSize_tuple1[1, 1, v__35]
                 /\
                 x_ExplicitVarSize_tuple2[1, 1, v__35] = v__36),
    forAll v__40 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 2, v__40]
          ->
          (exists v__39 : int(6..8)
               . x_Occurrence[1, 2, v__39] /\ v__39 = x_ExplicitVarSize_tuple2[1, 2, v__40]),
    forAll v__44 : int(6..8)
        . x_Occurrence[1, 2, v__44]
          ->
          (exists v__43 : int(1..3)
               . x_ExplicitVarSize_tuple1[1, 2, v__43]
                 /\
                 x_ExplicitVarSize_tuple2[1, 2, v__43] = v__44),
    forAll v__48 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 1, v__48]
          ->
          (exists v__47 : int(6..8)
               . x_Occurrence[2, 1, v__47] /\ v__47 = x_ExplicitVarSize_tuple2[2, 1, v__48]),
    forAll v__52 : int(6..8)
        . x_Occurrence[2, 1, v__52]
          ->
          (exists v__51 : int(1..3)
               . x_ExplicitVarSize_tuple1[2, 1, v__51]
                 /\
                 x_ExplicitVarSize_tuple2[2, 1, v__51] = v__52),
    forAll v__56 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 2, v__56]
          ->
          (exists v__55 : int(6..8)
               . x_Occurrence[2, 2, v__55] /\ v__55 = x_ExplicitVarSize_tuple2[2, 2, v__56]),
    forAll v__60 : int(6..8)
        . x_Occurrence[2, 2, v__60]
          ->
          (exists v__59 : int(1..3)
               . x_ExplicitVarSize_tuple1[2, 2, v__59]
                 /\
                 x_ExplicitVarSize_tuple2[2, 2, v__59] = v__60),
    x_Occurrence[1, 1, 6] + (x_Occurrence[1, 1, 7] + x_Occurrence[1, 1, 8]) >= 1,
    x_Occurrence[1, 2, 6] + (x_Occurrence[1, 2, 7] + x_Occurrence[1, 2, 8]) >= 1,
    x_Occurrence[2, 1, 6] + (x_Occurrence[2, 1, 7] + x_Occurrence[2, 1, 8]) >= 1,
    x_Occurrence[2, 2, 6] + (x_Occurrence[2, 2, 7] + x_Occurrence[2, 2, 8]) >= 1,
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_ExplicitVarSize_tuple1[1, 1, v__4]
                 /\
                 x_ExplicitVarSize_tuple1[1, 1, v__5]
                 ->
                 x_ExplicitVarSize_tuple2[1, 1, v__4] < x_ExplicitVarSize_tuple2[1, 1, v__5]),
    forAll v__4 : int(1..2)
        . x_ExplicitVarSize_tuple1[1, 1, v__4]
          <=
          x_ExplicitVarSize_tuple1[1, 1, v__4 + 1],
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_ExplicitVarSize_tuple1[1, 2, v__4]
                 /\
                 x_ExplicitVarSize_tuple1[1, 2, v__5]
                 ->
                 x_ExplicitVarSize_tuple2[1, 2, v__4] < x_ExplicitVarSize_tuple2[1, 2, v__5]),
    forAll v__4 : int(1..2)
        . x_ExplicitVarSize_tuple1[1, 2, v__4]
          <=
          x_ExplicitVarSize_tuple1[1, 2, v__4 + 1],
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_ExplicitVarSize_tuple1[2, 1, v__4]
                 /\
                 x_ExplicitVarSize_tuple1[2, 1, v__5]
                 ->
                 x_ExplicitVarSize_tuple2[2, 1, v__4] < x_ExplicitVarSize_tuple2[2, 1, v__5]),
    forAll v__4 : int(1..2)
        . x_ExplicitVarSize_tuple1[2, 1, v__4]
          <=
          x_ExplicitVarSize_tuple1[2, 1, v__4 + 1],
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_ExplicitVarSize_tuple1[2, 2, v__4]
                 /\
                 x_ExplicitVarSize_tuple1[2, 2, v__5]
                 ->
                 x_ExplicitVarSize_tuple2[2, 2, v__4] < x_ExplicitVarSize_tuple2[2, 2, v__5]),
    forAll v__4 : int(1..2)
        . x_ExplicitVarSize_tuple1[2, 2, v__4]
          <=
          x_ExplicitVarSize_tuple1[2, 2, v__4 + 1],
    x_ExplicitVarSize_tuple1[1, 1, 1]
    +
    (x_ExplicitVarSize_tuple1[1, 1, 2] + x_ExplicitVarSize_tuple1[1, 1, 3])
    >=
    1,
    x_ExplicitVarSize_tuple1[1, 2, 1]
    +
    (x_ExplicitVarSize_tuple1[1, 2, 2] + x_ExplicitVarSize_tuple1[1, 2, 3])
    >=
    1,
    x_ExplicitVarSize_tuple1[2, 1, 1]
    +
    (x_ExplicitVarSize_tuple1[2, 1, 2] + x_ExplicitVarSize_tuple1[2, 1, 3])
    >=
    1,
    x_ExplicitVarSize_tuple1[2, 2, 1]
    +
    (x_ExplicitVarSize_tuple1[2, 2, 2] + x_ExplicitVarSize_tuple1[2, 2, 3])
    >=
    1
