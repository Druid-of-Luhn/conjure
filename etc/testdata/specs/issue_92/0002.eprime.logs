[representation] find fs: matrix indexed by [Index] of function (total) Index --> int(-1, 1)
(#2)
AsReln, Matrix1D
[configuration] fs§region1#AsReln fs§region2#AsReln
[addedDecl] find fs_AsReln: matrix indexed by [Index] of relation of (Index * int(-1, 1))
[applied] fs§region1#AsReln[1](1)
{rules/refns/function-asreln/function-asreln-image.rule}
    (sum v__1 in toSet(fs_AsReln§region1[1]) , v__1[1] = 1 . v__1[2])
[applied] fs§region2#AsReln[2](1)
{rules/refns/function-asreln/function-asreln-image.rule}
    (sum v__5 in toSet(fs_AsReln§region2[2]) , v__5[1] = 1 . v__5[2])
[removedDecl] find fs: matrix indexed by [Index] of function (total) Index --> int(-1, 1)
[representation] find fs_AsReln: matrix indexed by [Index] of relation of (Index * int(-1, 1))
(#1)
RelationAsSet
[configuration] fs_AsReln§region1#RelationAsSet fs_AsReln§region2#RelationAsSet fs_AsReln§regionS#RelationAsSet
[addedDecl] find fs_AsReln_RelationAsSet:
        matrix indexed by [Index] of set of (Index, int(-1, 1))
[applied] (sum v__1 in toSet(fs_AsReln§region1#RelationAsSet[1]) , v__1[1] = 1 . v__1[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__1 in fs_AsReln_RelationAsSet§region1[1] , v__1[1] = 1 . v__1[2])
[applied] (sum v__5 in toSet(fs_AsReln§region2#RelationAsSet[2]) , v__5[1] = 1 . v__5[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__5 in fs_AsReln_RelationAsSet§region2[2] , v__5[1] = 1 . v__5[2])
[applied] (sum v__3 in toSet(fs_AsReln§regionS#RelationAsSet[v__4]) . v__2 = v__3[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__3 in fs_AsReln_RelationAsSet§regionS[v__4] . v__2 = v__3[1])
[removedDecl] find fs_AsReln: matrix indexed by [Index] of relation of (Index * int(-1, 1))
[representation] find fs_AsReln_RelationAsSet:
        matrix indexed by [Index] of set of (Index, int(-1, 1))
(#1)
ExplicitVarSize
[configuration] fs_AsReln_RelationAsSet§region1#ExplicitVarSize fs_AsReln_RelationAsSet§region2#ExplicitVarSize fs_AsReln_RelationAsSet§regionS#ExplicitVarSize
[addedDecl] find fs_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [Index, int(1..4)] of (bool, (Index, int(-1, 1)))
[applied] (sum v__1 in fs_AsReln_RelationAsSet§region1#ExplicitVarSize[1] , v__1[1] = 1
     . v__1[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__6 : int(1..4)
         , fs_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__6, 2, 1] = 1
           /\
           fs_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__6, 1]
         . fs_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__6, 2, 2])
[applied] (sum v__5 in fs_AsReln_RelationAsSet§region2#ExplicitVarSize[2] , v__5[1] = 1
     . v__5[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__10 : int(1..4)
         , fs_AsReln_RelationAsSet_ExplicitVarSize§region2[2, v__10, 2, 1] = 1
           /\
           fs_AsReln_RelationAsSet_ExplicitVarSize§region2[2, v__10, 1]
         . fs_AsReln_RelationAsSet_ExplicitVarSize§region2[2, v__10, 2, 2])
[applied] (sum v__3 in fs_AsReln_RelationAsSet§regionS#ExplicitVarSize[v__4]
     . v__2 = v__3[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__11 : int(1..4)
         , fs_AsReln_RelationAsSet_ExplicitVarSize§regionS[v__4, v__11, 1]
         . v__2 = fs_AsReln_RelationAsSet_ExplicitVarSize§regionS[v__4, v__11, 2, 1])
[removedDecl] find fs_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [Index, int(1..4)] of (bool, (Index, int(-1, 1)))
[removedDecl] find fs_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [Index, int(1..4)] of (Index, int(-1, 1))
[removedDecl] find fs_AsReln_RelationAsSet:
        matrix indexed by [Index] of set of (Index, int(-1, 1))