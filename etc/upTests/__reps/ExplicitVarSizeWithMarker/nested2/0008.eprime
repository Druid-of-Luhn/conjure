language ESSENCE' 1.0

find s_SetExplicitVarSizeWithMarker_tuple1: int(0..5)
find s_SetExplicitVarSizeWithMarker_tuple2_SetOccurrence:
        matrix indexed by [int(1..5), int(1..5)] of bool
such that
    s_SetExplicitVarSizeWithMarker_tuple1 >= 1,
    forAll v__0 : int(1..5)
        . v__0 + 1 <= s_SetExplicitVarSizeWithMarker_tuple1
          ->
          flatten(s_SetExplicitVarSizeWithMarker_tuple2_SetOccurrence[v__0 + 1, ..])
          <lex
          flatten(s_SetExplicitVarSizeWithMarker_tuple2_SetOccurrence[v__0, ..]),
    forAll v__0 : int(1..5)
        . (sum v__1 : int(1..5)
               . s_SetExplicitVarSizeWithMarker_tuple2_SetOccurrence[v__0, v__1])
          >=
          2
          /\
          (sum v__1 : int(1..5)
               . s_SetExplicitVarSizeWithMarker_tuple2_SetOccurrence[v__0, v__1])
          <=
          3
