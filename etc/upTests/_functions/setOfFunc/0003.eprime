language ESSENCE' 1.0

find fs_SetExplicitVarSize_tuple1: matrix indexed by [int(1..4)] of bool
find fs_SetExplicitVarSize_tuple2_Matrix1D:
        matrix indexed by [int(1..4), int(1..2)] of int(-1, 1)
such that
    (sum v__0 : int(1..4) . fs_SetExplicitVarSize_tuple1[v__0]) >= 1,
    forAll v__0 : int(1..3)
        . fs_SetExplicitVarSize_tuple1[v__0] /\ fs_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          flatten(fs_SetExplicitVarSize_tuple2_Matrix1D[v__0, ..])
          <lex
          flatten(fs_SetExplicitVarSize_tuple2_Matrix1D[v__0 + 1, ..]),
    forAll v__0 : int(1..3)
        . fs_SetExplicitVarSize_tuple1[v__0] <= fs_SetExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..4)
        . fs_SetExplicitVarSize_tuple1[v__0]
          ->
          fs_SetExplicitVarSize_tuple2_Matrix1D[v__0, 1] != -1
