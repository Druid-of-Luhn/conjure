[useChannelling] True
[representation] find fs:
                         set (size 2) of set (minSize 1) of function (total) int(1..2) --> int(-1, 1)
                 (#1)
                 Set~Explicit
[configuration] fs§region1#Set~Explicit
[addedDecl] find fs_Set~Explicit:
                    matrix indexed by [int(1..2)] of set (minSize 1) of
                                                         function (total) int(1..2) --> int(-1, 1)
[refn] 0
[applied] f2(1) = -1
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__2 in toSet(f2) , v__2[1] = 1 . v__2[2] = -1)
[applied] (forAll f in fs§region1#Set~Explicit
               . (forAll f2 in f . (forAll v__2 in toSet(f2) , v__2[1] = 1 . v__2[2] = -1)))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__3 : int(1..2)
                   . (forAll f2 in fs_Set~Explicit§region1[v__3]
                          . (forAll v__2 in toSet(f2) , v__2[1] = 1 . v__2[2] = -1)))
[removeRefinedDecl] find fs:
                            set (size 2) of set (minSize 1) of function (total) int(1..2) --> int(-1, 1)
[repr] 1
[representation] find fs_Set~Explicit:
                         matrix indexed by [int(1..2)] of set (minSize 1) of
                                                              function (total) int(1..2) --> int(-1, 1)
                 (#1)
                 Set~ExplicitVarSize
[configuration] fs_Set~Explicit§region1#Set~ExplicitVarSize
[addedDecl] find fs_Set~Explicit_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2), int(1..4)] of (bool,
                                                                 function (total) int(1..2) --> int(-1, 1))
[refn] 1
[applied] (forAll v__1 in fs_Set~Explicit§region1#Set~ExplicitVarSize[v__0]
               . (forAll v__2 in toSet(v__1) , v__2[1] = 1 . v__2[2] = -1))
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__10 : int(1..4)
                   , fs_Set~Explicit_Set~ExplicitVarSize§region1[v__0, v__10, 1]
                   . (forAll v__2 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[v__0,
                                                                                       v__10,
                                                                                       2])
                          , v__2[1] = 1
                          . v__2[2] = -1))
[applied] fs_Set~Explicit§region1#Set~ExplicitVarSize[1]
          .<
          fs_Set~Explicit§region1#Set~ExplicitVarSize[2]
          {rules/refns/vertical/Set~ExplicitVarSize/DotLt.rule}
              (exists v__11 : int(1..4)
                   . (forAll v__12 : int(1..4) , v__12 < v__11
                          . fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__12, 2]
                            =
                            fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2])
                     /\
                     (fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__11, 1]
                      /\
                      fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__11, 1]
                      /\
                      fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__11, 2]
                      .<
                      fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__11, 2]
                      \/
                      toInt(fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__11, 1])
                      >
                      toInt(fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__11, 1])))
[applied] fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__12, 2]
          =
          fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2]
          {rules/refns/horizontal/function-eq.rule}
              (forAll v__13 in defined(fs_Set~Explicit_Set~ExplicitVarSize§region1[1,
                                                                                   v__12,
                                                                                   2])
                   . fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__12, 2](v__13)
                     =
                     fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2](v__13))
[applied] fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__12, 2](v__13)
          =
          fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2](v__13)
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__14 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__12, 2])
                   , v__14[1] = v__13
                   . v__14[2] = fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2](v__13))
[applied] v__14[2]
          =
          fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2](v__13)
          {rules/refns/horizontal/function-apply-eq-2.rule}
              (forAll v__15 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[2, v__12, 2])
                   , v__15[1] = v__13
                   . v__15[2] = v__14[2])
[applied] (forAll v__13 in defined(fs_Set~Explicit_Set~ExplicitVarSize§region1[1,
                                                                               v__12,
                                                                               2])
               . (forAll v__14 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[1,
                                                                                    v__12,
                                                                                    2])
                      , v__14[1] = v__13
                      . (forAll v__15 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[2,
                                                                                           v__12,
                                                                                           2])
                             , v__15[1] = v__13
                             . v__15[2] = v__14[2])))
          {rules/refns/horizontal/function-defined-quantified.rule}
              (forAll v__16 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[1, v__12, 2])
                   . (forAll v__14 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[1,
                                                                                        v__12,
                                                                                        2])
                          , v__14[1] = v__16[1]
                          . (forAll v__15 in toSet(fs_Set~Explicit_Set~ExplicitVarSize§region1[2,
                                                                                               v__12,
                                                                                               2])
                                 , v__15[1] = v__16[1]
                                 . v__15[2] = v__14[2])))
[removeRefinedDecl] find fs_Set~Explicit:
                            matrix indexed by [int(1..2)] of set (minSize 1) of
                                                                 function (total) int(1..2) --> int(-1, 1)
[removedDecl] find fs_Set~Explicit_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2), int(1..4)] of (bool,
                                                                   function (total) int(1..2) --> int(-1, 1))
[matrixToTuple] fs_Set~Explicit_Set~ExplicitVarSize∑2
[repr] 2
[representation] find fs_Set~Explicit_Set~ExplicitVarSize_tuple2:
                         matrix indexed by [int(1..2), int(1..4)] of function (total)
                                                                         int(1..2) --> int(-1, 1)
                 (#2)
                 AsReln, Matrix1D
[configuration] fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D
[addedDecl] find fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D:
                    matrix indexed by [int(1..2), int(1..4), int(1..2)] of int(-1, 1)
[refn] 2
[applied] (forAll v__2 in toSet(fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[v__0,
                                                                                            v__1])
               , v__2[1] = 1
               . v__2[2] = -1)
          {rules/refns/vertical/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__23 : int(1..2) , v__23 = 1
                   . fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__23]
                     =
                     -1)
[applied] (forAll v__4 in toSet(fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[2,
                                                                                            v__1])
               , v__4[1] = v__2[1]
               . v__4[2] = v__3[2])
          {rules/refns/vertical/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__24 : int(1..2) , v__24 = v__2[1]
                   . fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[2, v__1, v__24]
                     =
                     v__3[2])
[applied] (forAll v__3 in toSet(fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[1,
                                                                                            v__1])
               , v__3[1] = v__2[1]
               . (forAll v__24 : int(1..2) , v__24 = v__2[1]
                      . fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[2, v__1, v__24]
                        =
                        v__3[2]))
          {rules/refns/vertical/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__25 : int(1..2) , v__25 = v__2[1]
                   . (forAll v__24 : int(1..2) , v__24 = v__2[1]
                          . fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[2, v__1, v__24]
                            =
                            fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[1, v__1, v__25]))
[applied] (forAll v__2 in toSet(fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[1,
                                                                                            v__1])
               . (forAll v__25 : int(1..2) , v__25 = v__2[1]
                      . (forAll v__24 : int(1..2) , v__24 = v__2[1]
                             . fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[2, v__1, v__24]
                               =
                               fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[1, v__1, v__25])))
          {rules/refns/vertical/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__26 : int(1..2)
                   . (forAll v__25 : int(1..2) , v__25 = v__26
                          . (forAll v__24 : int(1..2) , v__24 = v__26
                                 . fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[2, v__1, v__24]
                                   =
                                   fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[1, v__1, v__25])))
[applied] fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[1, v__0]
          .<
          fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[2, v__0]
          {rules/refns/vertical/function-matrix1d/DotLt.rule}
              fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[1, v__0]
              .<
              fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[2, v__0]
[applied] fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[v__0,
                                                                      v__1]
          .<
          fs_Set~Explicit_Set~ExplicitVarSize_tuple2§region1#Matrix1D[v__0, v__1 + 1]
          {rules/refns/vertical/function-matrix1d/DotLt.rule}
              fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1]
              .<
              fs_Set~Explicit_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1 + 1]
[removeRefinedDecl] find fs_Set~Explicit_Set~ExplicitVarSize_tuple2:
                            matrix indexed by [int(1..2), int(1..4)] of function (total)
                                                                            int(1..2) --> int(-1, 1)
[repr] 3