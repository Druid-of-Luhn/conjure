[useChannelling] True
[representation] find pain:
                         matrix indexed by [int(1..2), int(3..4)] of set (minSize 1) of int(6, 8)
                 (#2)
                 Set~ExplicitVarSize, Set~Occurrence
[configuration] pain§region2#Set~ExplicitVarSize pain§region1#Set~Occurrence
[addedDecl] find pain_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2), int(3..4), int(1..2)] of (bool, int(6, 8))
[addedDecl] find pain_Set~Occurrence:
                    matrix indexed by [int(1..2), int(3..4), int(6, 8)] of bool
[refn] 0
[applied] 6 in pain§region1#Set~Occurrence[1, 3]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_Set~Occurrence§region1[1, 3, 6] = true
[applied] 8 in pain§region2#Set~ExplicitVarSize[1, 4]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__18 in pain§region2#Set~ExplicitVarSize[1, 4] . v__18 = 8)
[applied] (exists v__18 in pain§region2#Set~ExplicitVarSize[1, 4] . v__18 = 8)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__19 : int(1..2) , pain_Set~ExplicitVarSize§region2[1, 4, v__19, 1]
                   . pain_Set~ExplicitVarSize§region2[1, 4, v__19, 2] = 8)
[applied] pain#Set~ExplicitVarSize[v__16, v__17]
          =
          pain#Set~Occurrence[v__16, v__17]
          {rules/refns/horizontal/set-eq-better.rule}
              (forAll v__20 : int(6, 8)
                   . v__20 in pain#Set~ExplicitVarSize[v__16, v__17]
                     <->
                     v__20 in pain#Set~Occurrence[v__16, v__17])
              /\
              (forAll v__20 : int(6, 8)
                   . v__20 in pain#Set~ExplicitVarSize[v__16, v__17]
                     <->
                     v__20 in pain#Set~Occurrence[v__16, v__17])
[applied] v__20 in pain#Set~ExplicitVarSize[v__16, v__17]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__21 in pain#Set~ExplicitVarSize[v__16, v__17] . v__21 = v__20)
[applied] (exists v__21 in pain#Set~ExplicitVarSize[v__16, v__17]
               . v__21 = v__20)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__22 : int(1..2) , pain_Set~ExplicitVarSize[v__16, v__17, v__22, 1]
                   . pain_Set~ExplicitVarSize[v__16, v__17, v__22, 2] = v__20)
[applied] v__20 in pain#Set~Occurrence[v__16, v__17]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_Set~Occurrence[v__16, v__17, v__20] = true
[applied] v__20 in pain#Set~ExplicitVarSize[v__16, v__17]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__23 in pain#Set~ExplicitVarSize[v__16, v__17] . v__23 = v__20)
[applied] (exists v__23 in pain#Set~ExplicitVarSize[v__16, v__17]
               . v__23 = v__20)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__24 : int(1..2) , pain_Set~ExplicitVarSize[v__16, v__17, v__24, 1]
                   . pain_Set~ExplicitVarSize[v__16, v__17, v__24, 2] = v__20)
[applied] pain_Set~ExplicitVarSize§region2[v__4, v__3, 1, 2]
          .<
          pain_Set~ExplicitVarSize§region2[v__4, v__3, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_Set~ExplicitVarSize§region2[v__4, v__3, 1, 2]
              <
              pain_Set~ExplicitVarSize§region2[v__4, v__3, 2, 2]
[removeRefinedDecl] find pain:
                            matrix indexed by [int(1..2), int(3..4)] of set (minSize 1) of int(6, 8)
[removedDecl] find pain_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2), int(3..4), int(1..2)] of (bool, int(6, 8))
[matrixToTuple] pain_Set~ExplicitVarSize∑3
[repr] 1