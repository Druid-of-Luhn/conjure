[useChannelling] True
[handleEnums] letting VCol be new type enum {rx, ry}
              ~~>
              letting VCol_fromEnum be domain int(1..2)
[handleEnums] letting PCol be new type enum {pr, pg}
              ~~>
              letting PCol_fromEnum be domain int(1..2)
[representation] find x: relation (minSize 1) of (int(1..2) * int(1..2))
                 (#1)
                 RelationAsSet
[configuration] x§region1#RelationAsSet
[addedDecl] find x_RelationAsSet: set (minSize 1) of (int(1..2), int(1..2))
[refn] 0
[removeRefinedDecl] find x: relation (minSize 1) of (int(1..2) * int(1..2))
[repr] 1
[representation] find x_RelationAsSet: set (minSize 1) of (int(1..2), int(1..2))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] x_RelationAsSet§region1#Set~ExplicitVarSizeWithMarker
[addedDecl] find x_RelationAsSet_Set~ExplicitVarSizeWithMarker:
                    (int(0..4), matrix indexed by [int(1..4)] of (int(1..2), int(1..2)))
[addedStructuralCons] (forAll v__3 : int(1..4)
                           , v__3 + 1 <= x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                           . x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 1]
                             .<
                             x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 1]
                             \/
                             x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 1]
                             =
                             x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 1]
                             /\
                             x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 2]
                             .<
                             x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 2])
                      x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1] >= 1
[refn] 1
[applied] x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 1]
          .<
          x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 1]
              <
              x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 1]
[applied] x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 2]
          .<
          x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3, 2]
              <
              x_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1, 2]
[removeRefinedDecl] find x_RelationAsSet:
                            set (minSize 1) of (int(1..2), int(1..2))
[removedDecl] find x_RelationAsSet_Set~ExplicitVarSizeWithMarker:
                      (int(0..4), matrix indexed by [int(1..4)] of (int(1..2), int(1..2)))
              Added the following:
              find x_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple1: int(0..4)
              find x_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..4)] of (int(1..2), int(1..2))
[matrixToTuple] x_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2∑1
[removedDecl] find x_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..4)] of (int(1..2), int(1..2))
              Added the following:
              find x_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1:
                      matrix indexed by [int(1..4)] of int(1..2)
              find x_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2:
                      matrix indexed by [int(1..4)] of int(1..2)
[repr] 2