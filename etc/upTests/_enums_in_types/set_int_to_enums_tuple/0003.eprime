language ESSENCE' 1.0

find valid_SetExplicitVarSize_tuple1: matrix indexed by [int(1..12)] of bool
find valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1:
        matrix indexed by [int(1..12), int(1..3)] of int(1..2)
find valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2:
        matrix indexed by [int(1..12), int(1..3)] of int(1..2)
such that
    (sum v__0 : int(1..12) . valid_SetExplicitVarSize_tuple1[v__0]) >= 1,
    forAll v__0 : int(1..11)
        . valid_SetExplicitVarSize_tuple1[v__0]
          /\
          valid_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0, 1]
          <
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0 + 1, 1]
          \/
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0, 1]
          =
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0 + 1, 1]
          /\
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2[v__0, 1]
          <
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2[v__0 + 1, 1]
          \/
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0, 1]
          =
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0 + 1, 1]
          /\
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2[v__0, 1]
          =
          valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2[v__0 + 1, 1]
          /\
          (valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0, 2]
           <
           valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0 + 1, 2]
           \/
           valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0, 2]
           =
           valid_SetExplicitVarSize_tuple2_Matrix1D_tuple1[v__0 + 1, 2]
           /\
           valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2[v__0, 2]
           <
           valid_SetExplicitVarSize_tuple2_Matrix1D_tuple2[v__0 + 1, 2]),
    forAll v__0 : int(1..11)
        . valid_SetExplicitVarSize_tuple1[v__0]
          >=
          valid_SetExplicitVarSize_tuple1[v__0 + 1]
