[useChannelling] True
[handleEnums] letting VCol be new type enum {rx, ry}
              ~~>
              letting VCol_fromEnum be domain int(1..2)
[representation] find valid:
                         set (minSize 1) of function (total) int(1..3) --> int(1..2)
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] valid§region1#Set~ExplicitVarSize
[addedDecl] find valid_Set~ExplicitVarSize:
                    matrix indexed by [int(1..6)] of (bool,
                                                      function (total) int(1..3) --> int(1..2))
[addedStructuralCons] (forAll v__1 : int(1..5)
                           , valid_Set~ExplicitVarSize§region1[v__1, 1]
                             /\
                             valid_Set~ExplicitVarSize§region1[v__1 + 1, 1]
                           . valid_Set~ExplicitVarSize§region1[v__1, 2]
                             .<
                             valid_Set~ExplicitVarSize§region1[v__1 + 1, 2])
                      /\
                      (forAll v__1 : int(1..5)
                           . valid_Set~ExplicitVarSize§region1[v__1, 1]
                             >=
                             valid_Set~ExplicitVarSize§region1[v__1 + 1, 1])
                      (sum v__2 : int(1..6) . valid_Set~ExplicitVarSize§region1[v__2, 1]) >= 1
[refn] 0
[removeRefinedDecl] find valid:
                            set (minSize 1) of function (total) int(1..3) --> int(1..2)
[matrixToTuple] valid_Set~ExplicitVarSize∑1
[removedDecl] find valid_Set~ExplicitVarSize:
                      matrix indexed by [int(1..6)] of (bool,
                                                        function (total) int(1..3) --> int(1..2))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple1: matrix indexed by [int(1..6)] of bool
              find valid_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..6)] of function (total) int(1..3) --> int(1..2)
[repr] 1
[representation] find valid_Set~ExplicitVarSize_tuple2:
                         matrix indexed by [int(1..6)] of function (total) int(1..3) --> int(1..2)
                 (#2)
                 AsReln, Matrix1D
[configuration] valid_Set~ExplicitVarSize_tuple2§region1#AsReln
[addedDecl] find valid_Set~ExplicitVarSize_tuple2_AsReln:
                    matrix indexed by [int(1..6)] of relation of (int(1..3) * int(1..2))
[addedStructuralCons] (forAll v__7 : int(1..6)
                           . (forAll v__5 : int(1..3)
                                  . (sum v__6 in toSet(valid_Set~ExplicitVarSize_tuple2_AsReln§region1[v__7])
                                         . v__5 = v__6[1])
                                    =
                                    1))
[refn] 1
[applied] valid_Set~ExplicitVarSize_tuple2§region1#AsReln[v__0]
          .<
          valid_Set~ExplicitVarSize_tuple2§region1#AsReln[v__0 + 1]
          {rules/refns/vertical/function-asreln/DotLt.rule}
              valid_Set~ExplicitVarSize_tuple2_AsReln§region1[v__0]
              .<
              valid_Set~ExplicitVarSize_tuple2_AsReln§region1[v__0 + 1]
[removeRefinedDecl] find valid_Set~ExplicitVarSize_tuple2:
                            matrix indexed by [int(1..6)] of function (total) int(1..3) --> int(1..2)
[repr] 2
[representation] find valid_Set~ExplicitVarSize_tuple2_AsReln:
                         matrix indexed by [int(1..6)] of relation of (int(1..3) * int(1..2))
                 (#2)
                 RelationAsSet, RelationIntMatrix2
[configuration] valid_Set~ExplicitVarSize_tuple2_AsReln§region1#RelationIntMatrix2
[addedDecl] find valid_Set~ExplicitVarSize_tuple2_AsReln_RelationIntMatrix2:
                    matrix indexed by [int(1..6), int(1..3), int(1..2)] of bool
[refn] 2
[applied] valid_Set~ExplicitVarSize_tuple2_AsReln§region1#RelationIntMatrix2[v__0]
          .<
          valid_Set~ExplicitVarSize_tuple2_AsReln§region1#RelationIntMatrix2[v__0 + 1]
          {rules/refns/vertical/relation-IntMatrix2/DotLt.rule}
              valid_Set~ExplicitVarSize_tuple2_AsReln_RelationIntMatrix2§region1[v__0 + 1]
              .<
              valid_Set~ExplicitVarSize_tuple2_AsReln_RelationIntMatrix2§region1[v__0]
[applied] (sum v__2 in toSet(valid_Set~ExplicitVarSize_tuple2_AsReln§region1#RelationIntMatrix2[v__0])
               . v__1 = v__2[1])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__8 : int(1..3)
                   . (sum v__9 : int(1..2)
                          , valid_Set~ExplicitVarSize_tuple2_AsReln_RelationIntMatrix2§region1[v__0,
                                                                                               v__8,
                                                                                               v__9]
                          . v__1 = v__8))
[removeRefinedDecl] find valid_Set~ExplicitVarSize_tuple2_AsReln:
                            matrix indexed by [int(1..6)] of relation of (int(1..3) * int(1..2))
[repr] 3