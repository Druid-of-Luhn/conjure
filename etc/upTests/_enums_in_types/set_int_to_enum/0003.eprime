language ESSENCE' 1.0

find valid_SetExplicitVarSize_tuple1: matrix indexed by [int(1..6)] of bool
find valid_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2:
        matrix indexed by [int(1..6), int(1..3), int(1..2)] of bool
such that
    (sum v__0 : int(1..6) . valid_SetExplicitVarSize_tuple1[v__0]) >= 1,
    forAll v__0 : int(1..5)
        . valid_SetExplicitVarSize_tuple1[v__0]
          /\
          valid_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          flatten(valid_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0 + 1,
                                                                            ..,
                                                                            ..])
          <lex
          flatten(valid_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0,
                                                                            ..,
                                                                            ..]),
    forAll v__0 : int(1..5)
        . valid_SetExplicitVarSize_tuple1[v__0]
          >=
          valid_SetExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..6)
        . (forAll v__1 : int(1..3)
               . (sum v__2 : int(1..3)
                      . (sum v__3 : int(1..2)
                             . valid_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0, v__2, v__3]
                               *
                               (v__1 = v__2)))
                 =
                 1)
