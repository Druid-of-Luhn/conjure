[useChannelling] True
[handleEnums] letting VCol be new type enum {rx, ry}
              ~~>
              letting VCol_fromEnum be domain int(1..2)
[handleEnums] letting PCol be new type enum {pr}
              ~~>
              letting PCol_fromEnum be domain int(1..1)
[representation] find valid: set (minSize 1) of (int(1..2), int(1..1))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] valid§region1#Set~ExplicitVarSize
[addedDecl] find valid_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, (int(1..2), int(1..1)))
[addedStructuralCons] (valid_Set~ExplicitVarSize§region1[1, 1]
                       /\
                       valid_Set~ExplicitVarSize§region1[2, 1]
                       ->
                       valid_Set~ExplicitVarSize§region1[1, 2, 1]
                       .<
                       valid_Set~ExplicitVarSize§region1[2, 2, 1]
                       \/
                       valid_Set~ExplicitVarSize§region1[1, 2, 1]
                       =
                       valid_Set~ExplicitVarSize§region1[2, 2, 1]
                       /\
                       valid_Set~ExplicitVarSize§region1[1, 2, 2]
                       .<
                       valid_Set~ExplicitVarSize§region1[2, 2, 2])
                      /\
                      valid_Set~ExplicitVarSize§region1[1, 1]
                      >=
                      valid_Set~ExplicitVarSize§region1[2, 1]
                      (sum v__2 : int(1..2) . valid_Set~ExplicitVarSize§region1[v__2, 1]) >= 1
[refn] 0
[applied] valid_Set~ExplicitVarSize§region1[1, 2, 1]
          .<
          valid_Set~ExplicitVarSize§region1[2, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSize§region1[1, 2, 1]
              <
              valid_Set~ExplicitVarSize§region1[2, 2, 1]
[applied] valid_Set~ExplicitVarSize§region1[1, 2, 2]
          .<
          valid_Set~ExplicitVarSize§region1[2, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSize§region1[1, 2, 2]
              <
              valid_Set~ExplicitVarSize§region1[2, 2, 2]
[removeRefinedDecl] find valid: set (minSize 1) of (int(1..2), int(1..1))
[matrixToTuple] valid_Set~ExplicitVarSize∑1
[removedDecl] find valid_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, (int(1..2), int(1..1)))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple1: matrix indexed by [int(1..2)] of bool
              find valid_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2)] of (int(1..2), int(1..1))
[matrixToTuple] valid_Set~ExplicitVarSize_tuple2∑1
[removedDecl] find valid_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2)] of (int(1..2), int(1..1))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple2_tuple1:
                      matrix indexed by [int(1..2)] of int(1..2)
              find valid_Set~ExplicitVarSize_tuple2_tuple2:
                      matrix indexed by [int(1..2)] of int(1..1)
[repr] 1