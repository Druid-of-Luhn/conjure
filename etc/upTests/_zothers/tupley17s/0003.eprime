language ESSENCE' 1.0

find pain_tuple1_tuple1_SetOccurrence:
        matrix indexed by [int(1..2), int(1, 2)] of bool
find pain_tuple1_tuple1_SetExplicit:
        matrix indexed by [int(1..2), int(1..1)] of int(1, 2)
find pain_tuple1_tuple2_tuple1: matrix indexed by [int(1..2)] of int(4, 5)
find pain_tuple1_tuple2_tuple2: matrix indexed by [int(1..2)] of int(6, 7)
find pain_tuple2: matrix indexed by [int(1..2)] of int(8, 9)
such that
    pain_tuple1_tuple1_SetExplicit[1, 1] = 2,
    pain_tuple1_tuple1_SetOccurrence[2, 1] = true,
    pain_tuple1_tuple2_tuple1[1] = 5,
    pain_tuple1_tuple2_tuple1[2] = 4,
    pain_tuple1_tuple2_tuple2[1] = 6,
    pain_tuple1_tuple2_tuple2[2] = 7,
    pain_tuple2[1] = 8,
    pain_tuple2[2] = 9,
    2 = pain_tuple1_tuple1_SetExplicit[1, 1],
    forAll v__0 : int(1..2)
        . (forAll v__1 : int(1, 2)
               . pain_tuple1_tuple1_SetExplicit[v__0, 1] = v__1
                 <->
                 pain_tuple1_tuple1_SetOccurrence[v__0, v__1] = true)
          /\
          (forAll v__1 : int(1, 2)
               . pain_tuple1_tuple1_SetExplicit[v__0, 1] = v__1
                 <->
                 pain_tuple1_tuple1_SetOccurrence[v__0, v__1] = true),
    forAll v__0 : int(1..2)
        . (sum v__1 : int(1, 2) . pain_tuple1_tuple1_SetOccurrence[v__0, v__1]) = 1,
    forAll v__0 : int(1, 2) . pain_tuple1_tuple1_SetOccurrence[2, v__0] -> 1 = v__0
