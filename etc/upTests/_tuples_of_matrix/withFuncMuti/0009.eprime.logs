[useChannelling] True
[removedDecl] find pain:
                      tuple (matrix indexed by [int(1, 2, 3)] of (int(1, 2),
                                                                  function (total) int(1..2) --> int(-1, 1),
                                                                  int(4, 5)))
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1, 2, 3)] of (int(1, 2),
                                                           function (total) int(1..2) --> int(-1, 1),
                                                           int(4, 5))
[matrixToTuple] pain_tuple1∑1
[representation] find pain_tuple1_tuple2:
                         matrix indexed by [int(1, 2, 3)] of function (total) int(1..2) --> int(-1, 1)
                 (#2)
                 AsReln, Matrix1D
[configuration] pain_tuple1_tuple2§region2#AsReln pain_tuple1_tuple2§region3#AsReln pain_tuple1_tuple2§region1#Matrix1D
[addedDecl] find pain_tuple1_tuple2_AsReln:
                    matrix indexed by [int(1, 2, 3)] of relation of (int(1..2) * int(-1, 1))
[addedDecl] find pain_tuple1_tuple2_Matrix1D:
                    matrix indexed by [int(1, 2, 3), int(1..2)] of int(-1, 1)
[refn] 0
[applied] pain_tuple1_tuple2§region1#Matrix1D[1](1)
          {rules/refns/vertical/function-matrix1d/function-matrix1d-image.rule}
              pain_tuple1_tuple2_Matrix1D§region1[1, 1]
[applied] pain_tuple1_tuple2§region2#AsReln[2](1)
          {rules/refns/vertical/function-asreln/function-asreln-image-int.rule}
              (sum v__6 in toSet(pain_tuple1_tuple2_AsReln§region2[2]) , v__6[1] = 1
                   . v__6[2])
[applied] pain_tuple1_tuple2§region3#AsReln[3](1)
          {rules/refns/vertical/function-asreln/function-asreln-image-int.rule}
              (sum v__7 in toSet(pain_tuple1_tuple2_AsReln§region3[3]) , v__7[1] = 1
                   . v__7[2])
[applied] pain_tuple1_tuple2#AsReln[v__5] = pain_tuple1_tuple2#Matrix1D[v__5]
          {rules/refns/horizontal/function-eq.rule}
              (forAll v__8 in defined(pain_tuple1_tuple2#AsReln[v__5])
                   . pain_tuple1_tuple2#AsReln[v__5](v__8)
                     =
                     pain_tuple1_tuple2#Matrix1D[v__5](v__8))
[applied] pain_tuple1_tuple2#AsReln[v__5](v__8)
          {rules/refns/vertical/function-asreln/function-asreln-image-int.rule}
              (sum v__9 in toSet(pain_tuple1_tuple2_AsReln[v__5]) , v__9[1] = v__8 . v__9[2])
[applied] pain_tuple1_tuple2#Matrix1D[v__5](v__8)
          {rules/refns/vertical/function-matrix1d/function-matrix1d-image.rule}
              pain_tuple1_tuple2_Matrix1D[v__5, v__8]
[applied] (forAll v__8 in defined(pain_tuple1_tuple2#AsReln[v__5])
               . (sum v__9 in toSet(pain_tuple1_tuple2_AsReln[v__5]) , v__9[1] = v__8
                      . v__9[2])
                 =
                 pain_tuple1_tuple2_Matrix1D[v__5, v__8])
          {rules/refns/horizontal/function-defined-quantified.rule}
              (forAll v__10 in toSet(pain_tuple1_tuple2#AsReln[v__5])
                   . (sum v__9 in toSet(pain_tuple1_tuple2_AsReln[v__5]) , v__9[1] = v__10[1]
                          . v__9[2])
                     =
                     pain_tuple1_tuple2_Matrix1D[v__5, v__10[1]])
[applied] (forAll v__10 in toSet(pain_tuple1_tuple2#AsReln[v__5])
               . (sum v__9 in toSet(pain_tuple1_tuple2_AsReln[v__5]) , v__9[1] = v__10[1]
                      . v__9[2])
                 =
                 pain_tuple1_tuple2_Matrix1D[v__5, v__10[1]])
          {rules/refns/vertical/function-asreln/function-toSet-quantified.rule}
              (forAll v__10 in toSet(pain_tuple1_tuple2_AsReln[v__5])
                   . (sum v__9 in toSet(pain_tuple1_tuple2_AsReln[v__5]) , v__9[1] = v__10[1]
                          . v__9[2])
                     =
                     pain_tuple1_tuple2_Matrix1D[v__5, v__10[1]])
[removeRefinedDecl] find pain_tuple1_tuple2:
                            matrix indexed by [int(1, 2, 3)] of function (total) int(1..2) --> int(-1, 1)
[repr] 1
[representation] find pain_tuple1_tuple2_AsReln:
                         matrix indexed by [int(1, 2, 3)] of relation of (int(1..2) * int(-1, 1))
                 (#2)
                 RelationIntMatrix2, RelationAsSet
[configuration] pain_tuple1_tuple2_AsReln§region3#RelationIntMatrix2 pain_tuple1_tuple2_AsReln§region1#RelationIntMatrix2 pain_tuple1_tuple2_AsReln§region2#RelationIntMatrix2
[addedDecl] find pain_tuple1_tuple2_AsReln_RelationIntMatrix2:
                    matrix indexed by [int(1, 2, 3), int(1..2), int(-1, 1)] of bool
[refn] 1
[applied] (sum v__0 in toSet(pain_tuple1_tuple2_AsReln§region2#RelationIntMatrix2[2])
               , v__0[1] = 1
               . v__0[2])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__11 : int(1..2)
                   . (sum v__12 : int(-1, 1)
                          , v__11 = 1
                            /\
                            pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region2[2, v__11, v__12]
                          . v__12))
[applied] (sum v__0 in toSet(pain_tuple1_tuple2_AsReln§region3#RelationIntMatrix2[3])
               , v__0[1] = 1
               . v__0[2])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__13 : int(1..2)
                   . (sum v__14 : int(-1, 1)
                          , v__13 = 1
                            /\
                            pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region3[3, v__13, v__14]
                          . v__14))
[applied] (sum v__2 in toSet(pain_tuple1_tuple2_AsReln§region2#RelationIntMatrix2[v__0])
               , v__2[1] = v__1[1]
               . v__2[2])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__15 : int(1..2)
                   . (sum v__16 : int(-1, 1)
                          , v__15 = v__1[1]
                            /\
                            pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region2[v__0, v__15, v__16]
                          . v__16))
[applied] (forAll v__1 in toSet(pain_tuple1_tuple2_AsReln§region1#RelationIntMatrix2[v__0])
               . (sum v__15 : int(1..2)
                      . (sum v__16 : int(-1, 1)
                             , v__15 = v__1[1]
                               /\
                               pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region2[v__0, v__15, v__16]
                             . v__16))
                 =
                 pain_tuple1_tuple2_Matrix1D[v__0, v__1[1]])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (forAll v__17 : int(1..2)
                   . (forAll v__18 : int(-1, 1)
                          , pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region1[v__0, v__17, v__18]
                          . (sum v__15 : int(1..2)
                                 . (sum v__16 : int(-1, 1)
                                        , v__15 = v__17
                                          /\
                                          pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region2[v__0, v__15, v__16]
                                        . v__16))
                            =
                            pain_tuple1_tuple2_Matrix1D[v__0, v__17]))
[applied] (sum v__2 in toSet(pain_tuple1_tuple2_AsReln§region3#RelationIntMatrix2[v__0])
               . v__1 = v__2[1])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__19 : int(1..2)
                   . (sum v__20 : int(-1, 1)
                          , pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region3[v__0, v__19, v__20]
                          . v__1 = v__19))
[applied] (sum v__2 in toSet(pain_tuple1_tuple2_AsReln§region2#RelationIntMatrix2[v__0])
               . v__1 = v__2[1])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__21 : int(1..2)
                   . (sum v__22 : int(-1, 1)
                          , pain_tuple1_tuple2_AsReln_RelationIntMatrix2§region2[v__0, v__21, v__22]
                          . v__1 = v__21))
[removeRefinedDecl] find pain_tuple1_tuple2_AsReln:
                            matrix indexed by [int(1, 2, 3)] of relation of (int(1..2) * int(-1, 1))
[repr] 2