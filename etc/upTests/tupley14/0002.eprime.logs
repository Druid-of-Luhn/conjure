[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1..2)] of ((int(1, 2), int(4, 5)),
                                                        set (size 1) of int(8, 9))
[matrixToTuple] pain∑1
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1..2)] of (int(1, 2), int(4, 5))
[matrixToTuple] pain_tuple1∑1
[representation] find pain_tuple2:
                         matrix indexed by [int(1..2)] of set (size 1) of int(8, 9)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] pain_tuple2§region2#Set~Explicit pain_tuple2§region1#Set~Occurrence
[addedDecl] find pain_tuple2_Set~Explicit:
                    matrix indexed by [int(1..2), int(1..1)] of int(8, 9)
[addedDecl] find pain_tuple2_Set~Occurrence:
                    matrix indexed by [int(1..2), int(8, 9)] of bool
[refn] 0
[applied] pain_tuple2§region1#Set~Occurrence[1] = {8}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region1#Set~Occurrence[1] subsetEq {8}
              /\
              pain_tuple2§region1#Set~Occurrence[1] supsetEq {8}
[applied] pain_tuple2§region1#Set~Occurrence[1] subsetEq {8}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__8 in pain_tuple2§region1#Set~Occurrence[1] . v__8 in {8})
[applied] v__8 in {8}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              8 = v__8
[applied] (forAll v__8 in pain_tuple2§region1#Set~Occurrence[1] . 8 = v__8)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__10 : int(8, 9) , pain_tuple2_Set~Occurrence§region1[1, v__10]
                   . 8 = v__10)
[applied] pain_tuple2§region1#Set~Occurrence[1] supsetEq {8}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {8} subsetEq pain_tuple2§region1#Set~Occurrence[1]
[applied] {8} subsetEq pain_tuple2§region1#Set~Occurrence[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              8 in pain_tuple2§region1#Set~Occurrence[1]
[applied] 8 in pain_tuple2§region1#Set~Occurrence[1]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple2_Set~Occurrence§region1[1, 8] = true
[applied] pain_tuple2§region2#Set~Explicit[2] = {9}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region2#Set~Explicit[2] subsetEq {9}
              /\
              pain_tuple2§region2#Set~Explicit[2] supsetEq {9}
[applied] pain_tuple2§region2#Set~Explicit[2] subsetEq {9}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__12 in pain_tuple2§region2#Set~Explicit[2] . v__12 in {9})
[applied] v__12 in {9}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              9 = v__12
[applied] (forAll v__12 in pain_tuple2§region2#Set~Explicit[2] . 9 = v__12)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              9 = pain_tuple2_Set~Explicit§region2[2, 1]
[applied] pain_tuple2§region2#Set~Explicit[2] supsetEq {9}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple2§region2#Set~Explicit[2]
[applied] {9} subsetEq pain_tuple2§region2#Set~Explicit[2]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              9 in pain_tuple2§region2#Set~Explicit[2]
[applied] 9 in pain_tuple2§region2#Set~Explicit[2]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__16 in pain_tuple2§region2#Set~Explicit[2] . v__16 = 9)
[applied] (exists v__16 in pain_tuple2§region2#Set~Explicit[2] . v__16 = 9)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple2_Set~Explicit§region2[2, 1] = 9
[applied] pain_tuple2#Set~Explicit[v__7] = pain_tuple2#Set~Occurrence[v__7]
          {rules/refns/horizontal/set-eq-better.rule}
              (forAll v__18 : int(8, 9)
                   . v__18 in pain_tuple2#Set~Explicit[v__7]
                     <->
                     v__18 in pain_tuple2#Set~Occurrence[v__7])
              /\
              (forAll v__18 : int(8, 9)
                   . v__18 in pain_tuple2#Set~Explicit[v__7]
                     <->
                     v__18 in pain_tuple2#Set~Occurrence[v__7])
[applied] v__18 in pain_tuple2#Set~Explicit[v__7]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__19 in pain_tuple2#Set~Explicit[v__7] . v__19 = v__18)
[applied] (exists v__19 in pain_tuple2#Set~Explicit[v__7] . v__19 = v__18)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple2_Set~Explicit[v__7, 1] = v__18
[applied] v__18 in pain_tuple2#Set~Occurrence[v__7]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple2_Set~Occurrence[v__7, v__18] = true
[applied] v__18 in pain_tuple2#Set~Explicit[v__7]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__21 in pain_tuple2#Set~Explicit[v__7] . v__21 = v__18)
[applied] (exists v__21 in pain_tuple2#Set~Explicit[v__7] . v__21 = v__18)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple2_Set~Explicit[v__7, 1] = v__18
[removeRefinedDecl] find pain_tuple2:
                            matrix indexed by [int(1..2)] of set (size 1) of int(8, 9)
[repr] 1