[useChannelling] True
[representation] find f: function (total) int(1..2) --> int(-1, 1) (#2) Function~1D, Function~AsReln
[configuration] f§region1#Function~AsReln
[addedDecl] find f_Function~AsReln: relation of (int(1..2) * int(-1, 1))
[addedStructuralCons] {Function~AsReln}
                      (forAll v__1 : int(1..2) . (sum v__2 in toSet(f_Function~AsReln§region1) . toInt(v__1 = v__2[1])) = 1)
[refn] 0
[applied] f§region1#Function~AsReln = function(1 --> -1, 2 --> 1)
          {rules/refns/horizontal/function-eq.rule}
              (forAll v__3 in defined(f§region1#Function~AsReln) . f§region1#Function~AsReln(v__3) = function(1 --> -1, 2 --> 1)(v__3))
[applied] f§region1#Function~AsReln(v__3)
          {rules/refns/vertical/Function~AsReln/image-int.rule}
              (sum v__4 in toSet(f_Function~AsReln§region1) , v__4[1] = v__3 . v__4[2])
[applied] function(1 --> -1, 2 --> 1)(v__3)
          {builtIn.functionLiteralApply}
              toInt(1 = v__3) * -1 + toInt(2 = v__3)
[applied] (forAll v__3 in defined(f§region1#Function~AsReln)
               . (sum v__4 in toSet(f_Function~AsReln§region1) , v__4[1] = v__3 . v__4[2]) = toInt(1 = v__3) * -1 + toInt(2 = v__3))
          {rules/refns/horizontal/function-defined-quantified.rule}
              (forAll v__6 in toSet(f§region1#Function~AsReln)
                   . (sum v__4 in toSet(f_Function~AsReln§region1) , v__4[1] = v__6[1] . v__4[2]) = toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]))
[applied] (forAll v__6 in toSet(f§region1#Function~AsReln)
               . (sum v__4 in toSet(f_Function~AsReln§region1) , v__4[1] = v__6[1] . v__4[2]) = toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]))
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll v__6 in toSet(f_Function~AsReln§region1)
                   . (sum v__4 in toSet(f_Function~AsReln§region1) , v__4[1] = v__6[1] . v__4[2]) = toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]))
[removeRefinedDecl] find f: function (total) int(1..2) --> int(-1, 1)
[repr] 1
[representation] find f_Function~AsReln: relation of (int(1..2) * int(-1, 1)) (#2) RelationAsSet, RelationIntMatrix2
[configuration] f_Function~AsReln§region1#RelationAsSet
[addedDecl] find f_Function~AsReln_RelationAsSet: set of (int(1..2), int(-1, 1))
[refn] 1
[applied] (sum v__1 in toSet(f_Function~AsReln§region1#RelationAsSet) , v__1[1] = v__0[1] . v__1[2])
          {rules/refns/vertical/relation-RelationAsSet/relation-RelationAsSet-toSet.rule}
              (sum v__1 in f_Function~AsReln_RelationAsSet§region1 , v__1[1] = v__0[1] . v__1[2])
[applied] (forAll v__0 in toSet(f_Function~AsReln§region1#RelationAsSet)
               . (sum v__1 in f_Function~AsReln_RelationAsSet§region1 , v__1[1] = v__0[1] . v__1[2]) = toInt(1 = v__0[1]) * -1 + toInt(2 = v__0[1]))
          {rules/refns/vertical/relation-RelationAsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__0 in f_Function~AsReln_RelationAsSet§region1
                   . (sum v__1 in f_Function~AsReln_RelationAsSet§region1 , v__1[1] = v__0[1] . v__1[2]) = toInt(1 = v__0[1]) * -1 + toInt(2 = v__0[1]))
[applied] (sum v__1 in toSet(f_Function~AsReln§region1#RelationAsSet) . toInt(v__0 = v__1[1]))
          {rules/refns/vertical/relation-RelationAsSet/relation-RelationAsSet-toSet.rule}
              (sum v__1 in f_Function~AsReln_RelationAsSet§region1 . toInt(v__0 = v__1[1]))
[removeRefinedDecl] find f_Function~AsReln: relation of (int(1..2) * int(-1, 1))
[repr] 2
[representation] find f_Function~AsReln_RelationAsSet: set of (int(1..2), int(-1, 1)) (#2) Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] f_Function~AsReln_RelationAsSet§region1#Set~ExplicitVarSizeWithMarker
[addedDecl] find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker: (int(0..4), matrix indexed by [int(1..4)] of (int(1..2), int(-1, 1)))
[addedStructuralCons] {Set~ExplicitVarSizeWithMarker}
                      (forAll v__8 : int(1..4) , v__8 + 1 <= f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                           . f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 1]
                             .<
                             f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 1]
                             \/
                             f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 1]
                             =
                             f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 1]
                             /\
                             f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 2]
                             .<
                             f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 2])
[refn] 2
[applied] (sum v__1 in f_Function~AsReln_RelationAsSet§region1#Set~ExplicitVarSizeWithMarker , v__1[1] = v__0[1] . v__1[2])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (sum v__9 : int(1..4)
                   , f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__9, 1] = v__0[1]
                     /\
                     v__9 <= f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                   . f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__9, 2])
[applied] (forAll v__0 in f_Function~AsReln_RelationAsSet§region1#Set~ExplicitVarSizeWithMarker
               . (sum v__9 : int(1..4)
                      , f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__9, 1] = v__0[1]
                        /\
                        v__9 <= f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                      . f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__9, 2])
                 =
                 toInt(1 = v__0[1]) * -1 + toInt(2 = v__0[1]))
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__10 : int(1..4) , v__10 <= f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                   . (sum v__9 : int(1..4)
                          , f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__9, 1]
                            =
                            f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__10, 1]
                            /\
                            v__9 <= f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                          . f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__9, 2])
                     =
                     toInt(1 = f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__10, 1]) * -1
                     +
                     toInt(2 = f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__10, 1]))
[applied] (sum v__1 in f_Function~AsReln_RelationAsSet§region1#Set~ExplicitVarSizeWithMarker . toInt(v__0 = v__1[1]))
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (sum v__11 : int(1..4) , v__11 <= f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[1]
                   . toInt(v__0 = f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__11, 1]))
[applied] f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 1]
          .<
          f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 1]
              <
              f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 1]
[applied] f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 2]
          .<
          f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8, 2]
              <
              f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker§region1[2, v__8 + 1, 2]
[removeRefinedDecl] find f_Function~AsReln_RelationAsSet: set of (int(1..2), int(-1, 1))
[removedDecl] find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker: (int(0..4), matrix indexed by [int(1..4)] of (int(1..2), int(-1, 1)))
              Added the following:
              find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple1: int(0..4)
              find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2: matrix indexed by [int(1..4)] of (int(1..2), int(-1, 1))
[matrixToTuple] f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2∑1
[removedDecl] find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2: matrix indexed by [int(1..4)] of (int(1..2), int(-1, 1))
              Added the following:
              find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1: matrix indexed by [int(1..4)] of int(1..2)
              find f_Function~AsReln_RelationAsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2: matrix indexed by [int(1..4)] of int(-1, 1)
[repr] 3