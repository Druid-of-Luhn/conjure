[useChannelling] True
[representation] find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                              (int(4, 5, 6), int(7, 8, 9))
                 (#1)
                 Set~ExplicitVarSize
[configuration] x§region1#Set~ExplicitVarSize x§region2#Set~ExplicitVarSize
[addedDecl] find x_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2), int(1..9)] of (bool, (int(4, 5, 6), int(7, 8, 9)))
[refn] 0
[applied] (4, 7) in x§region1#Set~ExplicitVarSize[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__7 in x§region1#Set~ExplicitVarSize[1] . v__7[1] = 4 /\ v__7[2] = 7)
[applied] (exists v__7 in x§region1#Set~ExplicitVarSize[1]
               . v__7[1] = 4 /\ v__7[2] = 7)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__8 : int(1..9) , x_Set~ExplicitVarSize§region1[1, v__8, 1]
                   . x_Set~ExplicitVarSize§region1[1, v__8, 2, 1] = 4
                     /\
                     x_Set~ExplicitVarSize§region1[1, v__8, 2, 2] = 7)
[applied] x§region2#Set~ExplicitVarSize[2] = {(5, 8), (6, 9)}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              x§region2#Set~ExplicitVarSize[2] subsetEq {(5, 8), (6, 9)}
              /\
              x§region2#Set~ExplicitVarSize[2] supsetEq {(5, 8), (6, 9)}
[applied] x§region2#Set~ExplicitVarSize[2] subsetEq {(5, 8), (6, 9)}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__9 in x§region2#Set~ExplicitVarSize[2] . v__9 in {(5, 8), (6, 9)})
[applied] v__9 in {(5, 8), (6, 9)}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__9[1] /\ 8 = v__9[2] \/ 6 = v__9[1] /\ 9 = v__9[2]
[applied] (forAll v__9 in x§region2#Set~ExplicitVarSize[2]
               . 5 = v__9[1] /\ 8 = v__9[2] \/ 6 = v__9[1] /\ 9 = v__9[2])
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__11 : int(1..9) , x_Set~ExplicitVarSize§region2[2, v__11, 1]
                   . 5 = x_Set~ExplicitVarSize§region2[2, v__11, 2, 1]
                     /\
                     8 = x_Set~ExplicitVarSize§region2[2, v__11, 2, 2]
                     \/
                     6 = x_Set~ExplicitVarSize§region2[2, v__11, 2, 1]
                     /\
                     9 = x_Set~ExplicitVarSize§region2[2, v__11, 2, 2])
[applied] x§region2#Set~ExplicitVarSize[2] supsetEq {(5, 8), (6, 9)}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {(5, 8), (6, 9)} subsetEq x§region2#Set~ExplicitVarSize[2]
[applied] {(5, 8), (6, 9)} subsetEq x§region2#Set~ExplicitVarSize[2]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (5, 8) in x§region2#Set~ExplicitVarSize[2]
              /\
              (6, 9) in x§region2#Set~ExplicitVarSize[2]
[applied] (5, 8) in x§region2#Set~ExplicitVarSize[2]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__13 in x§region2#Set~ExplicitVarSize[2]
                   . v__13[1] = 5 /\ v__13[2] = 8)
[applied] (exists v__13 in x§region2#Set~ExplicitVarSize[2]
               . v__13[1] = 5 /\ v__13[2] = 8)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__14 : int(1..9) , x_Set~ExplicitVarSize§region2[2, v__14, 1]
                   . x_Set~ExplicitVarSize§region2[2, v__14, 2, 1] = 5
                     /\
                     x_Set~ExplicitVarSize§region2[2, v__14, 2, 2] = 8)
[applied] (6, 9) in x§region2#Set~ExplicitVarSize[2]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__15 in x§region2#Set~ExplicitVarSize[2]
                   . v__15[1] = 6 /\ v__15[2] = 9)
[applied] (exists v__15 in x§region2#Set~ExplicitVarSize[2]
               . v__15[1] = 6 /\ v__15[2] = 9)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__16 : int(1..9) , x_Set~ExplicitVarSize§region2[2, v__16, 1]
                   . x_Set~ExplicitVarSize§region2[2, v__16, 2, 1] = 6
                     /\
                     x_Set~ExplicitVarSize§region2[2, v__16, 2, 2] = 9)
[applied] x_Set~ExplicitVarSize§region2[v__2, v__3, 2, 1]
          .<
          x_Set~ExplicitVarSize§region2[v__2, v__3 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region2[v__2, v__3, 2, 1]
              <
              x_Set~ExplicitVarSize§region2[v__2, v__3 + 1, 2, 1]
[applied] x_Set~ExplicitVarSize§region2[v__2, v__3, 2, 2]
          .<
          x_Set~ExplicitVarSize§region2[v__2, v__3 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region2[v__2, v__3, 2, 2]
              <
              x_Set~ExplicitVarSize§region2[v__2, v__3 + 1, 2, 2]
[applied] x_Set~ExplicitVarSize§region1[v__2, v__3, 2, 1]
          .<
          x_Set~ExplicitVarSize§region1[v__2, v__3 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region1[v__2, v__3, 2, 1]
              <
              x_Set~ExplicitVarSize§region1[v__2, v__3 + 1, 2, 1]
[applied] x_Set~ExplicitVarSize§region1[v__2, v__3, 2, 2]
          .<
          x_Set~ExplicitVarSize§region1[v__2, v__3 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region1[v__2, v__3, 2, 2]
              <
              x_Set~ExplicitVarSize§region1[v__2, v__3 + 1, 2, 2]
[removeRefinedDecl] find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                                 (int(4, 5, 6), int(7, 8, 9))
[removedDecl] find x_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2), int(1..9)] of (bool, (int(4, 5, 6), int(7, 8, 9)))
[matrixToTuple] x_Set~ExplicitVarSize∑2
[removedDecl] find x_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2), int(1..9)] of (int(4, 5, 6), int(7, 8, 9))
[matrixToTuple] x_Set~ExplicitVarSize_tuple2∑2
[repr] 1