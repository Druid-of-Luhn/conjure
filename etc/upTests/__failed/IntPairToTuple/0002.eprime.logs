[useChannelling] False
[representation] find f: function (total) (int(1..a), int(1..b)) --> (int(1..c), int(1, c)) (#2) Function~AsReln, Function~IntPair2D
[configuration] f§regionS#Function~AsReln
[addedDecl] find f_Function~AsReln: relation of ((int(1..a), int(1..b)) * (int(1..c), int(1, c)))
[addedStructuralCons] {Function~AsReln}
                      (forAll v__2 : (int(1..a), int(1..b)) . (sum v__1 in toSet(f_Function~AsReln§regionS) . toInt(v__2[1] = v__1[1, 1] /\ v__2[2] = v__1[1, 2])) = 1)
[refn] 0
[builtIn.quantificationOverTupleDomains] (forAll v__2 : (int(1..a), int(1..b))
                                              . (sum v__1 in toSet(f_Function~AsReln§regionS) . toInt(v__2[1] = v__1[1, 1] /\ v__2[2] = v__1[1, 2])) = 1)
                                         ~~>
                                         (forAll v__2_tuple1 : int(1..a)
                                              . (forAll v__2_tuple2 : int(1..b)
                                                     . (sum v__1 in toSet(f_Function~AsReln§regionS) . toInt((v__2_tuple1, v__2_tuple2)[1] = v__1[1, 1] /\ (v__2_tuple1, v__2_tuple2)[2] = v__1[1, 2])) = 1))
[applied] (forAll i in toSet(f§regionS#Function~AsReln) . i[1, 1] != i[2, 1])
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll i in toSet(f_Function~AsReln§regionS) . i[1, 1] != i[2, 1])
[simplified] (v__2_tuple1, v__2_tuple2)
             ~~>
             (v__2_tuple1, v__2_tuple2)
[simplified] (v__2_tuple1, v__2_tuple2)[1]
             ~~>
             v__2_tuple1
[simplified] (v__2_tuple1, v__2_tuple2)[2]
             ~~>
             v__2_tuple2
[removeRefinedDecl] find f: function (total) (int(1..a), int(1..b)) --> (int(1..c), int(1, c))
[repr] 1
[representation] find f_Function~AsReln: relation of ((int(1..a), int(1..b)) * (int(1..c), int(1, c))) (#1) Relation~AsSet
[configuration] f_Function~AsReln§regionS#Relation~AsSet
[addedDecl] find f_Function~AsReln_Relation~AsSet: set of ((int(1..a), int(1..b)), (int(1..c), int(1, c)))
[refn] 1
[applied] (forAll v__0 in toSet(f_Function~AsReln§regionS#Relation~AsSet) . v__0[1, 1] != v__0[2, 1])
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__0 in f_Function~AsReln_Relation~AsSet§regionS . v__0[1, 1] != v__0[2, 1])
[applied] (sum v__2 in toSet(f_Function~AsReln§regionS#Relation~AsSet) . toInt(v__0 = v__2[1, 1] /\ v__1 = v__2[1, 2]))
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (sum v__2 in f_Function~AsReln_Relation~AsSet§regionS . toInt(v__0 = v__2[1, 1] /\ v__1 = v__2[1, 2]))
[removeRefinedDecl] find f_Function~AsReln: relation of ((int(1..a), int(1..b)) * (int(1..c), int(1, c)))
[repr] 2
[representation] find f_Function~AsReln_Relation~AsSet: set of ((int(1..a), int(1..b)), (int(1..c), int(1, c)))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] f_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker
[addedDecl] find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                    (int(0..a * b * (c * 2)), matrix indexed by [int(1..a * b * (c * 2))] of ((int(1..a), int(1..b)), (int(1..c), int(1, c))))
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4])
                     ~~>
                     dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1])
                     /\
                     dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2])
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1])
                     ~~>
                     dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1])
                     /\
                     dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2])
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2])
                     ~~>
                     dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1])
                     /\
                     dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2])
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1])
                     ~~>
                     f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1] = 1
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2])
                     ~~>
                     f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2] = 1
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1])
                     ~~>
                     f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1] = 1
[Evaluator.dontCare] dontCare(f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2])
                     ~~>
                     f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2] = 1
[addedStructuralCons] {Set~ExplicitVarSizeWithMarker}
                      (forAll v__4 : int(1..a * b * (c * 2)) , v__4 + 1 <= f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[1]
                           . f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1]
                             .<
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 1]
                             \/
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1]
                             =
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 1]
                             /\
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2]
                             .<
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 2]
                             \/
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1]
                             =
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 1]
                             /\
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2]
                             =
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 2]
                             /\
                             (f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1]
                              .<
                              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 1]
                              \/
                              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1]
                              =
                              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 1]
                              /\
                              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2]
                              .<
                              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 2]))
                      /\
                      (forAll v__4 : int(1..a * b * (c * 2)) , v__4 > f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[1]
                           . f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1] = 1
                             /\
                             f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2] = 1
                             /\
                             (f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1] = 1
                              /\
                              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2] = 1))
[refn] 2
[applied] (forAll v__0 in f_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker . v__0[1, 1] != v__0[2, 1])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__5 : int(1..a * b * (c * 2)) , v__5 <= f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[1]
                   . f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__5, 1, 1]
                     !=
                     f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__5, 2, 1])
[applied] (sum v__2 in f_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker . toInt(v__0 = v__2[1, 1] /\ v__1 = v__2[1, 2]))
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (sum v__6 : int(1..a * b * (c * 2)) , v__6 <= f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[1]
                   . toInt(v__0 = f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__6, 1, 1]
                           /\
                           v__1 = f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__6, 1, 2]))
[applied] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1]
          .<
          f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 1]
              <
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 1]
[applied] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2]
          .<
          f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 1, 2]
              <
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 1, 2]
[applied] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1]
          .<
          f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 1]
              <
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 1]
[applied] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2]
          .<
          f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4, 2, 2]
              <
              f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__4 + 1, 2, 2]
[removeRefinedDecl] find f_Function~AsReln_Relation~AsSet: set of ((int(1..a), int(1..b)), (int(1..c), int(1, c)))
[removedDecl] find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                      (int(0..a * b * (c * 2)), matrix indexed by [int(1..a * b * (c * 2))] of ((int(1..a), int(1..b)), (int(1..c), int(1, c))))
              Added the following:
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple1: int(0..a * b * (c * 2))
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..a * b * (c * 2))] of ((int(1..a), int(1..b)), (int(1..c), int(1, c)))
[matrixToTuple] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2∑1
[removedDecl] find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..a * b * (c * 2))] of ((int(1..a), int(1..b)), (int(1..c), int(1, c)))
              Added the following:
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1: matrix indexed by [int(1..a * b * (c * 2))] of (int(1..a), int(1..b))
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2: matrix indexed by [int(1..a * b * (c * 2))] of (int(1..c), int(1, c))
[matrixToTuple] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1∑1
[removedDecl] find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1:
                      matrix indexed by [int(1..a * b * (c * 2))] of (int(1..a), int(1..b))
              Added the following:
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1_tuple1: matrix indexed by [int(1..a * b * (c * 2))] of int(1..a)
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1_tuple2: matrix indexed by [int(1..a * b * (c * 2))] of int(1..b)
[matrixToTuple] f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2∑1
[removedDecl] find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2:
                      matrix indexed by [int(1..a * b * (c * 2))] of (int(1..c), int(1, c))
              Added the following:
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2_tuple1: matrix indexed by [int(1..a * b * (c * 2))] of int(1..c)
              find f_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2_tuple2: matrix indexed by [int(1..a * b * (c * 2))] of int(1, c)
[repr] 3