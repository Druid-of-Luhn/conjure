[useChannelling] True
[representation] find y: set (size 2) of (int(10, 11), int(12, 13))
                 (#1)
                 Set~Explicit
[configuration] y§region1#Set~Explicit
[addedDecl] find y_Set~Explicit:
                    matrix indexed by [int(1..2)] of (int(10, 11), int(12, 13))
[refn] 0
[applied] y§region1#Set~Explicit = {(10, 12), (11, 13)}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              y§region1#Set~Explicit subsetEq {(10, 12), (11, 13)}
              /\
              y§region1#Set~Explicit supsetEq {(10, 12), (11, 13)}
[applied] y§region1#Set~Explicit subsetEq {(10, 12), (11, 13)}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__2 in y§region1#Set~Explicit . v__2 in {(10, 12), (11, 13)})
[applied] v__2 in {(10, 12), (11, 13)}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              10 = v__2[1] /\ 12 = v__2[2] \/ 11 = v__2[1] /\ 13 = v__2[2]
[applied] (forAll v__2 in y§region1#Set~Explicit
               . 10 = v__2[1] /\ 12 = v__2[2] \/ 11 = v__2[1] /\ 13 = v__2[2])
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__4 : int(1..2)
                   . 10 = y_Set~Explicit§region1[v__4, 1] /\ 12 = y_Set~Explicit§region1[v__4, 2]
                     \/
                     11 = y_Set~Explicit§region1[v__4, 1] /\ 13 = y_Set~Explicit§region1[v__4, 2])
[applied] y§region1#Set~Explicit supsetEq {(10, 12), (11, 13)}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {(10, 12), (11, 13)} subsetEq y§region1#Set~Explicit
[applied] {(10, 12), (11, 13)} subsetEq y§region1#Set~Explicit
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (10, 12) in y§region1#Set~Explicit /\ (11, 13) in y§region1#Set~Explicit
[applied] (10, 12) in y§region1#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__6 in y§region1#Set~Explicit . v__6[1] = 10 /\ v__6[2] = 12)
[applied] (exists v__6 in y§region1#Set~Explicit . v__6[1] = 10 /\ v__6[2] = 12)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__7 : int(1..2)
                   . y_Set~Explicit§region1[v__7, 1] = 10 /\ y_Set~Explicit§region1[v__7, 2] = 12)
[applied] (11, 13) in y§region1#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__8 in y§region1#Set~Explicit . v__8[1] = 11 /\ v__8[2] = 13)
[applied] (exists v__8 in y§region1#Set~Explicit . v__8[1] = 11 /\ v__8[2] = 13)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__9 : int(1..2)
                   . y_Set~Explicit§region1[v__9, 1] = 11 /\ y_Set~Explicit§region1[v__9, 2] = 13)
[applied] y_Set~Explicit§region1[1, 1] .< y_Set~Explicit§region1[2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              y_Set~Explicit§region1[1, 1] < y_Set~Explicit§region1[2, 1]
[applied] y_Set~Explicit§region1[1, 2] .< y_Set~Explicit§region1[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              y_Set~Explicit§region1[1, 2] < y_Set~Explicit§region1[2, 2]
[removeRefinedDecl] find y: set (size 2) of (int(10, 11), int(12, 13))
[removedDecl] find y_Set~Explicit:
                      matrix indexed by [int(1..2)] of (int(10, 11), int(12, 13))
[matrixToTuple] y_Set~Explicit∑1
[repr] 1