language ESSENCE' 1.0

given n: int(1..20)
given colours: int(1..10)
find graph_RelationIntMatrix3:
        matrix indexed by [int(1..colours), int(1..n), int(1..n)] of bool
such that
    n * (n - 1) / 2
    =
    (sum v__0 : int(1..colours)
         . (sum v__1 : int(1..n)
                . (sum v__2 : int(1..n) . graph_RelationIntMatrix3[v__0, v__1, v__2]))),
    forAll v__0 : int(1..n)
        . (sum v__1 : int(1..colours)
               . (sum v__2 : int(1..n) . graph_RelationIntMatrix3[v__1, v__0, v__2] * 1))
          +
          (sum v__1 : int(1..colours)
               . (sum v__2 : int(1..n) . graph_RelationIntMatrix3[v__1, v__2, v__0] * 1))
          =
          n - 1
          /\
          (sum v__1 : int(1..colours) . graph_RelationIntMatrix3[v__1, v__0, v__0] * 1)
          =
          0,
    forAll v__0 : int(1..n)
        . (forAll v__1 : int(1..colours)
               . (forAll v__2 : int(1..n)
                      . graph_RelationIntMatrix3[v__1, v__0, v__2]
                        ->
                        (forAll v__3 : int(1..n)
                             . v__3 != v__2 /\ graph_RelationIntMatrix3[v__1, v__0, v__3]
                               ->
                               !graph_RelationIntMatrix3[v__1, v__3, v__2]
                               /\
                               !graph_RelationIntMatrix3[v__1, v__2, v__3])
                        /\
                        (forAll v__3 : int(1..n)
                             . v__3 != v__2 /\ graph_RelationIntMatrix3[v__1, v__3, v__0]
                               ->
                               !graph_RelationIntMatrix3[v__1, v__3, v__2]
                               /\
                               !graph_RelationIntMatrix3[v__1, v__2, v__3]))),
    forAll v__0 : int(1..n)
        . (forAll v__1 : int(1..colours)
               . (forAll v__2 : int(1..n)
                      . graph_RelationIntMatrix3[v__1, v__2, v__0]
                        ->
                        (forAll v__3 : int(1..n)
                             . v__3 != v__2 /\ graph_RelationIntMatrix3[v__1, v__0, v__3]
                               ->
                               !graph_RelationIntMatrix3[v__1, v__3, v__2]
                               /\
                               !graph_RelationIntMatrix3[v__1, v__2, v__3])
                        /\
                        (forAll v__3 : int(1..n)
                             . v__3 != v__2 /\ graph_RelationIntMatrix3[v__1, v__3, v__0]
                               ->
                               !graph_RelationIntMatrix3[v__1, v__3, v__2]
                               /\
                               !graph_RelationIntMatrix3[v__1, v__2, v__3]))),
    forAll v__0 : int(1..n)
        . (forAll v__1 : int(1..n)
               . v__0 != v__1
                 ->
                 (sum v__2 : int(1..colours) . graph_RelationIntMatrix3[v__2, v__0, v__1] * 1)
                 +
                 (sum v__2 : int(1..colours) . graph_RelationIntMatrix3[v__2, v__1, v__0] * 1)
                 =
                 1)
