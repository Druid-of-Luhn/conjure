language ESSENCE' 1.0

given n: int(1..)
given k: int(1..)
find seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1:
        matrix indexed by [int(1..n * k * n)] of bool
find seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n * k * n)] of int(1..n * k)
find seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n * k * n)] of int(1..n)
such that
    forAll v__0 : int(1..n * k)
        . (sum v__1 : int(1..n * k * n)
               . seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__1]
                 *
                 (v__0 = seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__1]))
          =
          1,
    forAll v__0 : int(1..n * k * n - 1)
        . seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0]
          /\
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0]
          <
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0 + 1]
          \/
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0]
          =
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0 + 1]
          /\
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__0]
          <
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__0 + 1],
    forAll v__0 : int(1..n * k * n - 1)
        . seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0]
          <=
          seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..n)
        . (exists v__1 : int(1..n * k * n)
               . seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__1]
                 /\
                 v__0 = seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__1]),
    forAll v__0 : int(1..n)
        . (exists v__1 : matrix indexed by [int(1..k)] of int(1..n * k)
               . allDiff(v__1)
                 /\
                 ((forAll v__2 : int(1..n * k)
                       . (exists v__3 : int(1..k) . v__1[v__3] = v__2)
                         <->
                         (exists v__3 : int(1..n * k)
                              . (sum v__4 : int(1..n * k * n)
                                     . (seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__4] = v__3
                                        /\
                                        seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__4])
                                       *
                                       seq_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__4])
                                =
                                v__0
                                /\
                                v__3 = v__2))
                  /\
                  (forAll v__2 : int(1..k - 1) . v__1[v__2 + 1] - v__1[v__2] = v__0 + 1)))
