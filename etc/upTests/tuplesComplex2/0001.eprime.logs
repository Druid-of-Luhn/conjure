[useChannelling] True
[removedDecl] find pain:
                      ((set (minSize 1) of int(1, 3), set (minSize 1) of (int(1, 2), int(5))),
                       (set (minSize 1) of int(1, 3), set (minSize 1) of (int(1, 2), int(6))))
[removedDecl] find pain_tuple1:
                      (set (minSize 1) of int(1, 3), set (minSize 1) of (int(1, 2), int(5)))
[removedDecl] find pain_tuple2:
                      (set (minSize 1) of int(1, 3), set (minSize 1) of (int(1, 2), int(6)))
[representation] find pain_tuple1_tuple1: set (minSize 1) of int(1, 3)
                 (#2)
                 Set~ExplicitVarSize, Set~Occurrence
[representation] find pain_tuple1_tuple2: set (minSize 1) of (int(1, 2), int(5))
                 (#1)
                 Set~ExplicitVarSize
[representation] find pain_tuple2_tuple1: set (minSize 1) of int(1, 3)
                 (#2)
                 Set~ExplicitVarSize, Set~Occurrence
[representation] find pain_tuple2_tuple2: set (minSize 1) of (int(1, 2), int(6))
                 (#1)
                 Set~ExplicitVarSize
[configuration] pain_tuple1_tuple1§region1#Set~ExplicitVarSize pain_tuple2_tuple1§region3#Set~ExplicitVarSize pain_tuple1_tuple2§region2#Set~ExplicitVarSize pain_tuple2_tuple2§region4#Set~ExplicitVarSize
[addedDecl] find pain_tuple2_tuple2_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, (int(1, 2), int(6)))
[addedDecl] find pain_tuple2_tuple1_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, int(1, 3))
[addedDecl] find pain_tuple1_tuple2_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, (int(1, 2), int(5)))
[addedDecl] find pain_tuple1_tuple1_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, int(1, 3))
[refn] 0
[applied] pain_tuple1_tuple1§region1#Set~ExplicitVarSize = {3}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region1#Set~ExplicitVarSize subsetEq {3}
              /\
              pain_tuple1_tuple1§region1#Set~ExplicitVarSize supsetEq {3}
[applied] pain_tuple1_tuple1§region1#Set~ExplicitVarSize subsetEq {3}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__11 in pain_tuple1_tuple1§region1#Set~ExplicitVarSize . v__11 in {3})
[applied] v__11 in {3}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              3 = v__11
[applied] (forAll v__11 in pain_tuple1_tuple1§region1#Set~ExplicitVarSize
               . 3 = v__11)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__13 : int(1..2)
                   , pain_tuple1_tuple1_Set~ExplicitVarSize§region1[v__13, 1]
                   . 3 = pain_tuple1_tuple1_Set~ExplicitVarSize§region1[v__13, 2])
[applied] pain_tuple1_tuple1§region1#Set~ExplicitVarSize supsetEq {3}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {3} subsetEq pain_tuple1_tuple1§region1#Set~ExplicitVarSize
[applied] {3} subsetEq pain_tuple1_tuple1§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              3 in pain_tuple1_tuple1§region1#Set~ExplicitVarSize
[applied] 3 in pain_tuple1_tuple1§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__15 in pain_tuple1_tuple1§region1#Set~ExplicitVarSize . v__15 = 3)
[applied] (exists v__15 in pain_tuple1_tuple1§region1#Set~ExplicitVarSize
               . v__15 = 3)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__16 : int(1..2)
                   , pain_tuple1_tuple1_Set~ExplicitVarSize§region1[v__16, 1]
                   . pain_tuple1_tuple1_Set~ExplicitVarSize§region1[v__16, 2] = 3)
[applied] pain_tuple1_tuple2§region2#Set~ExplicitVarSize = {(1, 5)}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region2#Set~ExplicitVarSize subsetEq {(1, 5)}
              /\
              pain_tuple1_tuple2§region2#Set~ExplicitVarSize supsetEq {(1, 5)}
[applied] pain_tuple1_tuple2§region2#Set~ExplicitVarSize subsetEq {(1, 5)}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__17 in pain_tuple1_tuple2§region2#Set~ExplicitVarSize
                   . v__17 in {(1, 5)})
[applied] v__17 in {(1, 5)}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              1 = v__17[1] /\ 5 = v__17[2]
[applied] (forAll v__17 in pain_tuple1_tuple2§region2#Set~ExplicitVarSize
               . 1 = v__17[1] /\ 5 = v__17[2])
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__19 : int(1..2)
                   , pain_tuple1_tuple2_Set~ExplicitVarSize§region2[v__19, 1]
                   . 1 = pain_tuple1_tuple2_Set~ExplicitVarSize§region2[v__19, 2, 1]
                     /\
                     5 = pain_tuple1_tuple2_Set~ExplicitVarSize§region2[v__19, 2, 2])
[applied] pain_tuple1_tuple2§region2#Set~ExplicitVarSize supsetEq {(1, 5)}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {(1, 5)} subsetEq pain_tuple1_tuple2§region2#Set~ExplicitVarSize
[applied] {(1, 5)} subsetEq pain_tuple1_tuple2§region2#Set~ExplicitVarSize
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (1, 5) in pain_tuple1_tuple2§region2#Set~ExplicitVarSize
[applied] (1, 5) in pain_tuple1_tuple2§region2#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__21 in pain_tuple1_tuple2§region2#Set~ExplicitVarSize
                   . v__21[1] = 1 /\ v__21[2] = 5)
[applied] (exists v__21 in pain_tuple1_tuple2§region2#Set~ExplicitVarSize
               . v__21[1] = 1 /\ v__21[2] = 5)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__22 : int(1..2)
                   , pain_tuple1_tuple2_Set~ExplicitVarSize§region2[v__22, 1]
                   . pain_tuple1_tuple2_Set~ExplicitVarSize§region2[v__22, 2, 1] = 1
                     /\
                     pain_tuple1_tuple2_Set~ExplicitVarSize§region2[v__22, 2, 2] = 5)
[applied] pain_tuple2_tuple1§region3#Set~ExplicitVarSize = {1}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2_tuple1§region3#Set~ExplicitVarSize subsetEq {1}
              /\
              pain_tuple2_tuple1§region3#Set~ExplicitVarSize supsetEq {1}
[applied] pain_tuple2_tuple1§region3#Set~ExplicitVarSize subsetEq {1}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__23 in pain_tuple2_tuple1§region3#Set~ExplicitVarSize . v__23 in {1})
[applied] v__23 in {1}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              1 = v__23
[applied] (forAll v__23 in pain_tuple2_tuple1§region3#Set~ExplicitVarSize
               . 1 = v__23)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__25 : int(1..2)
                   , pain_tuple2_tuple1_Set~ExplicitVarSize§region3[v__25, 1]
                   . 1 = pain_tuple2_tuple1_Set~ExplicitVarSize§region3[v__25, 2])
[applied] pain_tuple2_tuple1§region3#Set~ExplicitVarSize supsetEq {1}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {1} subsetEq pain_tuple2_tuple1§region3#Set~ExplicitVarSize
[applied] {1} subsetEq pain_tuple2_tuple1§region3#Set~ExplicitVarSize
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              1 in pain_tuple2_tuple1§region3#Set~ExplicitVarSize
[applied] 1 in pain_tuple2_tuple1§region3#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__27 in pain_tuple2_tuple1§region3#Set~ExplicitVarSize . v__27 = 1)
[applied] (exists v__27 in pain_tuple2_tuple1§region3#Set~ExplicitVarSize
               . v__27 = 1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__28 : int(1..2)
                   , pain_tuple2_tuple1_Set~ExplicitVarSize§region3[v__28, 1]
                   . pain_tuple2_tuple1_Set~ExplicitVarSize§region3[v__28, 2] = 1)
[applied] pain_tuple2_tuple2§region4#Set~ExplicitVarSize = {(2, 6)}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2_tuple2§region4#Set~ExplicitVarSize subsetEq {(2, 6)}
              /\
              pain_tuple2_tuple2§region4#Set~ExplicitVarSize supsetEq {(2, 6)}
[applied] pain_tuple2_tuple2§region4#Set~ExplicitVarSize subsetEq {(2, 6)}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__29 in pain_tuple2_tuple2§region4#Set~ExplicitVarSize
                   . v__29 in {(2, 6)})
[applied] v__29 in {(2, 6)}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              2 = v__29[1] /\ 6 = v__29[2]
[applied] (forAll v__29 in pain_tuple2_tuple2§region4#Set~ExplicitVarSize
               . 2 = v__29[1] /\ 6 = v__29[2])
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__31 : int(1..2)
                   , pain_tuple2_tuple2_Set~ExplicitVarSize§region4[v__31, 1]
                   . 2 = pain_tuple2_tuple2_Set~ExplicitVarSize§region4[v__31, 2, 1]
                     /\
                     6 = pain_tuple2_tuple2_Set~ExplicitVarSize§region4[v__31, 2, 2])
[applied] pain_tuple2_tuple2§region4#Set~ExplicitVarSize supsetEq {(2, 6)}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {(2, 6)} subsetEq pain_tuple2_tuple2§region4#Set~ExplicitVarSize
[applied] {(2, 6)} subsetEq pain_tuple2_tuple2§region4#Set~ExplicitVarSize
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (2, 6) in pain_tuple2_tuple2§region4#Set~ExplicitVarSize
[applied] (2, 6) in pain_tuple2_tuple2§region4#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__33 in pain_tuple2_tuple2§region4#Set~ExplicitVarSize
                   . v__33[1] = 2 /\ v__33[2] = 6)
[applied] (exists v__33 in pain_tuple2_tuple2§region4#Set~ExplicitVarSize
               . v__33[1] = 2 /\ v__33[2] = 6)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__34 : int(1..2)
                   , pain_tuple2_tuple2_Set~ExplicitVarSize§region4[v__34, 1]
                   . pain_tuple2_tuple2_Set~ExplicitVarSize§region4[v__34, 2, 1] = 2
                     /\
                     pain_tuple2_tuple2_Set~ExplicitVarSize§region4[v__34, 2, 2] = 6)
[applied] pain_tuple2_tuple2_Set~ExplicitVarSize§region4[1, 2, 1]
          .<
          pain_tuple2_tuple2_Set~ExplicitVarSize§region4[2, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_tuple2_Set~ExplicitVarSize§region4[1, 2, 1]
              <
              pain_tuple2_tuple2_Set~ExplicitVarSize§region4[2, 2, 1]
[applied] pain_tuple2_tuple2_Set~ExplicitVarSize§region4[1, 2, 2]
          .<
          pain_tuple2_tuple2_Set~ExplicitVarSize§region4[2, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_tuple2_Set~ExplicitVarSize§region4[1, 2, 2]
              <
              pain_tuple2_tuple2_Set~ExplicitVarSize§region4[2, 2, 2]
[applied] pain_tuple2_tuple1_Set~ExplicitVarSize§region3[1, 2]
          .<
          pain_tuple2_tuple1_Set~ExplicitVarSize§region3[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_tuple1_Set~ExplicitVarSize§region3[1, 2]
              <
              pain_tuple2_tuple1_Set~ExplicitVarSize§region3[2, 2]
[applied] pain_tuple1_tuple2_Set~ExplicitVarSize§region2[1, 2, 1]
          .<
          pain_tuple1_tuple2_Set~ExplicitVarSize§region2[2, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple1_tuple2_Set~ExplicitVarSize§region2[1, 2, 1]
              <
              pain_tuple1_tuple2_Set~ExplicitVarSize§region2[2, 2, 1]
[applied] pain_tuple1_tuple2_Set~ExplicitVarSize§region2[1, 2, 2]
          .<
          pain_tuple1_tuple2_Set~ExplicitVarSize§region2[2, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple1_tuple2_Set~ExplicitVarSize§region2[1, 2, 2]
              <
              pain_tuple1_tuple2_Set~ExplicitVarSize§region2[2, 2, 2]
[applied] pain_tuple1_tuple1_Set~ExplicitVarSize§region1[1, 2]
          .<
          pain_tuple1_tuple1_Set~ExplicitVarSize§region1[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple1_tuple1_Set~ExplicitVarSize§region1[1, 2]
              <
              pain_tuple1_tuple1_Set~ExplicitVarSize§region1[2, 2]
[removeRefinedDecl] find pain_tuple1_tuple1: set (minSize 1) of int(1, 3)
[removeRefinedDecl] find pain_tuple1_tuple2:
                            set (minSize 1) of (int(1, 2), int(5))
[removeRefinedDecl] find pain_tuple2_tuple1: set (minSize 1) of int(1, 3)
[removeRefinedDecl] find pain_tuple2_tuple2:
                            set (minSize 1) of (int(1, 2), int(6))
[removedDecl] find pain_tuple1_tuple1_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(1, 3))
[matrixToTuple] pain_tuple1_tuple1_Set~ExplicitVarSize∑1
[removedDecl] find pain_tuple1_tuple2_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, (int(1, 2), int(5)))
[matrixToTuple] pain_tuple1_tuple2_Set~ExplicitVarSize∑1
[removedDecl] find pain_tuple2_tuple1_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(1, 3))
[matrixToTuple] pain_tuple2_tuple1_Set~ExplicitVarSize∑1
[removedDecl] find pain_tuple2_tuple2_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, (int(1, 2), int(6)))
[matrixToTuple] pain_tuple2_tuple2_Set~ExplicitVarSize∑1
[removedDecl] find pain_tuple1_tuple2_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2)] of (int(1, 2), int(5))
[matrixToTuple] pain_tuple1_tuple2_Set~ExplicitVarSize_tuple2∑1
[removedDecl] find pain_tuple2_tuple2_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2)] of (int(1, 2), int(6))
[matrixToTuple] pain_tuple2_tuple2_Set~ExplicitVarSize_tuple2∑1
[repr] 1