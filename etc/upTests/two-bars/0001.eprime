language ESSENCE' 1.0

find x: int(-9..9)
find y: int(-9..9)
find s1_SetExplicitVarSize_tuple1: matrix indexed by [int(1..10)] of bool
find s1_SetExplicitVarSize_tuple2: matrix indexed by [int(1..10)] of int(0..9)
find s2_SetExplicitVarSize_tuple1: matrix indexed by [int(1..10)] of bool
find s2_SetExplicitVarSize_tuple2: matrix indexed by [int(1..10)] of int(0..9)
such that
    |x| = y,
    (sum v__0 : int(1..10)
         . ((exists v__1 : int(1..10)
                 . s2_SetExplicitVarSize_tuple1[v__1]
                   /\
                   s2_SetExplicitVarSize_tuple2[v__1] = s1_SetExplicitVarSize_tuple2[v__0])
            /\
            s1_SetExplicitVarSize_tuple1[v__0])
           *
           1)
    =
    y - x,
    forAll v__0 : int(1..9)
        . s1_SetExplicitVarSize_tuple1[v__0] /\ s1_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          s1_SetExplicitVarSize_tuple2[v__0] < s1_SetExplicitVarSize_tuple2[v__0 + 1],
    forAll v__0 : int(1..9)
        . s2_SetExplicitVarSize_tuple1[v__0] /\ s2_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          s2_SetExplicitVarSize_tuple2[v__0] < s2_SetExplicitVarSize_tuple2[v__0 + 1],
    forAll v__0 : int(1..9)
        . s1_SetExplicitVarSize_tuple1[v__0] >= s1_SetExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..9)
        . s2_SetExplicitVarSize_tuple1[v__0] >= s2_SetExplicitVarSize_tuple1[v__0 + 1]
