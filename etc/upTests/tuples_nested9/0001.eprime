language ESSENCE' 1.0

find y_tuple1_SetExplicit_tuple1: matrix indexed by [int(1..2)] of int(10, 11)
find y_tuple1_SetExplicit_tuple2: matrix indexed by [int(1..2)] of int(12, 13)
such that
    y_tuple1_SetExplicit_tuple1[1] < y_tuple1_SetExplicit_tuple1[2]
    \/
    y_tuple1_SetExplicit_tuple1[1] = y_tuple1_SetExplicit_tuple1[2]
    /\
    y_tuple1_SetExplicit_tuple2[1] < y_tuple1_SetExplicit_tuple2[2],
    exists v__0 : int(1..2)
        . y_tuple1_SetExplicit_tuple1[v__0] = 10
          /\
          y_tuple1_SetExplicit_tuple2[v__0] = 12,
    exists v__0 : int(1..2)
        . y_tuple1_SetExplicit_tuple1[v__0] = 11
          /\
          y_tuple1_SetExplicit_tuple2[v__0] = 13,
    forAll v__0 : int(1..2)
        . 10 = y_tuple1_SetExplicit_tuple1[v__0]
          /\
          12 = y_tuple1_SetExplicit_tuple2[v__0]
          \/
          11 = y_tuple1_SetExplicit_tuple1[v__0] /\ 13 = y_tuple1_SetExplicit_tuple2[v__0]
