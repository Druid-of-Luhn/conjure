language ESSENCE' 1.0

find x_SetExplicitVarSize_tuple1: matrix indexed by [int(1..2)] of bool
find x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence:
        matrix indexed by [int(1..2), int(6, 7)] of bool
find x_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..2)] of int(1, 3)
find x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence:
        matrix indexed by [int(1..2), int(9)] of bool
such that
    x_SetExplicitVarSize_tuple1[1] /\ x_SetExplicitVarSize_tuple1[2]
    ->
    flatten(x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[1, ..])
    <lex
    flatten(x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[2, ..])
    \/
    (forAll v__0 : int(6, 7)
         . (exists v__1 : int(6, 7)
                . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[1, v__1] /\ v__1 = v__0)
           <->
           (exists v__1 : int(6, 7)
                . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[2, v__1] /\ v__1 = v__0))
    /\
    (forAll v__0 : int(6, 7)
         . (exists v__1 : int(6, 7)
                . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[1, v__1] /\ v__1 = v__0)
           <->
           (exists v__1 : int(6, 7)
                . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[2, v__1] /\ v__1 = v__0))
    /\
    (x_SetExplicitVarSize_tuple2_tuple2[1] < x_SetExplicitVarSize_tuple2_tuple2[2]
     \/
     x_SetExplicitVarSize_tuple2_tuple2[1] = x_SetExplicitVarSize_tuple2_tuple2[2]
     /\
     flatten(x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[1, ..])
     <lex
     flatten(x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[2, ..])),
    x_SetExplicitVarSize_tuple1[1] <= x_SetExplicitVarSize_tuple1[2],
    (sum v__0 : int(1..2) . x_SetExplicitVarSize_tuple1[v__0]) >= 1,
    exists v__0 : int(1..2)
        . x_SetExplicitVarSize_tuple1[v__0]
          /\
          ((forAll v__1 : int(6, 7)
                . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[v__0, v__1]
                  ->
                  6 = v__1 \/ 7 = v__1)
           /\
           ((exists v__1 : int(6, 7)
                 . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[v__0, v__1] /\ v__1 = 6)
            /\
            (exists v__1 : int(6, 7)
                 . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[v__0, v__1] /\ v__1 = 7))
           /\
           (x_SetExplicitVarSize_tuple2_tuple2[v__0] = 3
            /\
            ((forAll v__1 : int(9)
                  . x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, v__1] -> 9 = v__1)
             /\
             (exists v__1 : int(9)
                  . x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, v__1] /\ v__1 = 9)))),
    forAll v__0 : int(1..2)
        . (sum v__1 : int(6, 7)
               . x_SetExplicitVarSize_tuple2_tuple1_SetOccurrence[v__0, v__1])
          =
          2,
    forAll v__0 : int(1..2)
        . (sum v__1 : int(9)
               . x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, v__1])
          =
          1
