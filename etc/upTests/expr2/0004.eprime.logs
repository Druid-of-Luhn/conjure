[useChannelling] True
[representation] find x: set (maxSize 2) of int(0..14)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[configuration] x§region1#Set~ExplicitVarSize x§region2#Set~ExplicitVarSizeWithDefault
[addedDecl] find x_Set~ExplicitVarSizeWithDefault:
                    matrix indexed by [int(1..2)] of int(-1..14)
[addedDecl] find x_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, int(0..14))
[refn] 0
[applied] 2 in x§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__4 in x§region1#Set~ExplicitVarSize . v__4 = 2)
[applied] (exists v__4 in x§region1#Set~ExplicitVarSize . v__4 = 2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__5 : int(1..2) , x_Set~ExplicitVarSize§region1[v__5, 1]
                   . x_Set~ExplicitVarSize§region1[v__5, 2] = 2)
[applied] max(x§region2#Set~ExplicitVarSizeWithDefault)
          {rules/refns/horizontal/set-max.rule}
              {aux__7§regionS @ find aux__7: int(0..14)
                                such that
                                    forAll v__6 in x§region2#Set~ExplicitVarSizeWithDefault . v__6 <= aux__7§regionS
                                such that aux__7§regionS in x§region2#Set~ExplicitVarSizeWithDefault}
[applied] (forAll v__6 in x§region2#Set~ExplicitVarSizeWithDefault
               . v__6 <= aux__7§regionS)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (forAll v__8 : int(1..2) , x_Set~ExplicitVarSizeWithDefault§region2[v__8] != -1
                   . x_Set~ExplicitVarSizeWithDefault§region2[v__8] <= aux__7§regionS)
[applied] aux__7§regionS in x§region2#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__9 in x§region2#Set~ExplicitVarSizeWithDefault
                   . v__9 = aux__7§regionS)
[applied] (exists v__9 in x§region2#Set~ExplicitVarSizeWithDefault
               . v__9 = aux__7§regionS)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__10 : int(1..2)
                   , x_Set~ExplicitVarSizeWithDefault§region2[v__10] != -1
                   . x_Set~ExplicitVarSizeWithDefault§region2[v__10] = aux__7§regionS)
[applied] x_Set~ExplicitVarSize§region1[1, 2]
          .<
          x_Set~ExplicitVarSize§region1[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region1[1, 2] < x_Set~ExplicitVarSize§region1[2, 2]
[removeRefinedDecl] find x: set (maxSize 2) of int(0..14)
[removedDecl] find x_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(0..14))
[matrixToTuple] x_Set~ExplicitVarSize∑1
[repr] 1