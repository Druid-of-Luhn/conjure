MINION 3
# CSE_number = 36
# CSE_eliminated_expressions = 120
# CSE_total_size = 156
**VARIABLES**
DISCRETE x_MSetExplicit_00000 #
{4..9}
DISCRETE x_MSetExplicit_00001 #
{4..9}
DISCRETE x_MSetExplicit_00002 #
{4..9}
DISCRETE x_MSetExplicit_00003 #
{4..9}
DISCRETE x_MSetExplicit_00004 #
{4..9}
DISCRETE x_MSetExplicit_00005 #
{4..9}
DISCRETE aux0 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=4) + (x_MSetExplicit_00001=4) + (x_MSetExplicit_00002=4) + (x_MSetExplicit_00003=4) + (x_MSetExplicit_00004=4) + (x_MSetExplicit_00005=4))
{0..6}
DISCRETE aux1 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=6) + (x_MSetExplicit_00001=6) + (x_MSetExplicit_00002=6) + (x_MSetExplicit_00003=6) + (x_MSetExplicit_00004=6) + (x_MSetExplicit_00005=6))
{0..6}
DISCRETE aux2 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=5) + (x_MSetExplicit_00001=5) + (x_MSetExplicit_00002=5) + (x_MSetExplicit_00003=5) + (x_MSetExplicit_00004=5) + (x_MSetExplicit_00005=5))
{0..6}
BOOL aux3 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00004)
BOOL aux4 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00005)
BOOL aux5 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00002)
BOOL aux6 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00003)
BOOL aux7 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00003)
BOOL aux8 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00004)
BOOL aux9 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00001)
BOOL aux10 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00002)
BOOL aux11 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00005)
BOOL aux12 #CSE: 4 occurrences of: (x_MSetExplicit_00003=x_MSetExplicit_00005)
BOOL aux13 #CSE: 4 occurrences of: (x_MSetExplicit_00004=x_MSetExplicit_00005)
BOOL aux14 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00005)
BOOL aux15 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00004)
BOOL aux16 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00003)
BOOL aux17 #CSE: 4 occurrences of: (x_MSetExplicit_00003=x_MSetExplicit_00004)
BOOL aux18 #CSE: 3 occurrences of: (x_MSetExplicit_00001=5)
BOOL aux19 #CSE: 3 occurrences of: (x_MSetExplicit_00001=4)
BOOL aux20 #CSE: 3 occurrences of: (x_MSetExplicit_00000=6)
BOOL aux21 #CSE: 3 occurrences of: (x_MSetExplicit_00000=5)
BOOL aux22 #CSE: 3 occurrences of: (x_MSetExplicit_00000=4)
BOOL aux23 #CSE: 3 occurrences of: (x_MSetExplicit_00002=6)
BOOL aux24 #CSE: 3 occurrences of: (x_MSetExplicit_00002=5)
BOOL aux25 #CSE: 3 occurrences of: (x_MSetExplicit_00002=4)
BOOL aux26 #CSE: 3 occurrences of: (x_MSetExplicit_00001=6)
BOOL aux27 #CSE: 3 occurrences of: (x_MSetExplicit_00003=6)
BOOL aux28 #CSE: 3 occurrences of: (x_MSetExplicit_00003=5)
BOOL aux29 #CSE: 3 occurrences of: (x_MSetExplicit_00003=4)
BOOL aux30 #CSE: 3 occurrences of: (x_MSetExplicit_00004=6)
BOOL aux31 #CSE: 3 occurrences of: (x_MSetExplicit_00004=5)
BOOL aux32 #CSE: 3 occurrences of: (x_MSetExplicit_00004=4)
BOOL aux33 #CSE: 3 occurrences of: (x_MSetExplicit_00005=4)
BOOL aux34 #CSE: 3 occurrences of: (x_MSetExplicit_00005=6)
BOOL aux35 #CSE: 3 occurrences of: (x_MSetExplicit_00005=5)
**SEARCH**
PRINT[[x_MSetExplicit_00000],[x_MSetExplicit_00001],[x_MSetExplicit_00002],[x_MSetExplicit_00003],[x_MSetExplicit_00004],[x_MSetExplicit_00005]]
VARORDER STATIC [x_MSetExplicit_00000,x_MSetExplicit_00001,x_MSetExplicit_00002,x_MSetExplicit_00003,x_MSetExplicit_00004,x_MSetExplicit_00005]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35]
**CONSTRAINTS**
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00004), aux3)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00005), aux4)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00002), aux5)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00003), aux6)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00003), aux7)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00004), aux8)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00001), aux9)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00002), aux10)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00005), aux11)
reify(eq(x_MSetExplicit_00003,x_MSetExplicit_00005), aux12)
reify(eq(x_MSetExplicit_00004,x_MSetExplicit_00005), aux13)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00005), aux14)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00004), aux15)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00003), aux16)
reify(eq(x_MSetExplicit_00003,x_MSetExplicit_00004), aux17)
reify(w-literal(x_MSetExplicit_00001,5), aux18)
reify(w-literal(x_MSetExplicit_00001,4), aux19)
reify(w-literal(x_MSetExplicit_00000,6), aux20)
reify(w-literal(x_MSetExplicit_00000,5), aux21)
reify(w-literal(x_MSetExplicit_00000,4), aux22)
reify(w-literal(x_MSetExplicit_00002,6), aux23)
reify(w-literal(x_MSetExplicit_00002,5), aux24)
reify(w-literal(x_MSetExplicit_00002,4), aux25)
reify(w-literal(x_MSetExplicit_00001,6), aux26)
reify(w-literal(x_MSetExplicit_00003,6), aux27)
reify(w-literal(x_MSetExplicit_00003,5), aux28)
reify(w-literal(x_MSetExplicit_00003,4), aux29)
reify(w-literal(x_MSetExplicit_00004,6), aux30)
reify(w-literal(x_MSetExplicit_00004,5), aux31)
reify(w-literal(x_MSetExplicit_00004,4), aux32)
reify(w-literal(x_MSetExplicit_00005,4), aux33)
reify(w-literal(x_MSetExplicit_00005,6), aux34)
reify(w-literal(x_MSetExplicit_00005,5), aux35)
ineq(aux0, 2, 0)
ineq(aux2, 3, 0)
ineq(aux1, 1, 0)
ineq(1, aux1, 0)
ineq(2, aux0, 0)
ineq(3, aux2, 0)
ineq(x_MSetExplicit_00000, x_MSetExplicit_00001, 0)
ineq(x_MSetExplicit_00001, x_MSetExplicit_00002, 0)
ineq(x_MSetExplicit_00002, x_MSetExplicit_00003, 0)
ineq(x_MSetExplicit_00003, x_MSetExplicit_00004, 0)
ineq(x_MSetExplicit_00004, x_MSetExplicit_00005, 0)
weightedsumleq([2,3,1,1,-1,-1,-1,-1,-1],[aux22,aux21,aux20,-1,aux9,aux10,aux7,aux8,aux11],0)
weightedsumleq([2,3,1,1,-1,-1,-1,-1,-1],[aux19,aux18,aux26,-1,aux9,aux5,aux6,aux3,aux4],0)
weightedsumleq([2,3,1,1,-1,-1,-1,-1,-1],[aux25,aux24,aux23,-1,aux10,aux5,aux16,aux15,aux14],0)
weightedsumleq([2,3,1,1,-1,-1,-1,-1,-1],[aux29,aux28,aux27,-1,aux7,aux6,aux16,aux17,aux12],0)
weightedsumleq([2,3,1,1,-1,-1,-1,-1,-1],[aux32,aux31,aux30,-1,aux8,aux3,aux15,aux17,aux13],0)
weightedsumleq([2,3,1,1,-1,-1,-1,-1,-1],[aux33,aux35,aux34,-1,aux11,aux4,aux14,aux12,aux13],0)
weightedsumleq([-2,-3,-1,1,1,1,1,1,1],[aux22,aux21,aux20,1,aux9,aux10,aux7,aux8,aux11],0)
weightedsumleq([-2,-3,-1,1,1,1,1,1,1],[aux19,aux18,aux26,1,aux9,aux5,aux6,aux3,aux4],0)
weightedsumleq([-2,-3,-1,1,1,1,1,1,1],[aux25,aux24,aux23,1,aux10,aux5,aux16,aux15,aux14],0)
weightedsumleq([-2,-3,-1,1,1,1,1,1,1],[aux29,aux28,aux27,1,aux7,aux6,aux16,aux17,aux12],0)
weightedsumleq([-2,-3,-1,1,1,1,1,1,1],[aux32,aux31,aux30,1,aux8,aux3,aux15,aux17,aux13],0)
weightedsumleq([-2,-3,-1,1,1,1,1,1,1],[aux33,aux35,aux34,1,aux11,aux4,aux14,aux12,aux13],0)
sumleq([aux22,aux19,aux25,aux29,aux32,aux33],aux0)
sumgeq([aux22,aux19,aux25,aux29,aux32,aux33],aux0)
sumleq([aux20,aux26,aux23,aux27,aux30,aux34],aux1)
sumgeq([aux20,aux26,aux23,aux27,aux30,aux34],aux1)
sumleq([aux21,aux18,aux24,aux28,aux31,aux35],aux2)
sumgeq([aux21,aux18,aux24,aux28,aux31,aux35],aux2)
**EOF**
