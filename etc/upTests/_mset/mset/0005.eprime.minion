MINION 3
# CSE_number = 97
# CSE_eliminated_expressions = 287
# CSE_total_size = 489
**VARIABLES**
DISCRETE x_MSetOccurrence_00000 #
{0..5}
DISCRETE x_MSetOccurrence_00001 #
{0..5}
DISCRETE x_MSetOccurrence_00002 #
{0..5}
DISCRETE x_MSetOccurrence_00003 #
{0..5}
DISCRETE x_MSetOccurrence_00004 #
{0..5}
DISCRETE x_MSetOccurrence_00005 #
{0..5}
DISCRETE x_MSetExplicit_00000 #
{4..9}
DISCRETE x_MSetExplicit_00001 #
{4..9}
DISCRETE x_MSetExplicit_00002 #
{4..9}
DISCRETE x_MSetExplicit_00003 #
{4..9}
DISCRETE x_MSetExplicit_00004 #
{4..9}
DISCRETE y_MSetExplicit_00000 #
{3..7}
DISCRETE y_MSetExplicit_00001 #
{3..7}
DISCRETE y_MSetExplicit_00002 #
{3..7}
DISCRETE aux0 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=5) + (x_MSetExplicit_00001=5) + (x_MSetExplicit_00002=5) + (x_MSetExplicit_00003=5) + (x_MSetExplicit_00004=5))
{0..5}
DISCRETE aux1 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=6) + (x_MSetExplicit_00001=6) + (x_MSetExplicit_00002=6) + (x_MSetExplicit_00003=6) + (x_MSetExplicit_00004=6))
{0..5}
DISCRETE aux2 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=7) + (x_MSetExplicit_00001=7) + (x_MSetExplicit_00002=7) + (x_MSetExplicit_00003=7) + (x_MSetExplicit_00004=7))
{0..5}
DISCRETE aux3 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=8) + (x_MSetExplicit_00001=8) + (x_MSetExplicit_00002=8) + (x_MSetExplicit_00003=8) + (x_MSetExplicit_00004=8))
{0..5}
DISCRETE aux4 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=4) + (x_MSetExplicit_00001=4) + (x_MSetExplicit_00002=4) + (x_MSetExplicit_00003=4) + (x_MSetExplicit_00004=4))
{0..5}
DISCRETE aux5 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=9) + (x_MSetExplicit_00001=9) + (x_MSetExplicit_00002=9) + (x_MSetExplicit_00003=9) + (x_MSetExplicit_00004=9))
{0..5}
BOOL aux6 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=4)*(0<x_MSetOccurrence_00000))
BOOL aux7 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=5)*(0<x_MSetOccurrence_00001))
BOOL aux8 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=6)*(0<x_MSetOccurrence_00002))
BOOL aux9 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=7)*(0<x_MSetOccurrence_00003))
BOOL aux10 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=8)*(0<x_MSetOccurrence_00004))
BOOL aux11 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=9)*(0<x_MSetOccurrence_00005))
BOOL aux12 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=6)*(0<x_MSetOccurrence_00002))
BOOL aux13 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=7)*(0<x_MSetOccurrence_00003))
BOOL aux14 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=4)*(0<x_MSetOccurrence_00000))
BOOL aux15 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=5)*(0<x_MSetOccurrence_00001))
BOOL aux16 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=8)*(0<x_MSetOccurrence_00004))
BOOL aux17 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=9)*(0<x_MSetOccurrence_00005))
BOOL aux18 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=9)*(0<x_MSetOccurrence_00005))
BOOL aux19 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=8)*(0<x_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=7)*(0<x_MSetOccurrence_00003))
BOOL aux21 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=6)*(0<x_MSetOccurrence_00002))
BOOL aux22 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=5)*(0<x_MSetOccurrence_00001))
BOOL aux23 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=4)*(0<x_MSetOccurrence_00000))
BOOL aux24 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=8)*(0<x_MSetOccurrence_00004))
BOOL aux25 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=9)*(0<x_MSetOccurrence_00005))
BOOL aux26 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=4)*(0<x_MSetOccurrence_00000))
BOOL aux27 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=5)*(0<x_MSetOccurrence_00001))
BOOL aux28 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=6)*(0<x_MSetOccurrence_00002))
BOOL aux29 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=7)*(0<x_MSetOccurrence_00003))
BOOL aux30 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=5)*(0<x_MSetOccurrence_00001))
BOOL aux31 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=4)*(0<x_MSetOccurrence_00000))
BOOL aux32 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=7)*(0<x_MSetOccurrence_00003))
BOOL aux33 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=6)*(0<x_MSetOccurrence_00002))
BOOL aux34 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=9)*(0<x_MSetOccurrence_00005))
BOOL aux35 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=8)*(0<x_MSetOccurrence_00004))
BOOL aux36 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00004)
BOOL aux37 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00002)
BOOL aux38 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00003)
BOOL aux39 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00003)
BOOL aux40 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00004)
BOOL aux41 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00001)
BOOL aux42 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00002)
BOOL aux43 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00004)
BOOL aux44 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00003)
BOOL aux45 #CSE: 4 occurrences of: (x_MSetExplicit_00003=x_MSetExplicit_00004)
BOOL aux46 #CSE: 15 occurrences of: (0<x_MSetOccurrence_00002)
BOOL aux47 #CSE: 15 occurrences of: (0<x_MSetOccurrence_00003)
BOOL aux48 #CSE: 15 occurrences of: (0<x_MSetOccurrence_00000)
BOOL aux49 #CSE: 15 occurrences of: (0<x_MSetOccurrence_00001)
BOOL aux50 #CSE: 10 occurrences of: (0<x_MSetOccurrence_00005)
BOOL aux51 #CSE: 2 occurrences of: (y_MSetExplicit_00001=y_MSetExplicit_00002)
BOOL aux52 #CSE: 2 occurrences of: (y_MSetExplicit_00000=y_MSetExplicit_00002)
BOOL aux53 #CSE: 2 occurrences of: (y_MSetExplicit_00000=y_MSetExplicit_00001)
BOOL aux54 #CSE: 2 occurrences of: (7=y_MSetExplicit_00002)
BOOL aux55 #CSE: 2 occurrences of: (7=y_MSetExplicit_00001)
BOOL aux56 #CSE: 2 occurrences of: (7=y_MSetExplicit_00000)
BOOL aux57 #CSE: 2 occurrences of: (5=y_MSetExplicit_00000)
BOOL aux58 #CSE: 2 occurrences of: (5=y_MSetExplicit_00002)
BOOL aux59 #CSE: 2 occurrences of: (5=y_MSetExplicit_00001)
BOOL aux60 #CSE: 2 occurrences of: (6=y_MSetExplicit_00002)
BOOL aux61 #CSE: 2 occurrences of: (6=y_MSetExplicit_00000)
BOOL aux62 #CSE: 2 occurrences of: (6=y_MSetExplicit_00001)
BOOL aux63 #CSE: 2 occurrences of: (4=y_MSetExplicit_00002)
BOOL aux64 #CSE: 2 occurrences of: (4=y_MSetExplicit_00000)
BOOL aux65 #CSE: 2 occurrences of: (4=y_MSetExplicit_00001)
BOOL aux66 #CSE: 10 occurrences of: (0<x_MSetOccurrence_00004)
BOOL aux67 #CSE: 3 occurrences of: (x_MSetExplicit_00001=4)
BOOL aux68 #CSE: 3 occurrences of: (x_MSetExplicit_00002=4)
BOOL aux69 #CSE: 3 occurrences of: (x_MSetExplicit_00000=4)
BOOL aux70 #CSE: 3 occurrences of: (x_MSetExplicit_00004=4)
BOOL aux71 #CSE: 3 occurrences of: (x_MSetExplicit_00003=4)
BOOL aux72 #CSE: 2 occurrences of: (x_MSetExplicit_00001=5)
BOOL aux73 #CSE: 2 occurrences of: (x_MSetExplicit_00000=6)
BOOL aux74 #CSE: 2 occurrences of: (x_MSetExplicit_00000=5)
BOOL aux75 #CSE: 2 occurrences of: (x_MSetExplicit_00000=9)
BOOL aux76 #CSE: 2 occurrences of: (x_MSetExplicit_00000=8)
BOOL aux77 #CSE: 2 occurrences of: (x_MSetExplicit_00000=7)
BOOL aux78 #CSE: 2 occurrences of: (x_MSetExplicit_00002=8)
BOOL aux79 #CSE: 2 occurrences of: (x_MSetExplicit_00002=7)
BOOL aux80 #CSE: 2 occurrences of: (x_MSetExplicit_00002=6)
BOOL aux81 #CSE: 2 occurrences of: (x_MSetExplicit_00002=5)
BOOL aux82 #CSE: 2 occurrences of: (x_MSetExplicit_00001=9)
BOOL aux83 #CSE: 2 occurrences of: (x_MSetExplicit_00001=8)
BOOL aux84 #CSE: 2 occurrences of: (x_MSetExplicit_00001=7)
BOOL aux85 #CSE: 2 occurrences of: (x_MSetExplicit_00001=6)
BOOL aux86 #CSE: 2 occurrences of: (x_MSetExplicit_00003=6)
BOOL aux87 #CSE: 2 occurrences of: (x_MSetExplicit_00003=5)
BOOL aux88 #CSE: 2 occurrences of: (x_MSetExplicit_00003=9)
BOOL aux89 #CSE: 2 occurrences of: (x_MSetExplicit_00003=8)
BOOL aux90 #CSE: 2 occurrences of: (x_MSetExplicit_00003=7)
BOOL aux91 #CSE: 2 occurrences of: (x_MSetExplicit_00002=9)
BOOL aux92 #CSE: 2 occurrences of: (x_MSetExplicit_00004=9)
BOOL aux93 #CSE: 2 occurrences of: (x_MSetExplicit_00004=8)
BOOL aux94 #CSE: 2 occurrences of: (x_MSetExplicit_00004=7)
BOOL aux95 #CSE: 2 occurrences of: (x_MSetExplicit_00004=6)
BOOL aux96 #CSE: 2 occurrences of: (x_MSetExplicit_00004=5)
BOOL aux97 #(aux64*aux48)
BOOL aux98 #(aux57*aux49)
BOOL aux99 #(aux61*aux46)
BOOL aux100 #(aux56*aux47)
BOOL aux101 #(aux65*aux48)
BOOL aux102 #(aux59*aux49)
BOOL aux103 #(aux62*aux46)
BOOL aux104 #(aux55*aux47)
BOOL aux105 #(aux63*aux48)
BOOL aux106 #(aux58*aux49)
BOOL aux107 #(aux60*aux46)
BOOL aux108 #(aux54*aux47)
BOOL aux109 #((aux64 + aux65 + aux63)<=aux48)
BOOL aux110 #((aux57 + aux59 + aux58)<=aux49)
BOOL aux111 #((aux61 + aux62 + aux60)<=aux46)
BOOL aux112 #((aux56 + aux55 + aux54)<=aux47)
BOOL aux113 #(aux4<=aux48)
BOOL aux114 #(aux0<=aux49)
BOOL aux115 #(aux1<=aux46)
BOOL aux116 #(aux2<=aux47)
BOOL aux117 #(aux3<=aux66)
BOOL aux118 #(aux5<=aux50)
BOOL aux119 #(aux48<=aux4)
BOOL aux120 #(aux49<=aux0)
BOOL aux121 #(aux46<=aux1)
BOOL aux122 #(aux47<=aux2)
BOOL aux123 #(aux66<=aux3)
BOOL aux124 #(aux50<=aux5)
**SEARCH**
PRINT[[x_MSetOccurrence_00000],[x_MSetOccurrence_00001],[x_MSetOccurrence_00002],[x_MSetOccurrence_00003],[x_MSetOccurrence_00004],[x_MSetOccurrence_00005],[x_MSetExplicit_00000],[x_MSetExplicit_00001],[x_MSetExplicit_00002],[x_MSetExplicit_00003],[x_MSetExplicit_00004],[y_MSetExplicit_00000],[y_MSetExplicit_00001],[y_MSetExplicit_00002]]
VARORDER STATIC [x_MSetOccurrence_00000,x_MSetOccurrence_00001,x_MSetOccurrence_00002,x_MSetOccurrence_00003,x_MSetOccurrence_00004,x_MSetOccurrence_00005,x_MSetExplicit_00000,x_MSetExplicit_00001,x_MSetExplicit_00002,x_MSetExplicit_00003,x_MSetExplicit_00004,y_MSetExplicit_00000,y_MSetExplicit_00001,y_MSetExplicit_00002]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124]
**CONSTRAINTS**
product(aux64, aux48, aux97)
product(aux57, aux49, aux98)
product(aux61, aux46, aux99)
product(aux56, aux47, aux100)
product(aux65, aux48, aux101)
product(aux59, aux49, aux102)
product(aux62, aux46, aux103)
product(aux55, aux47, aux104)
product(aux63, aux48, aux105)
product(aux58, aux49, aux106)
product(aux60, aux46, aux107)
product(aux54, aux47, aux108)
reify(sumleq([aux64,aux65,aux63],aux48), aux109)
reify(sumleq([aux57,aux59,aux58],aux49), aux110)
reify(sumleq([aux61,aux62,aux60],aux46), aux111)
reify(sumleq([aux56,aux55,aux54],aux47), aux112)
reify(ineq(aux4, aux48, 0), aux113)
reify(ineq(aux0, aux49, 0), aux114)
reify(ineq(aux1, aux46, 0), aux115)
reify(ineq(aux2, aux47, 0), aux116)
reify(ineq(aux3, aux66, 0), aux117)
reify(ineq(aux5, aux50, 0), aux118)
reify(ineq(aux48, aux4, 0), aux119)
reify(ineq(aux49, aux0, 0), aux120)
reify(ineq(aux46, aux1, 0), aux121)
reify(ineq(aux47, aux2, 0), aux122)
reify(ineq(aux66, aux3, 0), aux123)
reify(ineq(aux50, aux5, 0), aux124)
product(aux70, aux48, aux6)
product(aux96, aux49, aux7)
product(aux95, aux46, aux8)
product(aux94, aux47, aux9)
product(aux93, aux66, aux10)
product(aux92, aux50, aux11)
product(aux80, aux46, aux12)
product(aux79, aux47, aux13)
product(aux68, aux48, aux14)
product(aux81, aux49, aux15)
product(aux78, aux66, aux16)
product(aux91, aux50, aux17)
product(aux88, aux50, aux18)
product(aux89, aux66, aux19)
product(aux90, aux47, aux20)
product(aux86, aux46, aux21)
product(aux87, aux49, aux22)
product(aux71, aux48, aux23)
product(aux76, aux66, aux24)
product(aux75, aux50, aux25)
product(aux69, aux48, aux26)
product(aux74, aux49, aux27)
product(aux73, aux46, aux28)
product(aux77, aux47, aux29)
product(aux72, aux49, aux30)
product(aux67, aux48, aux31)
product(aux84, aux47, aux32)
product(aux85, aux46, aux33)
product(aux82, aux50, aux34)
product(aux83, aux66, aux35)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00004), aux36)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00002), aux37)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00003), aux38)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00003), aux39)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00004), aux40)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00001), aux41)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00002), aux42)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00004), aux43)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00003), aux44)
reify(eq(x_MSetExplicit_00003,x_MSetExplicit_00004), aux45)
reify(ineq(0, x_MSetOccurrence_00002, -1), aux46)
reify(ineq(0, x_MSetOccurrence_00003, -1), aux47)
reify(ineq(0, x_MSetOccurrence_00000, -1), aux48)
reify(ineq(0, x_MSetOccurrence_00001, -1), aux49)
reify(ineq(0, x_MSetOccurrence_00005, -1), aux50)
reify(eq(y_MSetExplicit_00001,y_MSetExplicit_00002), aux51)
reify(eq(y_MSetExplicit_00000,y_MSetExplicit_00002), aux52)
reify(eq(y_MSetExplicit_00000,y_MSetExplicit_00001), aux53)
reify(w-literal(y_MSetExplicit_00002,7), aux54)
reify(w-literal(y_MSetExplicit_00001,7), aux55)
reify(w-literal(y_MSetExplicit_00000,7), aux56)
reify(w-literal(y_MSetExplicit_00000,5), aux57)
reify(w-literal(y_MSetExplicit_00002,5), aux58)
reify(w-literal(y_MSetExplicit_00001,5), aux59)
reify(w-literal(y_MSetExplicit_00002,6), aux60)
reify(w-literal(y_MSetExplicit_00000,6), aux61)
reify(w-literal(y_MSetExplicit_00001,6), aux62)
reify(w-literal(y_MSetExplicit_00002,4), aux63)
reify(w-literal(y_MSetExplicit_00000,4), aux64)
reify(w-literal(y_MSetExplicit_00001,4), aux65)
reify(ineq(0, x_MSetOccurrence_00004, -1), aux66)
reify(w-literal(x_MSetExplicit_00001,4), aux67)
reify(w-literal(x_MSetExplicit_00002,4), aux68)
reify(w-literal(x_MSetExplicit_00000,4), aux69)
reify(w-literal(x_MSetExplicit_00004,4), aux70)
reify(w-literal(x_MSetExplicit_00003,4), aux71)
reify(w-literal(x_MSetExplicit_00001,5), aux72)
reify(w-literal(x_MSetExplicit_00000,6), aux73)
reify(w-literal(x_MSetExplicit_00000,5), aux74)
reify(w-literal(x_MSetExplicit_00000,9), aux75)
reify(w-literal(x_MSetExplicit_00000,8), aux76)
reify(w-literal(x_MSetExplicit_00000,7), aux77)
reify(w-literal(x_MSetExplicit_00002,8), aux78)
reify(w-literal(x_MSetExplicit_00002,7), aux79)
reify(w-literal(x_MSetExplicit_00002,6), aux80)
reify(w-literal(x_MSetExplicit_00002,5), aux81)
reify(w-literal(x_MSetExplicit_00001,9), aux82)
reify(w-literal(x_MSetExplicit_00001,8), aux83)
reify(w-literal(x_MSetExplicit_00001,7), aux84)
reify(w-literal(x_MSetExplicit_00001,6), aux85)
reify(w-literal(x_MSetExplicit_00003,6), aux86)
reify(w-literal(x_MSetExplicit_00003,5), aux87)
reify(w-literal(x_MSetExplicit_00003,9), aux88)
reify(w-literal(x_MSetExplicit_00003,8), aux89)
reify(w-literal(x_MSetExplicit_00003,7), aux90)
reify(w-literal(x_MSetExplicit_00002,9), aux91)
reify(w-literal(x_MSetExplicit_00004,9), aux92)
reify(w-literal(x_MSetExplicit_00004,8), aux93)
reify(w-literal(x_MSetExplicit_00004,7), aux94)
reify(w-literal(x_MSetExplicit_00004,6), aux95)
reify(w-literal(x_MSetExplicit_00004,5), aux96)
watched-or({w-literal(aux69,1),w-literal(aux67,1),w-literal(aux68,1),w-literal(aux71,1),w-literal(aux70,1)})
ineq(y_MSetExplicit_00000, y_MSetExplicit_00001, 0)
ineq(y_MSetExplicit_00001, y_MSetExplicit_00002, 0)
weightedsumleq([-1,-1,-1,-1,1,1,1],[aux97,aux98,aux99,aux100,1,aux53,aux52],0)
weightedsumleq([-1,-1,-1,-1,1,1,1],[aux101,aux102,aux103,aux104,1,aux53,aux51],0)
weightedsumleq([-1,-1,-1,-1,1,1,1],[aux105,aux106,aux107,aux108,1,aux52,aux51],0)
ineq(x_MSetExplicit_00000, x_MSetExplicit_00001, 0)
ineq(x_MSetExplicit_00001, x_MSetExplicit_00002, 0)
ineq(x_MSetExplicit_00002, x_MSetExplicit_00003, 0)
ineq(x_MSetExplicit_00003, x_MSetExplicit_00004, 0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux41,aux42,aux39,aux40,aux26,aux27,aux28,aux29,aux24,aux25],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux41,aux37,aux38,aux36,aux31,aux30,aux33,aux32,aux35,aux34],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux42,aux37,aux44,aux43,aux14,aux15,aux12,aux13,aux16,aux17],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux39,aux38,aux44,aux45,aux23,aux22,aux21,aux20,aux19,aux18],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux40,aux36,aux43,aux45,aux6,aux7,aux8,aux9,aux10,aux11],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux41,aux42,aux39,aux40,aux26,aux27,aux28,aux29,aux24,aux25],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux41,aux37,aux38,aux36,aux31,aux30,aux33,aux32,aux35,aux34],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux42,aux37,aux44,aux43,aux14,aux15,aux12,aux13,aux16,aux17],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux39,aux38,aux44,aux45,aux23,aux22,aux21,aux20,aux19,aux18],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux40,aux36,aux43,aux45,aux6,aux7,aux8,aux9,aux10,aux11],0)
ineq(aux48, aux109, 0)
ineq(aux49, aux110, 0)
ineq(aux46, aux111, 0)
ineq(aux47, aux112, 0)
ineq(aux48, aux113, 0)
ineq(aux49, aux114, 0)
ineq(aux46, aux115, 0)
ineq(aux47, aux116, 0)
ineq(aux66, aux117, 0)
ineq(aux50, aux118, 0)
ineq(aux48, aux119, 0)
ineq(aux49, aux120, 0)
ineq(aux46, aux121, 0)
ineq(aux47, aux122, 0)
ineq(aux66, aux123, 0)
ineq(aux50, aux124, 0)
sumleq([aux74,aux72,aux81,aux87,aux96],aux0)
sumgeq([aux74,aux72,aux81,aux87,aux96],aux0)
sumleq([aux73,aux85,aux80,aux86,aux95],aux1)
sumgeq([aux73,aux85,aux80,aux86,aux95],aux1)
sumleq([aux77,aux84,aux79,aux90,aux94],aux2)
sumgeq([aux77,aux84,aux79,aux90,aux94],aux2)
sumleq([aux76,aux83,aux78,aux89,aux93],aux3)
sumgeq([aux76,aux83,aux78,aux89,aux93],aux3)
sumleq([aux69,aux67,aux68,aux71,aux70],aux4)
sumgeq([aux69,aux67,aux68,aux71,aux70],aux4)
sumleq([aux75,aux82,aux91,aux88,aux92],aux5)
sumgeq([aux75,aux82,aux91,aux88,aux92],aux5)
sumleq([aux48,aux49,aux46,aux47,aux66,aux50],5)
sumgeq([aux48,aux49,aux46,aux47,aux66,aux50],5)
**EOF**
