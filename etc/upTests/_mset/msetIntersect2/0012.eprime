language ESSENCE' 1.0

given n: int
given m: int
given k: int
find a_MSetExplicit: matrix indexed by [int(1..k)] of int(n..m)
find a_MSetOccurrence: matrix indexed by [int(n..m)] of int(0..k)
find b_MSetOccurrence: matrix indexed by [int(n..m)] of int(0..k)
find c: int(n..m)
such that
    (sum v__0 : int(n..m) . a_MSetOccurrence[v__0] > 0) = k,
    (sum v__0 : int(n..m) . b_MSetOccurrence[v__0] > 0) = k,
    (sum v__0 : int(n..m)
         . min((sum v__1 : int(n..m) . (a_MSetOccurrence[v__1] > 0) * (v__1 = v__0)),
               (sum v__1 : int(n..m) . (b_MSetOccurrence[v__1] > 0) * (v__1 = v__0))))
    =
    c,
    forAll v__0 : int(n..m)
        . a_MSetOccurrence[v__0] > 0
          ->
          (sum v__1 : int(n..m) . (a_MSetOccurrence[v__1] > 0) * (v__1 = v__0))
          <=
          (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = v__0),
    forAll v__0 : int(n..m)
        . a_MSetOccurrence[v__0] > 0
          ->
          (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = v__0)
          <=
          (sum v__1 : int(n..m) . (a_MSetOccurrence[v__1] > 0) * (v__1 = v__0)),
    forAll v__0 : int(1..k - 1) . a_MSetExplicit[v__0] <= a_MSetExplicit[v__0 + 1],
    forAll v__0 : int(1..k)
        . (sum v__1 : int(n..m)
               . (a_MSetOccurrence[v__1] > 0) * (v__1 = a_MSetExplicit[v__0]))
          <=
          (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = a_MSetExplicit[v__0]),
    forAll v__0 : int(1..k)
        . (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = a_MSetExplicit[v__0])
          <=
          (sum v__1 : int(n..m)
               . (a_MSetOccurrence[v__1] > 0) * (v__1 = a_MSetExplicit[v__0])),
    !((forAll v__0 : int(1..k)
           . (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = a_MSetExplicit[v__0])
             <=
             (sum v__1 : int(n..m)
                  . (b_MSetOccurrence[v__1] > 0) * (v__1 = a_MSetExplicit[v__0])))
      /\
      (forAll v__0 : int(n..m)
           . b_MSetOccurrence[v__0] > 0
             ->
             (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = v__0)
             <=
             (sum v__1 : int(n..m) . (b_MSetOccurrence[v__1] > 0) * (v__1 = v__0)))
      /\
      ((forAll v__0 : int(n..m)
            . b_MSetOccurrence[v__0] > 0
              ->
              (sum v__1 : int(n..m) . (b_MSetOccurrence[v__1] > 0) * (v__1 = v__0))
              <=
              (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = v__0))
       /\
       (forAll v__0 : int(1..k)
            . (sum v__1 : int(n..m)
                   . (b_MSetOccurrence[v__1] > 0) * (v__1 = a_MSetExplicit[v__0]))
              <=
              (sum v__1 : int(1..k) . a_MSetExplicit[v__1] = a_MSetExplicit[v__0]))))
