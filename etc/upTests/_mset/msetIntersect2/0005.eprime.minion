MINION 3
# CSE_number = 107
# CSE_eliminated_expressions = 323
# CSE_total_size = 581
**VARIABLES**
DISCRETE a_MSetOccurrence_00000 #
{0..4}
DISCRETE a_MSetOccurrence_00001 #
{0..4}
DISCRETE a_MSetOccurrence_00002 #
{0..4}
DISCRETE a_MSetOccurrence_00003 #
{0..4}
DISCRETE a_MSetOccurrence_00004 #
{0..4}
DISCRETE a_MSetExplicit_00000 #
{3..7}
DISCRETE a_MSetExplicit_00001 #
{3..7}
DISCRETE a_MSetExplicit_00002 #
{3..7}
DISCRETE a_MSetExplicit_00003 #
{3..7}
DISCRETE b_MSetExplicit_00000 #
{3..7}
DISCRETE b_MSetExplicit_00001 #
{3..7}
DISCRETE b_MSetExplicit_00002 #
{3..7}
DISCRETE b_MSetExplicit_00003 #
{3..7}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=5) + (a_MSetExplicit_00001=5) + (a_MSetExplicit_00002=5) + (a_MSetExplicit_00003=5))
{0..4}
DISCRETE aux1 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=4) + (a_MSetExplicit_00001=4) + (a_MSetExplicit_00002=4) + (a_MSetExplicit_00003=4))
{0..4}
DISCRETE aux2 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=7) + (a_MSetExplicit_00001=7) + (a_MSetExplicit_00002=7) + (a_MSetExplicit_00003=7))
{0..4}
DISCRETE aux3 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=6) + (a_MSetExplicit_00001=6) + (a_MSetExplicit_00002=6) + (a_MSetExplicit_00003=6))
{0..4}
DISCRETE aux4 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=3) + (b_MSetExplicit_00001=3) + (b_MSetExplicit_00002=3) + (b_MSetExplicit_00003=3))
{0..4}
DISCRETE aux5 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=7) + (b_MSetExplicit_00001=7) + (b_MSetExplicit_00002=7) + (b_MSetExplicit_00003=7))
{0..4}
DISCRETE aux6 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=4) + (b_MSetExplicit_00001=4) + (b_MSetExplicit_00002=4) + (b_MSetExplicit_00003=4))
{0..4}
DISCRETE aux7 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=5) + (b_MSetExplicit_00001=5) + (b_MSetExplicit_00002=5) + (b_MSetExplicit_00003=5))
{0..4}
DISCRETE aux8 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=6) + (b_MSetExplicit_00001=6) + (b_MSetExplicit_00002=6) + (b_MSetExplicit_00003=6))
{0..4}
DISCRETE aux9 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=3) + (a_MSetExplicit_00001=3) + (a_MSetExplicit_00002=3) + (a_MSetExplicit_00003=3))
{0..4}
BOOL aux10 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux11 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux12 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux13 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux14 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux15 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux16 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux17 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux18 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux19 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux21 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux22 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux23 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux24 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux25 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux26 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux27 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux28 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux29 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux30 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux31 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux32 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux33 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux34 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux35 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux36 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux37 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux38 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux39 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux40 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux41 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux42 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux43 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux44 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux45 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux46 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux47 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux48 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux49 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux50 #CSE: 4 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00003)
BOOL aux51 #CSE: 4 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00002)
BOOL aux52 #CSE: 4 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00001)
BOOL aux53 #CSE: 4 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00003)
BOOL aux54 #CSE: 4 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00002)
BOOL aux55 #CSE: 4 occurrences of: (b_MSetExplicit_00002=b_MSetExplicit_00003)
BOOL aux56 #CSE: 17 occurrences of: (0<a_MSetOccurrence_00000)
BOOL aux57 #CSE: 2 occurrences of: (a_MSetExplicit_00003=3)
BOOL aux58 #CSE: 2 occurrences of: (a_MSetExplicit_00003=4)
BOOL aux59 #CSE: 2 occurrences of: (a_MSetExplicit_00003=5)
BOOL aux60 #CSE: 2 occurrences of: (a_MSetExplicit_00003=6)
BOOL aux61 #CSE: 2 occurrences of: (a_MSetExplicit_00003=7)
BOOL aux62 #CSE: 17 occurrences of: (0<a_MSetOccurrence_00001)
BOOL aux63 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux64 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux65 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux66 #CSE: 4 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux67 #CSE: 4 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux68 #CSE: 4 occurrences of: (a_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux69 #CSE: 17 occurrences of: (0<a_MSetOccurrence_00002)
BOOL aux70 #CSE: 2 occurrences of: (a_MSetExplicit_00000=3)
BOOL aux71 #CSE: 17 occurrences of: (0<a_MSetOccurrence_00003)
BOOL aux72 #CSE: 2 occurrences of: (a_MSetExplicit_00002=3)
BOOL aux73 #CSE: 2 occurrences of: (a_MSetExplicit_00002=5)
BOOL aux74 #CSE: 2 occurrences of: (a_MSetExplicit_00002=4)
BOOL aux75 #CSE: 2 occurrences of: (a_MSetExplicit_00002=6)
BOOL aux76 #CSE: 2 occurrences of: (a_MSetExplicit_00002=7)
BOOL aux77 #CSE: 2 occurrences of: (a_MSetExplicit_00001=4)
BOOL aux78 #CSE: 2 occurrences of: (a_MSetExplicit_00001=5)
BOOL aux79 #CSE: 2 occurrences of: (a_MSetExplicit_00001=6)
BOOL aux80 #CSE: 2 occurrences of: (a_MSetExplicit_00001=7)
BOOL aux81 #CSE: 2 occurrences of: (a_MSetExplicit_00001=3)
BOOL aux82 #CSE: 2 occurrences of: (a_MSetExplicit_00000=4)
BOOL aux83 #CSE: 2 occurrences of: (a_MSetExplicit_00000=5)
BOOL aux84 #CSE: 2 occurrences of: (a_MSetExplicit_00000=6)
BOOL aux85 #CSE: 2 occurrences of: (a_MSetExplicit_00000=7)
BOOL aux86 #CSE: 17 occurrences of: (0<a_MSetOccurrence_00004)
BOOL aux87 #CSE: 2 occurrences of: (b_MSetExplicit_00003=7)
BOOL aux88 #CSE: 2 occurrences of: (b_MSetExplicit_00003=5)
BOOL aux89 #CSE: 2 occurrences of: (b_MSetExplicit_00003=6)
BOOL aux90 #CSE: 2 occurrences of: (b_MSetExplicit_00003=3)
BOOL aux91 #CSE: 2 occurrences of: (b_MSetExplicit_00003=4)
BOOL aux92 #CSE: 2 occurrences of: (b_MSetExplicit_00002=5)
BOOL aux93 #CSE: 2 occurrences of: (b_MSetExplicit_00002=7)
BOOL aux94 #CSE: 2 occurrences of: (b_MSetExplicit_00002=6)
BOOL aux95 #CSE: 2 occurrences of: (b_MSetExplicit_00002=3)
BOOL aux96 #CSE: 2 occurrences of: (b_MSetExplicit_00002=4)
BOOL aux97 #CSE: 2 occurrences of: (b_MSetExplicit_00001=6)
BOOL aux98 #CSE: 2 occurrences of: (b_MSetExplicit_00001=7)
BOOL aux99 #CSE: 2 occurrences of: (b_MSetExplicit_00001=3)
BOOL aux100 #CSE: 2 occurrences of: (b_MSetExplicit_00001=5)
BOOL aux101 #CSE: 2 occurrences of: (b_MSetExplicit_00001=4)
BOOL aux102 #CSE: 2 occurrences of: (b_MSetExplicit_00000=6)
BOOL aux103 #CSE: 2 occurrences of: (b_MSetExplicit_00000=7)
BOOL aux104 #CSE: 2 occurrences of: (b_MSetExplicit_00000=4)
BOOL aux105 #CSE: 2 occurrences of: (b_MSetExplicit_00000=5)
BOOL aux106 #CSE: 2 occurrences of: (b_MSetExplicit_00000=3)
DISCRETE aux107 #min(aux4, aux9)
{0..4}
DISCRETE aux108 #min(aux6, aux1)
{0..4}
DISCRETE aux109 #min(aux7, aux0)
{0..4}
DISCRETE aux110 #min(aux8, aux3)
{0..4}
DISCRETE aux111 #min(aux5, aux2)
{0..4}
BOOL aux112 #(aux4<=aux56)
BOOL aux113 #(aux6<=aux62)
BOOL aux114 #(aux7<=aux69)
BOOL aux115 #(aux8<=aux71)
BOOL aux116 #(aux5<=aux86)
BOOL aux117 #(aux56<=aux4)
BOOL aux118 #(aux62<=aux6)
BOOL aux119 #(aux69<=aux7)
BOOL aux120 #(aux71<=aux8)
BOOL aux121 #(aux86<=aux5)
BOOL aux122 #((aux56 -> aux112) /\ (aux62 -> aux113) /\ (aux69 -> aux114) /\ (aux71 -> aux115) /\ (aux86 -> aux116) /\ ((aux10 + aux11 + aux13 + aux14 + aux12-1-1*aux52-1*aux54-1*aux53)<=0) /\ ((-1*aux10-1*aux11-1*aux13-1*aux14-1*aux12 + 1 + aux52 + aux54 + aux53)<=0) /\ ((aux28 + aux29 + aux25 + aux26 + aux27-1-1*aux50-1*aux53-1*aux55)<=0) /\ ((-1*aux28-1*aux29-1*aux25-1*aux26-1*aux27 + 1 + aux50 + aux53 + aux55)<=0) /\ ((aux21 + aux20 + aux23 + aux22 + aux24-1-1*aux52-1*aux51-1*aux50)<=0) /\ ((-1*aux21-1*aux20-1*aux23-1*aux22-1*aux24 + 1 + aux52 + aux51 + aux50)<=0) /\ ((aux18 + aux17 + aux16 + aux15 + aux19-1-1*aux51-1*aux54-1*aux55)<=0) /\ ((-1*aux18-1*aux17-1*aux16-1*aux15-1*aux19 + 1 + aux51 + aux54 + aux55)<=0) /\ (aux56 -> aux117) /\ (aux62 -> aux118) /\ (aux69 -> aux119) /\ (aux71 -> aux120) /\ (aux86 -> aux121))
BOOL aux123 #(aux56<=aux9)
BOOL aux124 #(aux62<=aux1)
BOOL aux125 #(aux69<=aux0)
BOOL aux126 #(aux71<=aux3)
BOOL aux127 #(aux86<=aux2)
BOOL aux128 #(aux9<=aux56)
BOOL aux129 #(aux1<=aux62)
BOOL aux130 #(aux0<=aux69)
BOOL aux131 #(aux3<=aux71)
BOOL aux132 #(aux2<=aux86)
**SEARCH**
PRINT[[a_MSetOccurrence_00000],[a_MSetOccurrence_00001],[a_MSetOccurrence_00002],[a_MSetOccurrence_00003],[a_MSetOccurrence_00004],[a_MSetExplicit_00000],[a_MSetExplicit_00001],[a_MSetExplicit_00002],[a_MSetExplicit_00003],[b_MSetExplicit_00000],[b_MSetExplicit_00001],[b_MSetExplicit_00002],[b_MSetExplicit_00003],[c]]
VARORDER STATIC [a_MSetOccurrence_00000,a_MSetOccurrence_00001,a_MSetOccurrence_00002,a_MSetOccurrence_00003,a_MSetOccurrence_00004,a_MSetExplicit_00000,a_MSetExplicit_00001,a_MSetExplicit_00002,a_MSetExplicit_00003,b_MSetExplicit_00000,b_MSetExplicit_00001,b_MSetExplicit_00002,b_MSetExplicit_00003,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132]
**CONSTRAINTS**
min([aux4,aux9],aux107)
min([aux6,aux1],aux108)
min([aux7,aux0],aux109)
min([aux8,aux3],aux110)
min([aux5,aux2],aux111)
reify(ineq(aux4, aux56, 0), aux112)
reify(ineq(aux6, aux62, 0), aux113)
reify(ineq(aux7, aux69, 0), aux114)
reify(ineq(aux8, aux71, 0), aux115)
reify(ineq(aux5, aux86, 0), aux116)
reify(ineq(aux56, aux4, 0), aux117)
reify(ineq(aux62, aux6, 0), aux118)
reify(ineq(aux69, aux7, 0), aux119)
reify(ineq(aux71, aux8, 0), aux120)
reify(ineq(aux86, aux5, 0), aux121)
reify(watched-and({ineq(aux56, aux112, 0),ineq(aux62, aux113, 0),ineq(aux69, aux114, 0),ineq(aux71, aux115, 0),ineq(aux86, aux116, 0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux10,aux11,aux13,aux14,aux12,-1,aux52,aux54,aux53],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux10,aux11,aux13,aux14,aux12,1,aux52,aux54,aux53],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux28,aux29,aux25,aux26,aux27,-1,aux50,aux53,aux55],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux28,aux29,aux25,aux26,aux27,1,aux50,aux53,aux55],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux21,aux20,aux23,aux22,aux24,-1,aux52,aux51,aux50],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux21,aux20,aux23,aux22,aux24,1,aux52,aux51,aux50],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux18,aux17,aux16,aux15,aux19,-1,aux51,aux54,aux55],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux18,aux17,aux16,aux15,aux19,1,aux51,aux54,aux55],0),ineq(aux56, aux117, 0),ineq(aux62, aux118, 0),ineq(aux69, aux119, 0),ineq(aux71, aux120, 0),ineq(aux86, aux121, 0)}), aux122)
reify(ineq(aux56, aux9, 0), aux123)
reify(ineq(aux62, aux1, 0), aux124)
reify(ineq(aux69, aux0, 0), aux125)
reify(ineq(aux71, aux3, 0), aux126)
reify(ineq(aux86, aux2, 0), aux127)
reify(ineq(aux9, aux56, 0), aux128)
reify(ineq(aux1, aux62, 0), aux129)
reify(ineq(aux0, aux69, 0), aux130)
reify(ineq(aux3, aux71, 0), aux131)
reify(ineq(aux2, aux86, 0), aux132)
product(aux99, aux56, aux10)
product(aux101, aux62, aux11)
product(aux98, aux86, aux12)
product(aux100, aux69, aux13)
product(aux97, aux71, aux14)
product(aux94, aux71, aux15)
product(aux92, aux69, aux16)
product(aux96, aux62, aux17)
product(aux95, aux56, aux18)
product(aux93, aux86, aux19)
product(aux104, aux62, aux20)
product(aux106, aux56, aux21)
product(aux102, aux71, aux22)
product(aux105, aux69, aux23)
product(aux103, aux86, aux24)
product(aux88, aux69, aux25)
product(aux89, aux71, aux26)
product(aux87, aux86, aux27)
product(aux90, aux56, aux28)
product(aux91, aux62, aux29)
product(aux57, aux56, aux30)
product(aux59, aux69, aux31)
product(aux58, aux62, aux32)
product(aux61, aux86, aux33)
product(aux60, aux71, aux34)
product(aux72, aux56, aux35)
product(aux74, aux62, aux36)
product(aux73, aux69, aux37)
product(aux75, aux71, aux38)
product(aux76, aux86, aux39)
product(aux78, aux69, aux40)
product(aux77, aux62, aux41)
product(aux81, aux56, aux42)
product(aux80, aux86, aux43)
product(aux79, aux71, aux44)
product(aux70, aux56, aux45)
product(aux84, aux71, aux46)
product(aux85, aux86, aux47)
product(aux82, aux62, aux48)
product(aux83, aux69, aux49)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00003), aux50)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00002), aux51)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00001), aux52)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00003), aux53)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00002), aux54)
reify(eq(b_MSetExplicit_00002,b_MSetExplicit_00003), aux55)
reify(ineq(0, a_MSetOccurrence_00000, -1), aux56)
reify(w-literal(a_MSetExplicit_00003,3), aux57)
reify(w-literal(a_MSetExplicit_00003,4), aux58)
reify(w-literal(a_MSetExplicit_00003,5), aux59)
reify(w-literal(a_MSetExplicit_00003,6), aux60)
reify(w-literal(a_MSetExplicit_00003,7), aux61)
reify(ineq(0, a_MSetOccurrence_00001, -1), aux62)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00003), aux63)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00001), aux64)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00002), aux65)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00002), aux66)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00003), aux67)
reify(eq(a_MSetExplicit_00002,a_MSetExplicit_00003), aux68)
reify(ineq(0, a_MSetOccurrence_00002, -1), aux69)
reify(w-literal(a_MSetExplicit_00000,3), aux70)
reify(ineq(0, a_MSetOccurrence_00003, -1), aux71)
reify(w-literal(a_MSetExplicit_00002,3), aux72)
reify(w-literal(a_MSetExplicit_00002,5), aux73)
reify(w-literal(a_MSetExplicit_00002,4), aux74)
reify(w-literal(a_MSetExplicit_00002,6), aux75)
reify(w-literal(a_MSetExplicit_00002,7), aux76)
reify(w-literal(a_MSetExplicit_00001,4), aux77)
reify(w-literal(a_MSetExplicit_00001,5), aux78)
reify(w-literal(a_MSetExplicit_00001,6), aux79)
reify(w-literal(a_MSetExplicit_00001,7), aux80)
reify(w-literal(a_MSetExplicit_00001,3), aux81)
reify(w-literal(a_MSetExplicit_00000,4), aux82)
reify(w-literal(a_MSetExplicit_00000,5), aux83)
reify(w-literal(a_MSetExplicit_00000,6), aux84)
reify(w-literal(a_MSetExplicit_00000,7), aux85)
reify(ineq(0, a_MSetOccurrence_00004, -1), aux86)
reify(w-literal(b_MSetExplicit_00003,7), aux87)
reify(w-literal(b_MSetExplicit_00003,5), aux88)
reify(w-literal(b_MSetExplicit_00003,6), aux89)
reify(w-literal(b_MSetExplicit_00003,3), aux90)
reify(w-literal(b_MSetExplicit_00003,4), aux91)
reify(w-literal(b_MSetExplicit_00002,5), aux92)
reify(w-literal(b_MSetExplicit_00002,7), aux93)
reify(w-literal(b_MSetExplicit_00002,6), aux94)
reify(w-literal(b_MSetExplicit_00002,3), aux95)
reify(w-literal(b_MSetExplicit_00002,4), aux96)
reify(w-literal(b_MSetExplicit_00001,6), aux97)
reify(w-literal(b_MSetExplicit_00001,7), aux98)
reify(w-literal(b_MSetExplicit_00001,3), aux99)
reify(w-literal(b_MSetExplicit_00001,5), aux100)
reify(w-literal(b_MSetExplicit_00001,4), aux101)
reify(w-literal(b_MSetExplicit_00000,6), aux102)
reify(w-literal(b_MSetExplicit_00000,7), aux103)
reify(w-literal(b_MSetExplicit_00000,4), aux104)
reify(w-literal(b_MSetExplicit_00000,5), aux105)
reify(w-literal(b_MSetExplicit_00000,3), aux106)
eq(aux122,0)
ineq(aux56, aux123, 0)
ineq(aux62, aux124, 0)
ineq(aux69, aux125, 0)
ineq(aux71, aux126, 0)
ineq(aux86, aux127, 0)
ineq(aux56, aux128, 0)
ineq(aux62, aux129, 0)
ineq(aux69, aux130, 0)
ineq(aux71, aux131, 0)
ineq(aux86, aux132, 0)
ineq(a_MSetExplicit_00000, a_MSetExplicit_00001, 0)
ineq(a_MSetExplicit_00001, a_MSetExplicit_00002, 0)
ineq(a_MSetExplicit_00002, a_MSetExplicit_00003, 0)
ineq(b_MSetExplicit_00000, b_MSetExplicit_00001, 0)
ineq(b_MSetExplicit_00001, b_MSetExplicit_00002, 0)
ineq(b_MSetExplicit_00002, b_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux64,aux65,aux63,aux45,aux48,aux49,aux46,aux47],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux64,aux66,aux67,aux42,aux41,aux40,aux44,aux43],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux65,aux66,aux68,aux35,aux36,aux37,aux38,aux39],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux63,aux67,aux68,aux30,aux32,aux31,aux34,aux33],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux64,aux65,aux63,aux45,aux48,aux49,aux46,aux47],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux64,aux66,aux67,aux42,aux41,aux40,aux44,aux43],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux65,aux66,aux68,aux35,aux36,aux37,aux38,aux39],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux63,aux67,aux68,aux30,aux32,aux31,aux34,aux33],0)
sumleq([aux83,aux78,aux73,aux59],aux0)
sumgeq([aux83,aux78,aux73,aux59],aux0)
sumleq([aux82,aux77,aux74,aux58],aux1)
sumgeq([aux82,aux77,aux74,aux58],aux1)
sumleq([aux85,aux80,aux76,aux61],aux2)
sumgeq([aux85,aux80,aux76,aux61],aux2)
sumleq([aux84,aux79,aux75,aux60],aux3)
sumgeq([aux84,aux79,aux75,aux60],aux3)
sumleq([aux106,aux99,aux95,aux90],aux4)
sumgeq([aux106,aux99,aux95,aux90],aux4)
sumleq([aux103,aux98,aux93,aux87],aux5)
sumgeq([aux103,aux98,aux93,aux87],aux5)
sumleq([aux104,aux101,aux96,aux91],aux6)
sumgeq([aux104,aux101,aux96,aux91],aux6)
sumleq([aux105,aux100,aux92,aux88],aux7)
sumgeq([aux105,aux100,aux92,aux88],aux7)
sumleq([aux102,aux97,aux94,aux89],aux8)
sumgeq([aux102,aux97,aux94,aux89],aux8)
sumleq([aux70,aux81,aux72,aux57],aux9)
sumgeq([aux70,aux81,aux72,aux57],aux9)
sumleq([aux56,aux62,aux69,aux71,aux86],4)
sumgeq([aux56,aux62,aux69,aux71,aux86],4)
sumleq([aux107,aux108,aux109,aux110,aux111],c)
sumgeq([aux107,aux108,aux109,aux110,aux111],c)
**EOF**
