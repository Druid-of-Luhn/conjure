MINION 3
# CSE_number = 71
# CSE_eliminated_expressions = 234
# CSE_total_size = 383
**VARIABLES**
DISCRETE a_MSetOccurrence_00000 #
{0..4}
DISCRETE a_MSetOccurrence_00001 #
{0..4}
DISCRETE a_MSetOccurrence_00002 #
{0..4}
DISCRETE a_MSetOccurrence_00003 #
{0..4}
DISCRETE a_MSetOccurrence_00004 #
{0..4}
DISCRETE a_MSetExplicit_00000 #
{3..7}
DISCRETE a_MSetExplicit_00001 #
{3..7}
DISCRETE a_MSetExplicit_00002 #
{3..7}
DISCRETE a_MSetExplicit_00003 #
{3..7}
DISCRETE b_MSetOccurrence_00000 #
{0..4}
DISCRETE b_MSetOccurrence_00001 #
{0..4}
DISCRETE b_MSetOccurrence_00002 #
{0..4}
DISCRETE b_MSetOccurrence_00003 #
{0..4}
DISCRETE b_MSetOccurrence_00004 #
{0..4}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=5) + (a_MSetExplicit_00001=5) + (a_MSetExplicit_00002=5) + (a_MSetExplicit_00003=5))
{0..4}
DISCRETE aux1 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=4) + (a_MSetExplicit_00001=4) + (a_MSetExplicit_00002=4) + (a_MSetExplicit_00003=4))
{0..4}
DISCRETE aux2 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=7) + (a_MSetExplicit_00001=7) + (a_MSetExplicit_00002=7) + (a_MSetExplicit_00003=7))
{0..4}
DISCRETE aux3 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=6) + (a_MSetExplicit_00001=6) + (a_MSetExplicit_00002=6) + (a_MSetExplicit_00003=6))
{0..4}
DISCRETE aux4 #CSE: 3 occurrences of: ((a_MSetExplicit_00000=3) + (a_MSetExplicit_00001=3) + (a_MSetExplicit_00002=3) + (a_MSetExplicit_00003=3))
{0..4}
BOOL aux5 #CSE: 2 occurrences of: ((0<b_MSetOccurrence_00001)<=(0<a_MSetOccurrence_00001))
BOOL aux6 #CSE: 2 occurrences of: ((0<b_MSetOccurrence_00000)<=(0<a_MSetOccurrence_00000))
BOOL aux7 #CSE: 2 occurrences of: ((0<b_MSetOccurrence_00003)<=(0<a_MSetOccurrence_00003))
BOOL aux8 #CSE: 2 occurrences of: ((0<b_MSetOccurrence_00002)<=(0<a_MSetOccurrence_00002))
BOOL aux9 #CSE: 2 occurrences of: ((0<b_MSetOccurrence_00004)<=(0<a_MSetOccurrence_00004))
BOOL aux10 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux11 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux12 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux13 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux14 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux15 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux16 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux17 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux18 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux19 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux21 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux22 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux23 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux24 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux25 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux26 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux27 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux28 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux29 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux30 #CSE: 2 occurrences of: ((0<a_MSetOccurrence_00004)<=(0<b_MSetOccurrence_00004))
BOOL aux31 #CSE: 2 occurrences of: ((0<a_MSetOccurrence_00003)<=(0<b_MSetOccurrence_00003))
BOOL aux32 #CSE: 2 occurrences of: ((0<a_MSetOccurrence_00000)<=(0<b_MSetOccurrence_00000))
BOOL aux33 #CSE: 2 occurrences of: ((0<a_MSetOccurrence_00002)<=(0<b_MSetOccurrence_00002))
BOOL aux34 #CSE: 2 occurrences of: ((0<a_MSetOccurrence_00001)<=(0<b_MSetOccurrence_00001))
BOOL aux35 #CSE: 6 occurrences of: (0<b_MSetOccurrence_00004)
BOOL aux36 #CSE: 13 occurrences of: (0<a_MSetOccurrence_00003)
BOOL aux37 #CSE: 13 occurrences of: (0<a_MSetOccurrence_00000)
BOOL aux38 #CSE: 6 occurrences of: (0<b_MSetOccurrence_00001)
BOOL aux39 #CSE: 13 occurrences of: (0<a_MSetOccurrence_00002)
BOOL aux40 #CSE: 6 occurrences of: (0<b_MSetOccurrence_00002)
BOOL aux41 #CSE: 2 occurrences of: (a_MSetExplicit_00003=3)
BOOL aux42 #CSE: 2 occurrences of: (a_MSetExplicit_00003=4)
BOOL aux43 #CSE: 2 occurrences of: (a_MSetExplicit_00003=5)
BOOL aux44 #CSE: 2 occurrences of: (a_MSetExplicit_00003=6)
BOOL aux45 #CSE: 2 occurrences of: (a_MSetExplicit_00003=7)
BOOL aux46 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux47 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux48 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux49 #CSE: 4 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux50 #CSE: 4 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux51 #CSE: 4 occurrences of: (a_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux52 #CSE: 2 occurrences of: (a_MSetExplicit_00000=3)
BOOL aux53 #CSE: 6 occurrences of: (0<b_MSetOccurrence_00000)
BOOL aux54 #CSE: 2 occurrences of: (a_MSetExplicit_00002=3)
BOOL aux55 #CSE: 2 occurrences of: (a_MSetExplicit_00002=5)
BOOL aux56 #CSE: 2 occurrences of: (a_MSetExplicit_00002=4)
BOOL aux57 #CSE: 2 occurrences of: (a_MSetExplicit_00002=6)
BOOL aux58 #CSE: 2 occurrences of: (a_MSetExplicit_00002=7)
BOOL aux59 #CSE: 2 occurrences of: (a_MSetExplicit_00001=4)
BOOL aux60 #CSE: 2 occurrences of: (a_MSetExplicit_00001=5)
BOOL aux61 #CSE: 2 occurrences of: (a_MSetExplicit_00001=6)
BOOL aux62 #CSE: 2 occurrences of: (a_MSetExplicit_00001=7)
BOOL aux63 #CSE: 2 occurrences of: (a_MSetExplicit_00001=3)
BOOL aux64 #CSE: 2 occurrences of: (a_MSetExplicit_00000=4)
BOOL aux65 #CSE: 2 occurrences of: (a_MSetExplicit_00000=5)
BOOL aux66 #CSE: 2 occurrences of: (a_MSetExplicit_00000=6)
BOOL aux67 #CSE: 2 occurrences of: (a_MSetExplicit_00000=7)
BOOL aux68 #CSE: 13 occurrences of: (0<a_MSetOccurrence_00004)
BOOL aux69 #CSE: 6 occurrences of: (0<b_MSetOccurrence_00003)
BOOL aux70 #CSE: 13 occurrences of: (0<a_MSetOccurrence_00001)
BOOL aux71 #min(aux53, aux4)
BOOL aux72 #min(aux38, aux1)
BOOL aux73 #min(aux40, aux0)
BOOL aux74 #min(aux69, aux3)
BOOL aux75 #min(aux35, aux2)
BOOL aux76 #((aux53 -> aux6) /\ (aux38 -> aux5) /\ (aux40 -> aux8) /\ (aux69 -> aux7) /\ (aux35 -> aux9) /\ (aux53 -> aux32) /\ (aux38 -> aux34) /\ (aux40 -> aux33) /\ (aux69 -> aux31) /\ (aux35 -> aux30) /\ (aux37 -> aux6) /\ (aux70 -> aux5) /\ (aux39 -> aux8) /\ (aux36 -> aux7) /\ (aux68 -> aux9) /\ (aux37 -> aux32) /\ (aux70 -> aux34) /\ (aux39 -> aux33) /\ (aux36 -> aux31) /\ (aux68 -> aux30))
BOOL aux77 #(aux37<=aux4)
BOOL aux78 #(aux70<=aux1)
BOOL aux79 #(aux39<=aux0)
BOOL aux80 #(aux36<=aux3)
BOOL aux81 #(aux68<=aux2)
BOOL aux82 #(aux4<=aux37)
BOOL aux83 #(aux1<=aux70)
BOOL aux84 #(aux0<=aux39)
BOOL aux85 #(aux3<=aux36)
BOOL aux86 #(aux2<=aux68)
**SEARCH**
PRINT[[a_MSetOccurrence_00000],[a_MSetOccurrence_00001],[a_MSetOccurrence_00002],[a_MSetOccurrence_00003],[a_MSetOccurrence_00004],[a_MSetExplicit_00000],[a_MSetExplicit_00001],[a_MSetExplicit_00002],[a_MSetExplicit_00003],[b_MSetOccurrence_00000],[b_MSetOccurrence_00001],[b_MSetOccurrence_00002],[b_MSetOccurrence_00003],[b_MSetOccurrence_00004],[c]]
VARORDER STATIC [a_MSetOccurrence_00000,a_MSetOccurrence_00001,a_MSetOccurrence_00002,a_MSetOccurrence_00003,a_MSetOccurrence_00004,a_MSetExplicit_00000,a_MSetExplicit_00001,a_MSetExplicit_00002,a_MSetExplicit_00003,b_MSetOccurrence_00000,b_MSetOccurrence_00001,b_MSetOccurrence_00002,b_MSetOccurrence_00003,b_MSetOccurrence_00004,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86]
**CONSTRAINTS**
min([aux53,aux4],aux71)
min([aux38,aux1],aux72)
min([aux40,aux0],aux73)
min([aux69,aux3],aux74)
min([aux35,aux2],aux75)
reify(watched-and({ineq(aux53, aux6, 0),ineq(aux38, aux5, 0),ineq(aux40, aux8, 0),ineq(aux69, aux7, 0),ineq(aux35, aux9, 0),ineq(aux53, aux32, 0),ineq(aux38, aux34, 0),ineq(aux40, aux33, 0),ineq(aux69, aux31, 0),ineq(aux35, aux30, 0),ineq(aux37, aux6, 0),ineq(aux70, aux5, 0),ineq(aux39, aux8, 0),ineq(aux36, aux7, 0),ineq(aux68, aux9, 0),ineq(aux37, aux32, 0),ineq(aux70, aux34, 0),ineq(aux39, aux33, 0),ineq(aux36, aux31, 0),ineq(aux68, aux30, 0)}), aux76)
reify(ineq(aux37, aux4, 0), aux77)
reify(ineq(aux70, aux1, 0), aux78)
reify(ineq(aux39, aux0, 0), aux79)
reify(ineq(aux36, aux3, 0), aux80)
reify(ineq(aux68, aux2, 0), aux81)
reify(ineq(aux4, aux37, 0), aux82)
reify(ineq(aux1, aux70, 0), aux83)
reify(ineq(aux0, aux39, 0), aux84)
reify(ineq(aux3, aux36, 0), aux85)
reify(ineq(aux2, aux68, 0), aux86)
reify(ineq(aux38, aux70, 0), aux5)
reify(ineq(aux53, aux37, 0), aux6)
reify(ineq(aux69, aux36, 0), aux7)
reify(ineq(aux40, aux39, 0), aux8)
reify(ineq(aux35, aux68, 0), aux9)
product(aux41, aux37, aux10)
product(aux43, aux39, aux11)
product(aux42, aux70, aux12)
product(aux45, aux68, aux13)
product(aux44, aux36, aux14)
product(aux54, aux37, aux15)
product(aux56, aux70, aux16)
product(aux55, aux39, aux17)
product(aux57, aux36, aux18)
product(aux58, aux68, aux19)
product(aux60, aux39, aux20)
product(aux59, aux70, aux21)
product(aux63, aux37, aux22)
product(aux62, aux68, aux23)
product(aux61, aux36, aux24)
product(aux52, aux37, aux25)
product(aux66, aux36, aux26)
product(aux67, aux68, aux27)
product(aux64, aux70, aux28)
product(aux65, aux39, aux29)
reify(ineq(aux68, aux35, 0), aux30)
reify(ineq(aux36, aux69, 0), aux31)
reify(ineq(aux37, aux53, 0), aux32)
reify(ineq(aux39, aux40, 0), aux33)
reify(ineq(aux70, aux38, 0), aux34)
reify(ineq(0, b_MSetOccurrence_00004, -1), aux35)
reify(ineq(0, a_MSetOccurrence_00003, -1), aux36)
reify(ineq(0, a_MSetOccurrence_00000, -1), aux37)
reify(ineq(0, b_MSetOccurrence_00001, -1), aux38)
reify(ineq(0, a_MSetOccurrence_00002, -1), aux39)
reify(ineq(0, b_MSetOccurrence_00002, -1), aux40)
reify(w-literal(a_MSetExplicit_00003,3), aux41)
reify(w-literal(a_MSetExplicit_00003,4), aux42)
reify(w-literal(a_MSetExplicit_00003,5), aux43)
reify(w-literal(a_MSetExplicit_00003,6), aux44)
reify(w-literal(a_MSetExplicit_00003,7), aux45)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00003), aux46)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00001), aux47)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00002), aux48)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00002), aux49)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00003), aux50)
reify(eq(a_MSetExplicit_00002,a_MSetExplicit_00003), aux51)
reify(w-literal(a_MSetExplicit_00000,3), aux52)
reify(ineq(0, b_MSetOccurrence_00000, -1), aux53)
reify(w-literal(a_MSetExplicit_00002,3), aux54)
reify(w-literal(a_MSetExplicit_00002,5), aux55)
reify(w-literal(a_MSetExplicit_00002,4), aux56)
reify(w-literal(a_MSetExplicit_00002,6), aux57)
reify(w-literal(a_MSetExplicit_00002,7), aux58)
reify(w-literal(a_MSetExplicit_00001,4), aux59)
reify(w-literal(a_MSetExplicit_00001,5), aux60)
reify(w-literal(a_MSetExplicit_00001,6), aux61)
reify(w-literal(a_MSetExplicit_00001,7), aux62)
reify(w-literal(a_MSetExplicit_00001,3), aux63)
reify(w-literal(a_MSetExplicit_00000,4), aux64)
reify(w-literal(a_MSetExplicit_00000,5), aux65)
reify(w-literal(a_MSetExplicit_00000,6), aux66)
reify(w-literal(a_MSetExplicit_00000,7), aux67)
reify(ineq(0, a_MSetOccurrence_00004, -1), aux68)
reify(ineq(0, b_MSetOccurrence_00003, -1), aux69)
reify(ineq(0, a_MSetOccurrence_00001, -1), aux70)
eq(aux76,0)
ineq(aux37, aux77, 0)
ineq(aux70, aux78, 0)
ineq(aux39, aux79, 0)
ineq(aux36, aux80, 0)
ineq(aux68, aux81, 0)
ineq(aux37, aux82, 0)
ineq(aux70, aux83, 0)
ineq(aux39, aux84, 0)
ineq(aux36, aux85, 0)
ineq(aux68, aux86, 0)
ineq(a_MSetExplicit_00000, a_MSetExplicit_00001, 0)
ineq(a_MSetExplicit_00001, a_MSetExplicit_00002, 0)
ineq(a_MSetExplicit_00002, a_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux47,aux48,aux46,aux25,aux28,aux29,aux26,aux27],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux47,aux49,aux50,aux22,aux21,aux20,aux24,aux23],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux48,aux49,aux51,aux15,aux16,aux17,aux18,aux19],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux46,aux50,aux51,aux10,aux12,aux11,aux14,aux13],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux47,aux48,aux46,aux25,aux28,aux29,aux26,aux27],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux47,aux49,aux50,aux22,aux21,aux20,aux24,aux23],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux48,aux49,aux51,aux15,aux16,aux17,aux18,aux19],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux46,aux50,aux51,aux10,aux12,aux11,aux14,aux13],0)
sumleq([aux65,aux60,aux55,aux43],aux0)
sumgeq([aux65,aux60,aux55,aux43],aux0)
sumleq([aux64,aux59,aux56,aux42],aux1)
sumgeq([aux64,aux59,aux56,aux42],aux1)
sumleq([aux67,aux62,aux58,aux45],aux2)
sumgeq([aux67,aux62,aux58,aux45],aux2)
sumleq([aux66,aux61,aux57,aux44],aux3)
sumgeq([aux66,aux61,aux57,aux44],aux3)
sumleq([aux52,aux63,aux54,aux41],aux4)
sumgeq([aux52,aux63,aux54,aux41],aux4)
sumleq([aux37,aux70,aux39,aux36,aux68],4)
sumgeq([aux37,aux70,aux39,aux36,aux68],4)
sumleq([aux53,aux38,aux40,aux69,aux35],4)
sumgeq([aux53,aux38,aux40,aux69,aux35],4)
sumleq([aux71,aux72,aux73,aux74,aux75],c)
sumgeq([aux71,aux72,aux73,aux74,aux75],c)
**EOF**
