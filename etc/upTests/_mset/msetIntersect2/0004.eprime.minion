MINION 3
# CSE_number = 128
# CSE_eliminated_expressions = 440
# CSE_total_size = 644
**VARIABLES**
DISCRETE a_MSetExplicit_00000 #
{3..7}
DISCRETE a_MSetExplicit_00001 #
{3..7}
DISCRETE a_MSetExplicit_00002 #
{3..7}
DISCRETE a_MSetExplicit_00003 #
{3..7}
DISCRETE a_MSetOccurrence_00000 #
{0..4}
DISCRETE a_MSetOccurrence_00001 #
{0..4}
DISCRETE a_MSetOccurrence_00002 #
{0..4}
DISCRETE a_MSetOccurrence_00003 #
{0..4}
DISCRETE a_MSetOccurrence_00004 #
{0..4}
DISCRETE b_MSetExplicit_00000 #
{3..7}
DISCRETE b_MSetExplicit_00001 #
{3..7}
DISCRETE b_MSetExplicit_00002 #
{3..7}
DISCRETE b_MSetExplicit_00003 #
{3..7}
DISCRETE b_MSetOccurrence_00000 #
{0..4}
DISCRETE b_MSetOccurrence_00001 #
{0..4}
DISCRETE b_MSetOccurrence_00002 #
{0..4}
DISCRETE b_MSetOccurrence_00003 #
{0..4}
DISCRETE b_MSetOccurrence_00004 #
{0..4}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3) + (b_MSetExplicit_00001=3) + (b_MSetExplicit_00002=3) + (b_MSetExplicit_00003=3))
{0..4}
DISCRETE aux1 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6) + (b_MSetExplicit_00001=6) + (b_MSetExplicit_00002=6) + (b_MSetExplicit_00003=6))
{0..4}
DISCRETE aux2 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7) + (b_MSetExplicit_00001=7) + (b_MSetExplicit_00002=7) + (b_MSetExplicit_00003=7))
{0..4}
DISCRETE aux3 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4) + (b_MSetExplicit_00001=4) + (b_MSetExplicit_00002=4) + (b_MSetExplicit_00003=4))
{0..4}
DISCRETE aux4 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5) + (b_MSetExplicit_00001=5) + (b_MSetExplicit_00002=5) + (b_MSetExplicit_00003=5))
{0..4}
DISCRETE aux5 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5) + (a_MSetExplicit_00001=5) + (a_MSetExplicit_00002=5) + (a_MSetExplicit_00003=5))
{0..4}
DISCRETE aux6 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4) + (a_MSetExplicit_00001=4) + (a_MSetExplicit_00002=4) + (a_MSetExplicit_00003=4))
{0..4}
DISCRETE aux7 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7) + (a_MSetExplicit_00001=7) + (a_MSetExplicit_00002=7) + (a_MSetExplicit_00003=7))
{0..4}
DISCRETE aux8 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6) + (a_MSetExplicit_00001=6) + (a_MSetExplicit_00002=6) + (a_MSetExplicit_00003=6))
{0..4}
DISCRETE aux9 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3) + (a_MSetExplicit_00001=3) + (a_MSetExplicit_00002=3) + (a_MSetExplicit_00003=3))
{0..4}
BOOL aux10 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6)*(0<b_MSetOccurrence_00003))
BOOL aux11 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5)*(0<b_MSetOccurrence_00002))
BOOL aux12 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4)*(0<b_MSetOccurrence_00001))
BOOL aux13 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3)*(0<b_MSetOccurrence_00000))
BOOL aux14 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=3)*(0<b_MSetOccurrence_00000))
BOOL aux15 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=6)*(0<b_MSetOccurrence_00003))
BOOL aux16 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=7)*(0<b_MSetOccurrence_00004))
BOOL aux17 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=4)*(0<b_MSetOccurrence_00001))
BOOL aux18 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=5)*(0<b_MSetOccurrence_00002))
BOOL aux19 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7)*(0<b_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=3)*(0<b_MSetOccurrence_00000))
BOOL aux21 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=4)*(0<b_MSetOccurrence_00001))
BOOL aux22 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=5)*(0<b_MSetOccurrence_00002))
BOOL aux23 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=6)*(0<b_MSetOccurrence_00003))
BOOL aux24 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=7)*(0<b_MSetOccurrence_00004))
BOOL aux25 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=3)*(0<b_MSetOccurrence_00000))
BOOL aux26 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=5)*(0<b_MSetOccurrence_00002))
BOOL aux27 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=4)*(0<b_MSetOccurrence_00001))
BOOL aux28 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=7)*(0<b_MSetOccurrence_00004))
BOOL aux29 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=6)*(0<b_MSetOccurrence_00003))
BOOL aux30 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux31 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux32 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux33 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux34 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux35 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux36 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux37 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux38 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux39 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux40 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux41 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux42 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux43 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux44 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux45 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux46 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux47 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux48 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux49 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux50 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux51 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00001)
BOOL aux52 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00001)
BOOL aux53 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00000)
BOOL aux54 #CSE: 2 occurrences of: (b_MSetExplicit_00002=5)
BOOL aux55 #CSE: 2 occurrences of: (b_MSetExplicit_00002=4)
BOOL aux56 #CSE: 2 occurrences of: (b_MSetExplicit_00002=3)
BOOL aux57 #CSE: 2 occurrences of: (b_MSetExplicit_00002=7)
BOOL aux58 #CSE: 2 occurrences of: (b_MSetExplicit_00002=6)
BOOL aux59 #CSE: 2 occurrences of: (b_MSetExplicit_00003=3)
BOOL aux60 #CSE: 2 occurrences of: (b_MSetExplicit_00003=5)
BOOL aux61 #CSE: 2 occurrences of: (b_MSetExplicit_00003=4)
BOOL aux62 #CSE: 2 occurrences of: (b_MSetExplicit_00003=7)
BOOL aux63 #CSE: 2 occurrences of: (b_MSetExplicit_00003=6)
BOOL aux64 #CSE: 2 occurrences of: (b_MSetExplicit_00000=5)
BOOL aux65 #CSE: 2 occurrences of: (b_MSetExplicit_00000=4)
BOOL aux66 #CSE: 2 occurrences of: (b_MSetExplicit_00000=7)
BOOL aux67 #CSE: 2 occurrences of: (b_MSetExplicit_00000=6)
BOOL aux68 #CSE: 2 occurrences of: (b_MSetExplicit_00000=3)
BOOL aux69 #CSE: 2 occurrences of: (b_MSetExplicit_00001=7)
BOOL aux70 #CSE: 2 occurrences of: (b_MSetExplicit_00001=4)
BOOL aux71 #CSE: 2 occurrences of: (b_MSetExplicit_00001=3)
BOOL aux72 #CSE: 2 occurrences of: (b_MSetExplicit_00001=6)
BOOL aux73 #CSE: 2 occurrences of: (b_MSetExplicit_00001=5)
BOOL aux74 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00001)
BOOL aux75 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux76 #CSE: 2 occurrences of: (a_MSetExplicit_00003=7)
BOOL aux77 #CSE: 2 occurrences of: (a_MSetExplicit_00003=6)
BOOL aux78 #CSE: 2 occurrences of: (a_MSetExplicit_00003=5)
BOOL aux79 #CSE: 2 occurrences of: (a_MSetExplicit_00003=4)
BOOL aux80 #CSE: 2 occurrences of: (a_MSetExplicit_00003=3)
BOOL aux81 #CSE: 2 occurrences of: (a_MSetExplicit_00000=7)
BOOL aux82 #CSE: 2 occurrences of: (a_MSetExplicit_00000=6)
BOOL aux83 #CSE: 2 occurrences of: (a_MSetExplicit_00000=5)
BOOL aux84 #CSE: 2 occurrences of: (a_MSetExplicit_00000=4)
BOOL aux85 #CSE: 2 occurrences of: (a_MSetExplicit_00000=3)
BOOL aux86 #CSE: 2 occurrences of: (a_MSetExplicit_00001=7)
BOOL aux87 #CSE: 2 occurrences of: (a_MSetExplicit_00001=6)
BOOL aux88 #CSE: 2 occurrences of: (a_MSetExplicit_00001=5)
BOOL aux89 #CSE: 2 occurrences of: (a_MSetExplicit_00001=4)
BOOL aux90 #CSE: 2 occurrences of: (a_MSetExplicit_00001=3)
BOOL aux91 #CSE: 2 occurrences of: (a_MSetExplicit_00002=7)
BOOL aux92 #CSE: 2 occurrences of: (a_MSetExplicit_00002=6)
BOOL aux93 #CSE: 2 occurrences of: (a_MSetExplicit_00002=5)
BOOL aux94 #CSE: 2 occurrences of: (a_MSetExplicit_00002=4)
BOOL aux95 #CSE: 2 occurrences of: (a_MSetExplicit_00002=3)
BOOL aux96 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00003)
BOOL aux97 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00003)
BOOL aux98 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00003)
BOOL aux99 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00002)
BOOL aux100 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00002)
BOOL aux101 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00004)
BOOL aux102 #CSE: 8 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux103 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00000)
BOOL aux104 #CSE: 8 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00003)
BOOL aux105 #CSE: 8 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux106 #CSE: 8 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00002)
BOOL aux107 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00004)
BOOL aux108 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00002)
BOOL aux109 #CSE: 8 occurrences of: (a_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux110 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux111 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00000)
BOOL aux112 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00001)
BOOL aux113 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux114 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux115 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00000)
BOOL aux116 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00001)
BOOL aux117 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00002)
BOOL aux118 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux119 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00000)
BOOL aux120 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux121 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux122 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux123 #CSE: 8 occurrences of: (b_MSetExplicit_00002=b_MSetExplicit_00003)
BOOL aux124 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00000)
BOOL aux125 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00001)
BOOL aux126 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00002)
BOOL aux127 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00003)
BOOL aux128 #min(aux103, aux53)
BOOL aux129 #min(aux51, aux74)
BOOL aux130 #min(aux99, aux108)
BOOL aux131 #min(aux98, aux97)
BOOL aux132 #min(aux107, aux101)
BOOL aux133 #(((-1-1*aux50-1*aux105-1*aux109 + aux122 + aux114 + aux118 + aux127)<=0) /\ ((1 + aux75 + aux102 + aux105-1*aux120-1*aux112-1*aux116-1*aux125)<=0) /\ ((-1-1*aux52-1*aux100-1*aux96 + aux119 + aux120 + aux121 + aux122)<=0) /\ ((-1-1*aux75-1*aux110-1*aux50 + aux119 + aux111 + aux115 + aux124)<=0) /\ ((1 + aux96 + aux104 + aux123-1*aux124-1*aux125-1*aux126-1*aux127)<=0) /\ ((1 + aux50 + aux105 + aux109-1*aux122-1*aux114-1*aux118-1*aux127)<=0) /\ ((-1-1*aux100-1*aux106-1*aux123 + aux115 + aux116 + aux117 + aux118)<=0) /\ ((1 + aux52 + aux100 + aux96-1*aux119-1*aux120-1*aux121-1*aux122)<=0) /\ ((-1-1*aux110-1*aux102-1*aux109 + aux121 + aux113 + aux117 + aux126)<=0) /\ ((1 + aux75 + aux110 + aux50-1*aux119-1*aux111-1*aux115-1*aux124)<=0) /\ ((1 + aux100 + aux106 + aux123-1*aux115-1*aux116-1*aux117-1*aux118)<=0) /\ ((1 + aux110 + aux102 + aux109-1*aux121-1*aux113-1*aux117-1*aux126)<=0) /\ ((-1-1*aux52-1*aux106-1*aux104 + aux111 + aux112 + aux113 + aux114)<=0) /\ ((-1-1*aux75-1*aux102-1*aux105 + aux120 + aux112 + aux116 + aux125)<=0) /\ ((-1-1*aux96-1*aux104-1*aux123 + aux124 + aux125 + aux126 + aux127)<=0) /\ ((1 + aux52 + aux106 + aux104-1*aux111-1*aux112-1*aux113-1*aux114)<=0))
BOOL aux134 #(aux103<=aux9)
BOOL aux135 #(aux51<=aux6)
BOOL aux136 #(aux99<=aux5)
BOOL aux137 #(aux98<=aux8)
BOOL aux138 #(aux107<=aux7)
BOOL aux139 #(aux9<=aux103)
BOOL aux140 #(aux6<=aux51)
BOOL aux141 #(aux5<=aux99)
BOOL aux142 #(aux8<=aux98)
BOOL aux143 #(aux7<=aux107)
BOOL aux144 #(aux53<=aux0)
BOOL aux145 #(aux74<=aux3)
BOOL aux146 #(aux108<=aux4)
BOOL aux147 #(aux97<=aux1)
BOOL aux148 #(aux101<=aux2)
BOOL aux149 #(aux0<=aux53)
BOOL aux150 #(aux3<=aux74)
BOOL aux151 #(aux4<=aux108)
BOOL aux152 #(aux1<=aux97)
BOOL aux153 #(aux2<=aux101)
**SEARCH**
PRINT[[a_MSetExplicit_00000],[a_MSetExplicit_00001],[a_MSetExplicit_00002],[a_MSetExplicit_00003],[a_MSetOccurrence_00000],[a_MSetOccurrence_00001],[a_MSetOccurrence_00002],[a_MSetOccurrence_00003],[a_MSetOccurrence_00004],[b_MSetExplicit_00000],[b_MSetExplicit_00001],[b_MSetExplicit_00002],[b_MSetExplicit_00003],[b_MSetOccurrence_00000],[b_MSetOccurrence_00001],[b_MSetOccurrence_00002],[b_MSetOccurrence_00003],[b_MSetOccurrence_00004],[c]]
VARORDER STATIC [a_MSetExplicit_00000,a_MSetExplicit_00001,a_MSetExplicit_00002,a_MSetExplicit_00003,a_MSetOccurrence_00000,a_MSetOccurrence_00001,a_MSetOccurrence_00002,a_MSetOccurrence_00003,a_MSetOccurrence_00004,b_MSetExplicit_00000,b_MSetExplicit_00001,b_MSetExplicit_00002,b_MSetExplicit_00003,b_MSetOccurrence_00000,b_MSetOccurrence_00001,b_MSetOccurrence_00002,b_MSetOccurrence_00003,b_MSetOccurrence_00004,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,aux152,aux153]
**CONSTRAINTS**
min([aux103,aux53],aux128)
min([aux51,aux74],aux129)
min([aux99,aux108],aux130)
min([aux98,aux97],aux131)
min([aux107,aux101],aux132)
reify(watched-and({weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux50,aux105,aux109,aux122,aux114,aux118,aux127],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux75,aux102,aux105,aux120,aux112,aux116,aux125],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux52,aux100,aux96,aux119,aux120,aux121,aux122],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux75,aux110,aux50,aux119,aux111,aux115,aux124],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux96,aux104,aux123,aux124,aux125,aux126,aux127],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux50,aux105,aux109,aux122,aux114,aux118,aux127],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux100,aux106,aux123,aux115,aux116,aux117,aux118],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux52,aux100,aux96,aux119,aux120,aux121,aux122],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux110,aux102,aux109,aux121,aux113,aux117,aux126],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux75,aux110,aux50,aux119,aux111,aux115,aux124],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux100,aux106,aux123,aux115,aux116,aux117,aux118],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux110,aux102,aux109,aux121,aux113,aux117,aux126],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux52,aux106,aux104,aux111,aux112,aux113,aux114],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux75,aux102,aux105,aux120,aux112,aux116,aux125],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux96,aux104,aux123,aux124,aux125,aux126,aux127],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux52,aux106,aux104,aux111,aux112,aux113,aux114],0)}), aux133)
reify(ineq(aux103, aux9, 0), aux134)
reify(ineq(aux51, aux6, 0), aux135)
reify(ineq(aux99, aux5, 0), aux136)
reify(ineq(aux98, aux8, 0), aux137)
reify(ineq(aux107, aux7, 0), aux138)
reify(ineq(aux9, aux103, 0), aux139)
reify(ineq(aux6, aux51, 0), aux140)
reify(ineq(aux5, aux99, 0), aux141)
reify(ineq(aux8, aux98, 0), aux142)
reify(ineq(aux7, aux107, 0), aux143)
reify(ineq(aux53, aux0, 0), aux144)
reify(ineq(aux74, aux3, 0), aux145)
reify(ineq(aux108, aux4, 0), aux146)
reify(ineq(aux97, aux1, 0), aux147)
reify(ineq(aux101, aux2, 0), aux148)
reify(ineq(aux0, aux53, 0), aux149)
reify(ineq(aux3, aux74, 0), aux150)
reify(ineq(aux4, aux108, 0), aux151)
reify(ineq(aux1, aux97, 0), aux152)
reify(ineq(aux2, aux101, 0), aux153)
product(aux67, aux97, aux10)
product(aux64, aux108, aux11)
product(aux65, aux74, aux12)
product(aux68, aux53, aux13)
product(aux59, aux53, aux14)
product(aux63, aux97, aux15)
product(aux62, aux101, aux16)
product(aux61, aux74, aux17)
product(aux60, aux108, aux18)
product(aux66, aux101, aux19)
product(aux71, aux53, aux20)
product(aux70, aux74, aux21)
product(aux73, aux108, aux22)
product(aux72, aux97, aux23)
product(aux69, aux101, aux24)
product(aux56, aux53, aux25)
product(aux54, aux108, aux26)
product(aux55, aux74, aux27)
product(aux57, aux101, aux28)
product(aux58, aux97, aux29)
product(aux80, aux103, aux30)
product(aux78, aux99, aux31)
product(aux79, aux51, aux32)
product(aux76, aux107, aux33)
product(aux77, aux98, aux34)
product(aux95, aux103, aux35)
product(aux94, aux51, aux36)
product(aux93, aux99, aux37)
product(aux92, aux98, aux38)
product(aux91, aux107, aux39)
product(aux88, aux99, aux40)
product(aux89, aux51, aux41)
product(aux90, aux103, aux42)
product(aux86, aux107, aux43)
product(aux87, aux98, aux44)
product(aux85, aux103, aux45)
product(aux82, aux98, aux46)
product(aux81, aux107, aux47)
product(aux84, aux51, aux48)
product(aux83, aux99, aux49)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00003), aux50)
reify(ineq(0, a_MSetOccurrence_00001, -1), aux51)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00001), aux52)
reify(ineq(0, b_MSetOccurrence_00000, -1), aux53)
reify(w-literal(b_MSetExplicit_00002,5), aux54)
reify(w-literal(b_MSetExplicit_00002,4), aux55)
reify(w-literal(b_MSetExplicit_00002,3), aux56)
reify(w-literal(b_MSetExplicit_00002,7), aux57)
reify(w-literal(b_MSetExplicit_00002,6), aux58)
reify(w-literal(b_MSetExplicit_00003,3), aux59)
reify(w-literal(b_MSetExplicit_00003,5), aux60)
reify(w-literal(b_MSetExplicit_00003,4), aux61)
reify(w-literal(b_MSetExplicit_00003,7), aux62)
reify(w-literal(b_MSetExplicit_00003,6), aux63)
reify(w-literal(b_MSetExplicit_00000,5), aux64)
reify(w-literal(b_MSetExplicit_00000,4), aux65)
reify(w-literal(b_MSetExplicit_00000,7), aux66)
reify(w-literal(b_MSetExplicit_00000,6), aux67)
reify(w-literal(b_MSetExplicit_00000,3), aux68)
reify(w-literal(b_MSetExplicit_00001,7), aux69)
reify(w-literal(b_MSetExplicit_00001,4), aux70)
reify(w-literal(b_MSetExplicit_00001,3), aux71)
reify(w-literal(b_MSetExplicit_00001,6), aux72)
reify(w-literal(b_MSetExplicit_00001,5), aux73)
reify(ineq(0, b_MSetOccurrence_00001, -1), aux74)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00001), aux75)
reify(w-literal(a_MSetExplicit_00003,7), aux76)
reify(w-literal(a_MSetExplicit_00003,6), aux77)
reify(w-literal(a_MSetExplicit_00003,5), aux78)
reify(w-literal(a_MSetExplicit_00003,4), aux79)
reify(w-literal(a_MSetExplicit_00003,3), aux80)
reify(w-literal(a_MSetExplicit_00000,7), aux81)
reify(w-literal(a_MSetExplicit_00000,6), aux82)
reify(w-literal(a_MSetExplicit_00000,5), aux83)
reify(w-literal(a_MSetExplicit_00000,4), aux84)
reify(w-literal(a_MSetExplicit_00000,3), aux85)
reify(w-literal(a_MSetExplicit_00001,7), aux86)
reify(w-literal(a_MSetExplicit_00001,6), aux87)
reify(w-literal(a_MSetExplicit_00001,5), aux88)
reify(w-literal(a_MSetExplicit_00001,4), aux89)
reify(w-literal(a_MSetExplicit_00001,3), aux90)
reify(w-literal(a_MSetExplicit_00002,7), aux91)
reify(w-literal(a_MSetExplicit_00002,6), aux92)
reify(w-literal(a_MSetExplicit_00002,5), aux93)
reify(w-literal(a_MSetExplicit_00002,4), aux94)
reify(w-literal(a_MSetExplicit_00002,3), aux95)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00003), aux96)
reify(ineq(0, b_MSetOccurrence_00003, -1), aux97)
reify(ineq(0, a_MSetOccurrence_00003, -1), aux98)
reify(ineq(0, a_MSetOccurrence_00002, -1), aux99)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00002), aux100)
reify(ineq(0, b_MSetOccurrence_00004, -1), aux101)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00002), aux102)
reify(ineq(0, a_MSetOccurrence_00000, -1), aux103)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00003), aux104)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00003), aux105)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00002), aux106)
reify(ineq(0, a_MSetOccurrence_00004, -1), aux107)
reify(ineq(0, b_MSetOccurrence_00002, -1), aux108)
reify(eq(a_MSetExplicit_00002,a_MSetExplicit_00003), aux109)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00002), aux110)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00000), aux111)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00001), aux112)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00002), aux113)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00003), aux114)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00000), aux115)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00001), aux116)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00002), aux117)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00003), aux118)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00000), aux119)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00001), aux120)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00002), aux121)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00003), aux122)
reify(eq(b_MSetExplicit_00002,b_MSetExplicit_00003), aux123)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00000), aux124)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00001), aux125)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00002), aux126)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00003), aux127)
eq(aux133,0)
ineq(aux103, aux134, 0)
ineq(aux51, aux135, 0)
ineq(aux99, aux136, 0)
ineq(aux98, aux137, 0)
ineq(aux107, aux138, 0)
ineq(aux103, aux139, 0)
ineq(aux51, aux140, 0)
ineq(aux99, aux141, 0)
ineq(aux98, aux142, 0)
ineq(aux107, aux143, 0)
ineq(aux53, aux144, 0)
ineq(aux74, aux145, 0)
ineq(aux108, aux146, 0)
ineq(aux97, aux147, 0)
ineq(aux101, aux148, 0)
ineq(aux53, aux149, 0)
ineq(aux74, aux150, 0)
ineq(aux108, aux151, 0)
ineq(aux97, aux152, 0)
ineq(aux101, aux153, 0)
ineq(a_MSetExplicit_00000, a_MSetExplicit_00001, 0)
ineq(a_MSetExplicit_00001, a_MSetExplicit_00002, 0)
ineq(a_MSetExplicit_00002, a_MSetExplicit_00003, 0)
ineq(b_MSetExplicit_00000, b_MSetExplicit_00001, 0)
ineq(b_MSetExplicit_00001, b_MSetExplicit_00002, 0)
ineq(b_MSetExplicit_00002, b_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux75,aux110,aux50,aux45,aux48,aux49,aux46,aux47],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux75,aux102,aux105,aux42,aux41,aux40,aux44,aux43],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux110,aux102,aux109,aux35,aux36,aux37,aux38,aux39],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux50,aux105,aux109,aux30,aux32,aux31,aux34,aux33],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux52,aux100,aux96,aux13,aux12,aux11,aux10,aux19],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux52,aux106,aux104,aux20,aux21,aux22,aux23,aux24],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux100,aux106,aux123,aux25,aux27,aux26,aux29,aux28],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux96,aux104,aux123,aux14,aux17,aux18,aux15,aux16],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux75,aux110,aux50,aux45,aux48,aux49,aux46,aux47],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux75,aux102,aux105,aux42,aux41,aux40,aux44,aux43],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux110,aux102,aux109,aux35,aux36,aux37,aux38,aux39],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux50,aux105,aux109,aux30,aux32,aux31,aux34,aux33],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux52,aux100,aux96,aux13,aux12,aux11,aux10,aux19],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux52,aux106,aux104,aux20,aux21,aux22,aux23,aux24],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux100,aux106,aux123,aux25,aux27,aux26,aux29,aux28],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux96,aux104,aux123,aux14,aux17,aux18,aux15,aux16],0)
sumleq([aux68,aux71,aux56,aux59],aux0)
sumgeq([aux68,aux71,aux56,aux59],aux0)
sumleq([aux67,aux72,aux58,aux63],aux1)
sumgeq([aux67,aux72,aux58,aux63],aux1)
sumleq([aux66,aux69,aux57,aux62],aux2)
sumgeq([aux66,aux69,aux57,aux62],aux2)
sumleq([aux65,aux70,aux55,aux61],aux3)
sumgeq([aux65,aux70,aux55,aux61],aux3)
sumleq([aux64,aux73,aux54,aux60],aux4)
sumgeq([aux64,aux73,aux54,aux60],aux4)
sumleq([aux83,aux88,aux93,aux78],aux5)
sumgeq([aux83,aux88,aux93,aux78],aux5)
sumleq([aux84,aux89,aux94,aux79],aux6)
sumgeq([aux84,aux89,aux94,aux79],aux6)
sumleq([aux81,aux86,aux91,aux76],aux7)
sumgeq([aux81,aux86,aux91,aux76],aux7)
sumleq([aux82,aux87,aux92,aux77],aux8)
sumgeq([aux82,aux87,aux92,aux77],aux8)
sumleq([aux85,aux90,aux95,aux80],aux9)
sumgeq([aux85,aux90,aux95,aux80],aux9)
sumleq([aux103,aux51,aux99,aux98,aux107],4)
sumgeq([aux103,aux51,aux99,aux98,aux107],4)
sumleq([aux53,aux74,aux108,aux97,aux101],4)
sumgeq([aux53,aux74,aux108,aux97,aux101],4)
sumleq([aux128,aux129,aux130,aux131,aux132],c)
sumgeq([aux128,aux129,aux130,aux131,aux132],c)
**EOF**
