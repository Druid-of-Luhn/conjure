MINION 3
# CSE_number = 81
# CSE_eliminated_expressions = 308
# CSE_total_size = 453
**VARIABLES**
DISCRETE a_MSetOccurrence_00000 #
{0..4}
DISCRETE a_MSetOccurrence_00001 #
{0..4}
DISCRETE a_MSetOccurrence_00002 #
{0..4}
DISCRETE a_MSetOccurrence_00003 #
{0..4}
DISCRETE a_MSetOccurrence_00004 #
{0..4}
DISCRETE b_MSetExplicit_00000 #
{3..7}
DISCRETE b_MSetExplicit_00001 #
{3..7}
DISCRETE b_MSetExplicit_00002 #
{3..7}
DISCRETE b_MSetExplicit_00003 #
{3..7}
DISCRETE b_MSetOccurrence_00000 #
{0..4}
DISCRETE b_MSetOccurrence_00001 #
{0..4}
DISCRETE b_MSetOccurrence_00002 #
{0..4}
DISCRETE b_MSetOccurrence_00003 #
{0..4}
DISCRETE b_MSetOccurrence_00004 #
{0..4}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 4 occurrences of: ((b_MSetExplicit_00000=3) + (b_MSetExplicit_00001=3) + (b_MSetExplicit_00002=3) + (b_MSetExplicit_00003=3))
{0..4}
DISCRETE aux1 #CSE: 4 occurrences of: ((b_MSetExplicit_00000=7) + (b_MSetExplicit_00001=7) + (b_MSetExplicit_00002=7) + (b_MSetExplicit_00003=7))
{0..4}
DISCRETE aux2 #CSE: 4 occurrences of: ((b_MSetExplicit_00000=4) + (b_MSetExplicit_00001=4) + (b_MSetExplicit_00002=4) + (b_MSetExplicit_00003=4))
{0..4}
DISCRETE aux3 #CSE: 4 occurrences of: ((b_MSetExplicit_00000=5) + (b_MSetExplicit_00001=5) + (b_MSetExplicit_00002=5) + (b_MSetExplicit_00003=5))
{0..4}
DISCRETE aux4 #CSE: 4 occurrences of: ((b_MSetExplicit_00000=6) + (b_MSetExplicit_00001=6) + (b_MSetExplicit_00002=6) + (b_MSetExplicit_00003=6))
{0..4}
BOOL aux5 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6)*(0<b_MSetOccurrence_00003))
BOOL aux6 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5)*(0<b_MSetOccurrence_00002))
BOOL aux7 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4)*(0<b_MSetOccurrence_00001))
BOOL aux8 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3)*(0<b_MSetOccurrence_00000))
BOOL aux9 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=3)*(0<b_MSetOccurrence_00000))
BOOL aux10 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=6)*(0<b_MSetOccurrence_00003))
BOOL aux11 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=7)*(0<b_MSetOccurrence_00004))
BOOL aux12 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=4)*(0<b_MSetOccurrence_00001))
BOOL aux13 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=5)*(0<b_MSetOccurrence_00002))
BOOL aux14 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7)*(0<b_MSetOccurrence_00004))
BOOL aux15 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=3)*(0<b_MSetOccurrence_00000))
BOOL aux16 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=4)*(0<b_MSetOccurrence_00001))
BOOL aux17 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=5)*(0<b_MSetOccurrence_00002))
BOOL aux18 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=6)*(0<b_MSetOccurrence_00003))
BOOL aux19 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=7)*(0<b_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=3)*(0<b_MSetOccurrence_00000))
BOOL aux21 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=5)*(0<b_MSetOccurrence_00002))
BOOL aux22 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=4)*(0<b_MSetOccurrence_00001))
BOOL aux23 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=7)*(0<b_MSetOccurrence_00004))
BOOL aux24 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=6)*(0<b_MSetOccurrence_00003))
BOOL aux25 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux26 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux27 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux28 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux29 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux30 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux31 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux32 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux33 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux34 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux35 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux36 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux37 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux38 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux39 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux40 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux41 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux42 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux43 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux44 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux45 #CSE: 3 occurrences of: (b_MSetExplicit_00002=4)
BOOL aux46 #CSE: 3 occurrences of: (b_MSetExplicit_00000=3)
BOOL aux47 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00001)
BOOL aux48 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00001)
BOOL aux49 #CSE: 3 occurrences of: (b_MSetExplicit_00003=7)
BOOL aux50 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00000)
BOOL aux51 #CSE: 3 occurrences of: (b_MSetExplicit_00001=6)
BOOL aux52 #CSE: 3 occurrences of: (b_MSetExplicit_00002=6)
BOOL aux53 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00001)
BOOL aux54 #CSE: 3 occurrences of: (b_MSetExplicit_00000=5)
BOOL aux55 #CSE: 3 occurrences of: (b_MSetExplicit_00003=4)
BOOL aux56 #CSE: 3 occurrences of: (b_MSetExplicit_00001=3)
BOOL aux57 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00003)
BOOL aux58 #CSE: 3 occurrences of: (b_MSetExplicit_00002=3)
BOOL aux59 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00003)
BOOL aux60 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00003)
BOOL aux61 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00002)
BOOL aux62 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00002)
BOOL aux63 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00004)
BOOL aux64 #CSE: 3 occurrences of: (b_MSetExplicit_00000=7)
BOOL aux65 #CSE: 3 occurrences of: (b_MSetExplicit_00003=6)
BOOL aux66 #CSE: 3 occurrences of: (b_MSetExplicit_00001=5)
BOOL aux67 #CSE: 3 occurrences of: (b_MSetExplicit_00002=5)
BOOL aux68 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00000)
BOOL aux69 #CSE: 3 occurrences of: (b_MSetExplicit_00000=4)
BOOL aux70 #CSE: 3 occurrences of: (b_MSetExplicit_00003=3)
BOOL aux71 #CSE: 8 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00003)
BOOL aux72 #CSE: 8 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00002)
BOOL aux73 #CSE: 3 occurrences of: (b_MSetExplicit_00001=7)
BOOL aux74 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00004)
BOOL aux75 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00002)
BOOL aux76 #CSE: 3 occurrences of: (b_MSetExplicit_00002=7)
BOOL aux77 #CSE: 3 occurrences of: (b_MSetExplicit_00000=6)
BOOL aux78 #CSE: 3 occurrences of: (b_MSetExplicit_00003=5)
BOOL aux79 #CSE: 8 occurrences of: (b_MSetExplicit_00002=b_MSetExplicit_00003)
BOOL aux80 #CSE: 3 occurrences of: (b_MSetExplicit_00001=4)
BOOL aux81 #min(aux68, aux50)
BOOL aux82 #min(aux47, aux53)
BOOL aux83 #min(aux61, aux75)
BOOL aux84 #min(aux60, aux59)
BOOL aux85 #min(aux74, aux63)
BOOL aux86 #(aux0<=aux68)
BOOL aux87 #(aux2<=aux47)
BOOL aux88 #(aux3<=aux61)
BOOL aux89 #(aux4<=aux60)
BOOL aux90 #(aux1<=aux74)
BOOL aux91 #(aux68<=aux0)
BOOL aux92 #(aux47<=aux2)
BOOL aux93 #(aux61<=aux3)
BOOL aux94 #(aux60<=aux4)
BOOL aux95 #(aux74<=aux1)
BOOL aux96 #((aux68 -> aux86) /\ (aux47 -> aux87) /\ (aux61 -> aux88) /\ (aux60 -> aux89) /\ (aux74 -> aux90) /\ ((aux25 + aux26 + aux28 + aux29 + aux27-1-1*aux48-1*aux72-1*aux71)<=0) /\ ((-1*aux25-1*aux26-1*aux28-1*aux29-1*aux27 + 1 + aux48 + aux72 + aux71)<=0) /\ ((aux43 + aux44 + aux40 + aux41 + aux42-1-1*aux57-1*aux71-1*aux79)<=0) /\ ((-1*aux43-1*aux44-1*aux40-1*aux41-1*aux42 + 1 + aux57 + aux71 + aux79)<=0) /\ ((aux36 + aux35 + aux38 + aux37 + aux39-1-1*aux48-1*aux62-1*aux57)<=0) /\ ((-1*aux36-1*aux35-1*aux38-1*aux37-1*aux39 + 1 + aux48 + aux62 + aux57)<=0) /\ ((aux33 + aux32 + aux31 + aux30 + aux34-1-1*aux62-1*aux72-1*aux79)<=0) /\ ((-1*aux33-1*aux32-1*aux31-1*aux30-1*aux34 + 1 + aux62 + aux72 + aux79)<=0) /\ (aux68 -> aux91) /\ (aux47 -> aux92) /\ (aux61 -> aux93) /\ (aux60 -> aux94) /\ (aux74 -> aux95))
BOOL aux97 #(aux50<=aux0)
BOOL aux98 #(aux53<=aux2)
BOOL aux99 #(aux75<=aux3)
BOOL aux100 #(aux59<=aux4)
BOOL aux101 #(aux63<=aux1)
BOOL aux102 #(aux0<=aux50)
BOOL aux103 #(aux2<=aux53)
BOOL aux104 #(aux3<=aux75)
BOOL aux105 #(aux4<=aux59)
BOOL aux106 #(aux1<=aux63)
**SEARCH**
PRINT[[a_MSetOccurrence_00000],[a_MSetOccurrence_00001],[a_MSetOccurrence_00002],[a_MSetOccurrence_00003],[a_MSetOccurrence_00004],[b_MSetExplicit_00000],[b_MSetExplicit_00001],[b_MSetExplicit_00002],[b_MSetExplicit_00003],[b_MSetOccurrence_00000],[b_MSetOccurrence_00001],[b_MSetOccurrence_00002],[b_MSetOccurrence_00003],[b_MSetOccurrence_00004],[c]]
VARORDER STATIC [a_MSetOccurrence_00000,a_MSetOccurrence_00001,a_MSetOccurrence_00002,a_MSetOccurrence_00003,a_MSetOccurrence_00004,b_MSetExplicit_00000,b_MSetExplicit_00001,b_MSetExplicit_00002,b_MSetExplicit_00003,b_MSetOccurrence_00000,b_MSetOccurrence_00001,b_MSetOccurrence_00002,b_MSetOccurrence_00003,b_MSetOccurrence_00004,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106]
**CONSTRAINTS**
min([aux68,aux50],aux81)
min([aux47,aux53],aux82)
min([aux61,aux75],aux83)
min([aux60,aux59],aux84)
min([aux74,aux63],aux85)
reify(ineq(aux0, aux68, 0), aux86)
reify(ineq(aux2, aux47, 0), aux87)
reify(ineq(aux3, aux61, 0), aux88)
reify(ineq(aux4, aux60, 0), aux89)
reify(ineq(aux1, aux74, 0), aux90)
reify(ineq(aux68, aux0, 0), aux91)
reify(ineq(aux47, aux2, 0), aux92)
reify(ineq(aux61, aux3, 0), aux93)
reify(ineq(aux60, aux4, 0), aux94)
reify(ineq(aux74, aux1, 0), aux95)
reify(watched-and({ineq(aux68, aux86, 0),ineq(aux47, aux87, 0),ineq(aux61, aux88, 0),ineq(aux60, aux89, 0),ineq(aux74, aux90, 0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux25,aux26,aux28,aux29,aux27,-1,aux48,aux72,aux71],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux25,aux26,aux28,aux29,aux27,1,aux48,aux72,aux71],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux43,aux44,aux40,aux41,aux42,-1,aux57,aux71,aux79],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux43,aux44,aux40,aux41,aux42,1,aux57,aux71,aux79],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux36,aux35,aux38,aux37,aux39,-1,aux48,aux62,aux57],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux36,aux35,aux38,aux37,aux39,1,aux48,aux62,aux57],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux33,aux32,aux31,aux30,aux34,-1,aux62,aux72,aux79],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux33,aux32,aux31,aux30,aux34,1,aux62,aux72,aux79],0),ineq(aux68, aux91, 0),ineq(aux47, aux92, 0),ineq(aux61, aux93, 0),ineq(aux60, aux94, 0),ineq(aux74, aux95, 0)}), aux96)
reify(ineq(aux50, aux0, 0), aux97)
reify(ineq(aux53, aux2, 0), aux98)
reify(ineq(aux75, aux3, 0), aux99)
reify(ineq(aux59, aux4, 0), aux100)
reify(ineq(aux63, aux1, 0), aux101)
reify(ineq(aux0, aux50, 0), aux102)
reify(ineq(aux2, aux53, 0), aux103)
reify(ineq(aux3, aux75, 0), aux104)
reify(ineq(aux4, aux59, 0), aux105)
reify(ineq(aux1, aux63, 0), aux106)
product(aux77, aux59, aux5)
product(aux54, aux75, aux6)
product(aux69, aux53, aux7)
product(aux46, aux50, aux8)
product(aux70, aux50, aux9)
product(aux65, aux59, aux10)
product(aux49, aux63, aux11)
product(aux55, aux53, aux12)
product(aux78, aux75, aux13)
product(aux64, aux63, aux14)
product(aux56, aux50, aux15)
product(aux80, aux53, aux16)
product(aux66, aux75, aux17)
product(aux51, aux59, aux18)
product(aux73, aux63, aux19)
product(aux58, aux50, aux20)
product(aux67, aux75, aux21)
product(aux45, aux53, aux22)
product(aux76, aux63, aux23)
product(aux52, aux59, aux24)
product(aux56, aux68, aux25)
product(aux80, aux47, aux26)
product(aux73, aux74, aux27)
product(aux66, aux61, aux28)
product(aux51, aux60, aux29)
product(aux52, aux60, aux30)
product(aux67, aux61, aux31)
product(aux45, aux47, aux32)
product(aux58, aux68, aux33)
product(aux76, aux74, aux34)
product(aux69, aux47, aux35)
product(aux46, aux68, aux36)
product(aux77, aux60, aux37)
product(aux54, aux61, aux38)
product(aux64, aux74, aux39)
product(aux78, aux61, aux40)
product(aux65, aux60, aux41)
product(aux49, aux74, aux42)
product(aux70, aux68, aux43)
product(aux55, aux47, aux44)
reify(w-literal(b_MSetExplicit_00002,4), aux45)
reify(w-literal(b_MSetExplicit_00000,3), aux46)
reify(ineq(0, a_MSetOccurrence_00001, -1), aux47)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00001), aux48)
reify(w-literal(b_MSetExplicit_00003,7), aux49)
reify(ineq(0, b_MSetOccurrence_00000, -1), aux50)
reify(w-literal(b_MSetExplicit_00001,6), aux51)
reify(w-literal(b_MSetExplicit_00002,6), aux52)
reify(ineq(0, b_MSetOccurrence_00001, -1), aux53)
reify(w-literal(b_MSetExplicit_00000,5), aux54)
reify(w-literal(b_MSetExplicit_00003,4), aux55)
reify(w-literal(b_MSetExplicit_00001,3), aux56)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00003), aux57)
reify(w-literal(b_MSetExplicit_00002,3), aux58)
reify(ineq(0, b_MSetOccurrence_00003, -1), aux59)
reify(ineq(0, a_MSetOccurrence_00003, -1), aux60)
reify(ineq(0, a_MSetOccurrence_00002, -1), aux61)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00002), aux62)
reify(ineq(0, b_MSetOccurrence_00004, -1), aux63)
reify(w-literal(b_MSetExplicit_00000,7), aux64)
reify(w-literal(b_MSetExplicit_00003,6), aux65)
reify(w-literal(b_MSetExplicit_00001,5), aux66)
reify(w-literal(b_MSetExplicit_00002,5), aux67)
reify(ineq(0, a_MSetOccurrence_00000, -1), aux68)
reify(w-literal(b_MSetExplicit_00000,4), aux69)
reify(w-literal(b_MSetExplicit_00003,3), aux70)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00003), aux71)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00002), aux72)
reify(w-literal(b_MSetExplicit_00001,7), aux73)
reify(ineq(0, a_MSetOccurrence_00004, -1), aux74)
reify(ineq(0, b_MSetOccurrence_00002, -1), aux75)
reify(w-literal(b_MSetExplicit_00002,7), aux76)
reify(w-literal(b_MSetExplicit_00000,6), aux77)
reify(w-literal(b_MSetExplicit_00003,5), aux78)
reify(eq(b_MSetExplicit_00002,b_MSetExplicit_00003), aux79)
reify(w-literal(b_MSetExplicit_00001,4), aux80)
eq(aux96,0)
ineq(aux50, aux97, 0)
ineq(aux53, aux98, 0)
ineq(aux75, aux99, 0)
ineq(aux59, aux100, 0)
ineq(aux63, aux101, 0)
ineq(aux50, aux102, 0)
ineq(aux53, aux103, 0)
ineq(aux75, aux104, 0)
ineq(aux59, aux105, 0)
ineq(aux63, aux106, 0)
ineq(b_MSetExplicit_00000, b_MSetExplicit_00001, 0)
ineq(b_MSetExplicit_00001, b_MSetExplicit_00002, 0)
ineq(b_MSetExplicit_00002, b_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux48,aux62,aux57,aux8,aux7,aux6,aux5,aux14],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux48,aux72,aux71,aux15,aux16,aux17,aux18,aux19],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux62,aux72,aux79,aux20,aux22,aux21,aux24,aux23],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux57,aux71,aux79,aux9,aux12,aux13,aux10,aux11],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux48,aux62,aux57,aux8,aux7,aux6,aux5,aux14],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux48,aux72,aux71,aux15,aux16,aux17,aux18,aux19],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux62,aux72,aux79,aux20,aux22,aux21,aux24,aux23],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux57,aux71,aux79,aux9,aux12,aux13,aux10,aux11],0)
sumleq([aux46,aux56,aux58,aux70],aux0)
sumgeq([aux46,aux56,aux58,aux70],aux0)
sumleq([aux64,aux73,aux76,aux49],aux1)
sumgeq([aux64,aux73,aux76,aux49],aux1)
sumleq([aux69,aux80,aux45,aux55],aux2)
sumgeq([aux69,aux80,aux45,aux55],aux2)
sumleq([aux54,aux66,aux67,aux78],aux3)
sumgeq([aux54,aux66,aux67,aux78],aux3)
sumleq([aux77,aux51,aux52,aux65],aux4)
sumgeq([aux77,aux51,aux52,aux65],aux4)
sumleq([aux68,aux47,aux61,aux60,aux74],4)
sumgeq([aux68,aux47,aux61,aux60,aux74],4)
sumleq([aux50,aux53,aux75,aux59,aux63],4)
sumgeq([aux50,aux53,aux75,aux59,aux63],4)
sumleq([aux81,aux82,aux83,aux84,aux85],c)
sumgeq([aux81,aux82,aux83,aux84,aux85],c)
**EOF**
