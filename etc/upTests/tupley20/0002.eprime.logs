[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1..2), int(3)] of ((set (size 1) of int(1, 2),
                                                                 set (size 1) of int(4, 5)),
                                                                set of int(8, 9))
[matrixToTuple] pain∑2
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1..2), int(3)] of (set (size 1) of int(1, 2),
                                                                set (size 1) of int(4, 5))
[matrixToTuple] pain_tuple1∑2
[representation] find pain_tuple1_tuple1:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple1_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set of int(8, 9)
                 (#2)
                 Set~ExplicitVarSize, Set~Occurrence
[configuration] pain_tuple1_tuple1§region1#Set~Occurrence pain_tuple2§region6#Set~ExplicitVarSize pain_tuple1_tuple2§region2#Set~Explicit pain_tuple1_tuple2§region4#Set~Explicit pain_tuple1_tuple1§region3#Set~Explicit pain_tuple2§region5#Set~ExplicitVarSize
[addedDecl] find pain_tuple2_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2), int(3), int(1..2)] of (bool, int(8, 9))
[addedDecl] find pain_tuple1_tuple2_Set~Explicit:
                    matrix indexed by [int(1..2), int(3), int(1..1)] of int(4, 5)
[addedDecl] find pain_tuple1_tuple1_Set~Explicit:
                    matrix indexed by [int(1..2), int(3), int(1..1)] of int(1, 2)
[addedDecl] find pain_tuple1_tuple1_Set~Occurrence:
                    matrix indexed by [int(1..2), int(3), int(1, 2)] of bool
[refn] 0
[applied] pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] = {2}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] subsetEq {2}
              /\
              pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] supsetEq {2}
[applied] pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] subsetEq {2}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__28 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] . v__28 in {2})
[applied] v__28 in {2}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              2 = v__28
[applied] (forAll v__28 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
               . 2 = v__28)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__30 : int(1, 2)
                   , pain_tuple1_tuple1_Set~Occurrence§region1[1, 3, v__30]
                   . 2 = v__30)
[applied] pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] supsetEq {2}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {2} subsetEq pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
[applied] {2} subsetEq pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              2 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
[applied] 2 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple1_tuple1_Set~Occurrence§region1[1, 3, 2] = true
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] = {5}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region2#Set~Explicit[1, 3] subsetEq {5}
              /\
              pain_tuple1_tuple2§region2#Set~Explicit[1, 3] supsetEq {5}
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] subsetEq {5}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__32 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3] . v__32 in {5})
[applied] v__32 in {5}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__32
[applied] (forAll v__32 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
               . 5 = v__32)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              5 = pain_tuple1_tuple2_Set~Explicit§region2[1, 3, 1]
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] supsetEq {5}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
[applied] {5} subsetEq pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              5 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
[applied] 5 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__36 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3] . v__36 = 5)
[applied] (exists v__36 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
               . v__36 = 5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple2_Set~Explicit§region2[1, 3, 1] = 5
[applied] pain_tuple1_tuple1§region3#Set~Explicit[2, 3] = {1}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region3#Set~Explicit[2, 3] subsetEq {1}
              /\
              pain_tuple1_tuple1§region3#Set~Explicit[2, 3] supsetEq {1}
[applied] pain_tuple1_tuple1§region3#Set~Explicit[2, 3] subsetEq {1}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__38 in pain_tuple1_tuple1§region3#Set~Explicit[2, 3] . v__38 in {1})
[applied] v__38 in {1}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              1 = v__38
[applied] (forAll v__38 in pain_tuple1_tuple1§region3#Set~Explicit[2, 3]
               . 1 = v__38)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              1 = pain_tuple1_tuple1_Set~Explicit§region3[2, 3, 1]
[applied] pain_tuple1_tuple1§region3#Set~Explicit[2, 3] supsetEq {1}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {1} subsetEq pain_tuple1_tuple1§region3#Set~Explicit[2, 3]
[applied] {1} subsetEq pain_tuple1_tuple1§region3#Set~Explicit[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              1 in pain_tuple1_tuple1§region3#Set~Explicit[2, 3]
[applied] 1 in pain_tuple1_tuple1§region3#Set~Explicit[2, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__42 in pain_tuple1_tuple1§region3#Set~Explicit[2, 3] . v__42 = 1)
[applied] (exists v__42 in pain_tuple1_tuple1§region3#Set~Explicit[2, 3]
               . v__42 = 1)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple1_Set~Explicit§region3[2, 3, 1] = 1
[applied] pain_tuple1_tuple2§region4#Set~Explicit[2, 3] = {4}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region4#Set~Explicit[2, 3] subsetEq {4}
              /\
              pain_tuple1_tuple2§region4#Set~Explicit[2, 3] supsetEq {4}
[applied] pain_tuple1_tuple2§region4#Set~Explicit[2, 3] subsetEq {4}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__44 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3] . v__44 in {4})
[applied] v__44 in {4}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              4 = v__44
[applied] (forAll v__44 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
               . 4 = v__44)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              4 = pain_tuple1_tuple2_Set~Explicit§region4[2, 3, 1]
[applied] pain_tuple1_tuple2§region4#Set~Explicit[2, 3] supsetEq {4}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {4} subsetEq pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
[applied] {4} subsetEq pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              4 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
[applied] 4 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__48 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3] . v__48 = 4)
[applied] (exists v__48 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
               . v__48 = 4)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple2_Set~Explicit§region4[2, 3, 1] = 4
[applied] pain_tuple2§region5#Set~ExplicitVarSize[1, 3] = {8}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region5#Set~ExplicitVarSize[1, 3] subsetEq {8}
              /\
              pain_tuple2§region5#Set~ExplicitVarSize[1, 3] supsetEq {8}
[applied] pain_tuple2§region5#Set~ExplicitVarSize[1, 3] subsetEq {8}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__50 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3] . v__50 in {8})
[applied] v__50 in {8}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              8 = v__50
[applied] (forAll v__50 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
               . 8 = v__50)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__52 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__52, 1]
                   . 8 = pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__52, 2])
[applied] pain_tuple2§region5#Set~ExplicitVarSize[1, 3] supsetEq {8}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {8} subsetEq pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
[applied] {8} subsetEq pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              8 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
[applied] 8 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__54 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3] . v__54 = 8)
[applied] (exists v__54 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
               . v__54 = 8)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__55 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__55, 1]
                   . pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__55, 2] = 8)
[applied] pain_tuple2§region6#Set~ExplicitVarSize[2, 3] = {9}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region6#Set~ExplicitVarSize[2, 3] subsetEq {9}
              /\
              pain_tuple2§region6#Set~ExplicitVarSize[2, 3] supsetEq {9}
[applied] pain_tuple2§region6#Set~ExplicitVarSize[2, 3] subsetEq {9}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__56 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3] . v__56 in {9})
[applied] v__56 in {9}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              9 = v__56
[applied] (forAll v__56 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
               . 9 = v__56)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__58 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__58, 1]
                   . 9 = pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__58, 2])
[applied] pain_tuple2§region6#Set~ExplicitVarSize[2, 3] supsetEq {9}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
[applied] {9} subsetEq pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              9 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
[applied] 9 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__60 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3] . v__60 = 9)
[applied] (exists v__60 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
               . v__60 = 9)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__61 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__61, 1]
                   . pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__61, 2] = 9)
[applied] pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
          =
          pain_tuple1_tuple1#Set~Occurrence[v__26, v__27]
          {rules/refns/horizontal/set-eq-better.rule}
              (forAll v__62 : int(1, 2)
                   . v__62 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
                     <->
                     v__62 in pain_tuple1_tuple1#Set~Occurrence[v__26, v__27])
              /\
              (forAll v__62 : int(1, 2)
                   . v__62 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
                     <->
                     v__62 in pain_tuple1_tuple1#Set~Occurrence[v__26, v__27])
[applied] v__62 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__63 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27] . v__63 = v__62)
[applied] (exists v__63 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
               . v__63 = v__62)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple1_Set~Explicit[v__26, v__27, 1] = v__62
[applied] v__62 in pain_tuple1_tuple1#Set~Occurrence[v__26, v__27]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple1_tuple1_Set~Occurrence[v__26, v__27, v__62] = true
[applied] v__62 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__65 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27] . v__65 = v__62)
[applied] (exists v__65 in pain_tuple1_tuple1#Set~Explicit[v__26, v__27]
               . v__65 = v__62)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple1_Set~Explicit[v__26, v__27, 1] = v__62
[applied] pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 1, 2]
          .<
          pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 1, 2]
              <
              pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 2, 2]
[applied] pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 1, 2]
          .<
          pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 1, 2]
              <
              pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 2, 2]
[removeRefinedDecl] find pain_tuple1_tuple1:
                            matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
[removeRefinedDecl] find pain_tuple1_tuple2:
                            matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
[removeRefinedDecl] find pain_tuple2:
                            matrix indexed by [int(1..2), int(3)] of set of int(8, 9)
[removedDecl] find pain_tuple2_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2), int(3), int(1..2)] of (bool, int(8, 9))
[matrixToTuple] pain_tuple2_Set~ExplicitVarSize∑3
[repr] 1