[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1..2), int(3)] of ((set (size 1) of int(1, 2),
                                                                 set (size 1) of int(4, 5)),
                                                                set of int(8, 9))
[matrixToTuple] pain∑2
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1..2), int(3)] of (set (size 1) of int(1, 2),
                                                                set (size 1) of int(4, 5))
[matrixToTuple] pain_tuple1∑2
[representation] find pain_tuple1_tuple1:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple1_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set of int(8, 9)
                 (#2)
                 Set~ExplicitVarSize, Set~Occurrence
[configuration] pain_tuple1_tuple1§region1#Set~Occurrence pain_tuple2§region6#Set~ExplicitVarSize pain_tuple1_tuple2§region2#Set~Explicit pain_tuple1_tuple2§region4#Set~Explicit pain_tuple1_tuple1§region3#Set~Occurrence pain_tuple2§region5#Set~ExplicitVarSize
[addedDecl] find pain_tuple2_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2), int(3), int(1..2)] of (bool, int(8, 9))
[addedDecl] find pain_tuple1_tuple2_Set~Explicit:
                    matrix indexed by [int(1..2), int(3), int(1..1)] of int(4, 5)
[addedDecl] find pain_tuple1_tuple1_Set~Occurrence:
                    matrix indexed by [int(1..2), int(3), int(1, 2)] of bool
[refn] 0
[applied] pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] = {2}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] subsetEq {2}
              /\
              pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] supsetEq {2}
[applied] pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] subsetEq {2}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__26 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] . v__26 in {2})
[applied] v__26 in {2}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              2 = v__26
[applied] (forAll v__26 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
               . 2 = v__26)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__28 : int(1, 2)
                   , pain_tuple1_tuple1_Set~Occurrence§region1[1, 3, v__28]
                   . 2 = v__28)
[applied] pain_tuple1_tuple1§region1#Set~Occurrence[1, 3] supsetEq {2}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {2} subsetEq pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
[applied] {2} subsetEq pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              2 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
[applied] 2 in pain_tuple1_tuple1§region1#Set~Occurrence[1, 3]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple1_tuple1_Set~Occurrence§region1[1, 3, 2] = true
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] = {5}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region2#Set~Explicit[1, 3] subsetEq {5}
              /\
              pain_tuple1_tuple2§region2#Set~Explicit[1, 3] supsetEq {5}
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] subsetEq {5}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__30 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3] . v__30 in {5})
[applied] v__30 in {5}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__30
[applied] (forAll v__30 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
               . 5 = v__30)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              5 = pain_tuple1_tuple2_Set~Explicit§region2[1, 3, 1]
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] supsetEq {5}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
[applied] {5} subsetEq pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              5 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
[applied] 5 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__34 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3] . v__34 = 5)
[applied] (exists v__34 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
               . v__34 = 5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple2_Set~Explicit§region2[1, 3, 1] = 5
[applied] pain_tuple1_tuple1§region3#Set~Occurrence[2, 3] = {1}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region3#Set~Occurrence[2, 3] subsetEq {1}
              /\
              pain_tuple1_tuple1§region3#Set~Occurrence[2, 3] supsetEq {1}
[applied] pain_tuple1_tuple1§region3#Set~Occurrence[2, 3] subsetEq {1}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__36 in pain_tuple1_tuple1§region3#Set~Occurrence[2, 3] . v__36 in {1})
[applied] v__36 in {1}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              1 = v__36
[applied] (forAll v__36 in pain_tuple1_tuple1§region3#Set~Occurrence[2, 3]
               . 1 = v__36)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__38 : int(1, 2)
                   , pain_tuple1_tuple1_Set~Occurrence§region3[2, 3, v__38]
                   . 1 = v__38)
[applied] pain_tuple1_tuple1§region3#Set~Occurrence[2, 3] supsetEq {1}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {1} subsetEq pain_tuple1_tuple1§region3#Set~Occurrence[2, 3]
[applied] {1} subsetEq pain_tuple1_tuple1§region3#Set~Occurrence[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              1 in pain_tuple1_tuple1§region3#Set~Occurrence[2, 3]
[applied] 1 in pain_tuple1_tuple1§region3#Set~Occurrence[2, 3]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple1_tuple1_Set~Occurrence§region3[2, 3, 1] = true
[applied] pain_tuple1_tuple2§region4#Set~Explicit[2, 3] = {4}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region4#Set~Explicit[2, 3] subsetEq {4}
              /\
              pain_tuple1_tuple2§region4#Set~Explicit[2, 3] supsetEq {4}
[applied] pain_tuple1_tuple2§region4#Set~Explicit[2, 3] subsetEq {4}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__40 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3] . v__40 in {4})
[applied] v__40 in {4}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              4 = v__40
[applied] (forAll v__40 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
               . 4 = v__40)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              4 = pain_tuple1_tuple2_Set~Explicit§region4[2, 3, 1]
[applied] pain_tuple1_tuple2§region4#Set~Explicit[2, 3] supsetEq {4}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {4} subsetEq pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
[applied] {4} subsetEq pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              4 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
[applied] 4 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__44 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3] . v__44 = 4)
[applied] (exists v__44 in pain_tuple1_tuple2§region4#Set~Explicit[2, 3]
               . v__44 = 4)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple2_Set~Explicit§region4[2, 3, 1] = 4
[applied] pain_tuple2§region5#Set~ExplicitVarSize[1, 3] = {8}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region5#Set~ExplicitVarSize[1, 3] subsetEq {8}
              /\
              pain_tuple2§region5#Set~ExplicitVarSize[1, 3] supsetEq {8}
[applied] pain_tuple2§region5#Set~ExplicitVarSize[1, 3] subsetEq {8}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__46 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3] . v__46 in {8})
[applied] v__46 in {8}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              8 = v__46
[applied] (forAll v__46 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
               . 8 = v__46)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__48 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__48, 1]
                   . 8 = pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__48, 2])
[applied] pain_tuple2§region5#Set~ExplicitVarSize[1, 3] supsetEq {8}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {8} subsetEq pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
[applied] {8} subsetEq pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              8 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
[applied] 8 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__50 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3] . v__50 = 8)
[applied] (exists v__50 in pain_tuple2§region5#Set~ExplicitVarSize[1, 3]
               . v__50 = 8)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__51 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__51, 1]
                   . pain_tuple2_Set~ExplicitVarSize§region5[1, 3, v__51, 2] = 8)
[applied] pain_tuple2§region6#Set~ExplicitVarSize[2, 3] = {9}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region6#Set~ExplicitVarSize[2, 3] subsetEq {9}
              /\
              pain_tuple2§region6#Set~ExplicitVarSize[2, 3] supsetEq {9}
[applied] pain_tuple2§region6#Set~ExplicitVarSize[2, 3] subsetEq {9}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__52 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3] . v__52 in {9})
[applied] v__52 in {9}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              9 = v__52
[applied] (forAll v__52 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
               . 9 = v__52)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__54 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__54, 1]
                   . 9 = pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__54, 2])
[applied] pain_tuple2§region6#Set~ExplicitVarSize[2, 3] supsetEq {9}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
[applied] {9} subsetEq pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              9 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
[applied] 9 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__56 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3] . v__56 = 9)
[applied] (exists v__56 in pain_tuple2§region6#Set~ExplicitVarSize[2, 3]
               . v__56 = 9)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__57 : int(1..2)
                   , pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__57, 1]
                   . pain_tuple2_Set~ExplicitVarSize§region6[2, 3, v__57, 2] = 9)
[applied] pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 1, 2]
          .<
          pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 1, 2]
              <
              pain_tuple2_Set~ExplicitVarSize§region6[v__23, v__25, 2, 2]
[applied] pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 1, 2]
          .<
          pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 1, 2]
              <
              pain_tuple2_Set~ExplicitVarSize§region5[v__23, v__25, 2, 2]
[removeRefinedDecl] find pain_tuple1_tuple1:
                            matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
[removeRefinedDecl] find pain_tuple1_tuple2:
                            matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
[removeRefinedDecl] find pain_tuple2:
                            matrix indexed by [int(1..2), int(3)] of set of int(8, 9)
[removedDecl] find pain_tuple2_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2), int(3), int(1..2)] of (bool, int(8, 9))
[matrixToTuple] pain_tuple2_Set~ExplicitVarSize∑3
[repr] 1