[useChannelling] True
[representation] find x: set (size 5) of int(4..9)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find y: set (size 3) of int(3..7)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] y§region2#Set~Explicit x§region3#Set~Occurrence x§region1#Set~Occurrence
[addedDecl] find x_Set~Occurrence: matrix indexed by [int(4..9)] of bool
[addedDecl] find y_Set~Explicit: matrix indexed by [int(1..3)] of int(3..7)
[refn] 0
[applied] 4 in x§region1#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              x_Set~Occurrence§region1[4] = true
[applied] y§region2#Set~Explicit subsetEq x§region3#Set~Occurrence
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__5 in y§region2#Set~Explicit . v__5 in x§region3#Set~Occurrence)
[applied] v__5 in x§region3#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              x_Set~Occurrence§region3[v__5] = true
[applied] (forAll v__5 in y§region2#Set~Explicit
               . x_Set~Occurrence§region3[v__5] = true)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__6 : int(1..3)
                   . x_Set~Occurrence§region3[y_Set~Explicit§region2[v__6]] = true)
[applied] y_Set~Explicit§region2[v__3] .< y_Set~Explicit§region2[v__3 + 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              y_Set~Explicit§region2[v__3] < y_Set~Explicit§region2[v__3 + 1]
[removeRefinedDecl] find x: set (size 5) of int(4..9)
[removeRefinedDecl] find y: set (size 3) of int(3..7)
[repr] 1