language ESSENCE' 1.0

find x_SetExplicit_tuple1: matrix indexed by [int(1..2)] of int(2, 3)
find x_SetExplicit_tuple2: matrix indexed by [int(1..2)] of int(4, 5)
find x_SetExplicit_tuple3: matrix indexed by [int(1..2)] of int(6, 7)
such that
    x_SetExplicit_tuple1[1] < x_SetExplicit_tuple1[2]
    \/
    x_SetExplicit_tuple1[1] = x_SetExplicit_tuple1[2]
    /\
    (x_SetExplicit_tuple2[1] < x_SetExplicit_tuple2[2]
     \/
     x_SetExplicit_tuple2[1] = x_SetExplicit_tuple2[2]
     /\
     x_SetExplicit_tuple3[1] < x_SetExplicit_tuple3[2]),
    exists v__0 : int(1..2)
        . x_SetExplicit_tuple1[v__0] = 2
          /\
          (x_SetExplicit_tuple2[v__0] = 4 /\ x_SetExplicit_tuple3[v__0] = 6)
