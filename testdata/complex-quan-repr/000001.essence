language Essence 2.0

find x: set (size 4) of int(0..9)
find x_Explicit: matrix indexed by [int(1..4)] of int(0..9)

such that
    $ forall i_Explicit : matrix indexed by [int(1..2)] of int(3..5), (forall _q_1 : int(1..1) .
    $                                                                      i_Explicit[_q_1] < i_Explicit[_q_1 + 1]) /\ alldifferent(i_Explicit) .
    $     i#Explicit subseteq x#Explicit,
    $ forall _q_0 : int(1..3) .
    $     x_Explicit[_q_0] < x_Explicit[_q_0 + 1],
    $ alldifferent(x_Explicit),
    forall i in x#Explicit, true . i = 1
