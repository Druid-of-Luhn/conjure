Spec
  { language = "Essence"
  , version = [ 2
              , 0
              ]
  , topLevelBindings = [ ( Letting
                         , "digit"
                         , DomainIntegerFromTo (
                             Just ( ValueInteger 0 ) ) (
                             Just ( ValueInteger 9 ) )
                         )
                       , ( Find
                         , "x"
                         , Identifier "digit"
                         )
                       , ( Find
                         , "y"
                         , Identifier "digit"
                         )
                       , ( Letting
                         , "xy"
                         , GenericNode
                             Times
                             [ Identifier "x"
                             , Identifier "y"
                             ]
                         )
                       , ( Letting
                         , "myForall"
                         , DeclQuantifier (
                             DeclLambda
                               [ ( "__myForall_x"
                                 , TypeBoolean
                                 )
                               , ( "__myForall_y"
                                 , TypeBoolean
                                 )
                               ] (
                               GenericNode
                                 And
                                 [ Identifier "__myForall_x"
                                 , Identifier "__myForall_y"
                                 ] ) ) (
                             DeclLambda
                               [ ( "__myForall_x"
                                 , TypeBoolean
                                 )
                               , ( "__myForall_y"
                                 , TypeBoolean
                                 )
                               ] (
                               GenericNode
                                 Imply
                                 [ Identifier "__myForall_x"
                                 , Identifier "__myForall_y"
                                 ] ) ) (
                             ValueBoolean True )
                         )
                       , ( Letting
                         , "mySum"
                         , DeclQuantifier (
                             DeclLambda
                               [ ( "__mySum_x"
                                 , TypeInteger
                                 )
                               , ( "__mySum_y"
                                 , TypeInteger
                                 )
                               ] (
                               GenericNode
                                 Plus
                                 [ Identifier "__mySum_x"
                                 , Identifier "__mySum_y"
                                 ] ) ) (
                             DeclLambda
                               [ ( "__mySum_x"
                                 , TypeBoolean
                                 )
                               , ( "__mySum_y"
                                 , TypeInteger
                                 )
                               ] (
                               GenericNode
                                 Times
                                 [ Identifier "__mySum_x"
                                 , Identifier "__mySum_y"
                                 ] ) ) (
                             ValueInteger 0 )
                         )
                       ]
  , topLevelWheres = []
  , objective = Nothing
  , constraints = [ ExprQuantifier
                      { quanName = Identifier "myForall"
                      , quanVar = Identifier "i"
                      , quanOver = DomainIntegerFromTo (
                                     Just ( ValueInteger 1 ) ) (
                                     Just ( ValueInteger 9 ) )
                      , quanGuard = Nothing
                      , quanBody = GenericNode
                                     Gt
                                     [ Identifier "xy"
                                     , Identifier "i"
                                     ]
                      }
                  , GenericNode
                      Gt
                      [ ExprQuantifier
                          { quanName = Identifier "mySum"
                          , quanVar = Identifier "i"
                          , quanOver = DomainIntegerFromTo (
                                         Just ( ValueInteger 1 ) ) (
                                         Just ( ValueInteger 9 ) )
                          , quanGuard = Nothing
                          , quanBody = Identifier "i"
                          }
                      , Identifier "xy"
                      ]
                  ]
  , metadata = []
  }