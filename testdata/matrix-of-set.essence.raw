Spec
  { language = "Essence"
  , version = [ 2
              , 0
              ]
  , topLevelBindings = [ ( Find
                         , "x"
                         , DomainMatrix
                             { index = DomainIntegerFromTo (
                                         Just ( ValueInteger 0 ) ) (
                                         Just ( ValueInteger 4 ) )
                             , element = DomainSet
                                           { size = Just ( ValueInteger 2 )
                                           , minSize = Nothing
                                           , maxSize = Nothing
                                           , attrDontCare = False
                                           , element = DomainIntegerFromTo (
                                                         Just ( ValueInteger 3 ) ) (
                                                         Just ( ValueInteger 8 ) )
                                           , representation = Nothing
                                           }
                             }
                         )
                       ]
  , topLevelWheres = []
  , objective = Nothing
  , constraints = [ GenericNode
                      Elem
                      [ ValueInteger 3
                      , GenericNode
                          Index
                          [ Identifier "x"
                          , ValueInteger 3
                          ]
                      ]
                  , GenericNode
                      Eq
                      [ GenericNode
                          Max
                          [ GenericNode
                              Index
                              [ Identifier "x"
                              , ValueInteger 1
                              ]
                          ]
                      , ValueInteger 2
                      ]
                  , GenericNode
                      Eq
                      [ GenericNode
                          Min
                          [ GenericNode
                              Index
                              [ Identifier "x"
                              , ValueInteger 1
                              ]
                          ]
                      , ValueInteger 2
                      ]
                  , ExprQuantifier
                      { quanName = Identifier "forall"
                      , quanVar = Identifier "i"
                      , quanOver = DomainIntegerFromTo (
                                     Just ( ValueInteger 1 ) ) (
                                     Just ( ValueInteger 3 ) )
                      , quanGuard = Nothing
                      , quanBody = GenericNode
                                     Eq
                                     [ GenericNode
                                         Max
                                         [ GenericNode
                                             Index
                                             [ Identifier "x"
                                             , Identifier "i"
                                             ]
                                         ]
                                     , Identifier "i"
                                     ]
                      }
                  ]
  , metadata = []
  }