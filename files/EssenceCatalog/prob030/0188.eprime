language ESSENCE' 1.0

given MAXINT: int
given n_periods: int(1..MAXINT)
given maxl: int(1..MAXINT)
given minl: int(1..MAXINT)
given n_courses: int(1..MAXINT)
given maxc: int(1..MAXINT)
given minc: int(1..MAXINT)
given prereq_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n_courses * n_courses)] of bool
given prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n_courses * n_courses)] of int(1..n_courses)
given prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n_courses * n_courses)] of int(1..n_courses)
given credits_Matrix1D: matrix indexed by [int(1..n_courses)] of int(1..MAXINT)
find curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n_courses * n_periods)] of bool
find curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n_courses * n_periods)] of int(1..n_courses)
find curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n_courses * n_periods)] of int(1..n_periods)
find curr_Matrix1D: matrix indexed by [int(1..n_courses)] of int(1..n_periods)
such that
    forAll c1 : int(1..n_courses)
        . (forAll c2 : int(1..n_courses)
               . (exists v__0 : int(1..n_courses * n_courses)
                      . prereq_RelationAsSet_ExplicitVarSize_tuple1[v__0]
                        /\
                        (prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0] = c1
                         /\
                         prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0] = c2))
                 ->
                 curr_Matrix1D[c1] < curr_Matrix1D[c2]),
    forAll p : int(1..n_periods)
        . (sum v__0 : int(1..n_courses)
               . (curr_Matrix1D[v__0] = p) * credits_Matrix1D[v__0])
          <=
          maxl
          /\
          (sum v__0 : int(1..n_courses)
               . ((sum v__1 : int(1..n_courses * n_periods)
                       . toInt(curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1] = v__0
                               /\
                               curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1])
                         *
                         curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1])
                  =
                  p)
                 *
                 credits_Matrix1D[v__0])
          >=
          minl,
    forAll p : int(1..n_periods)
        . (sum v__0 : int(1..n_courses)
               . ((sum v__1 : int(1..n_courses * n_periods)
                       . toInt(curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1] = v__0
                               /\
                               curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1])
                         *
                         curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1])
                  =
                  p)
                 *
                 1)
          <=
          maxc
          /\
          (sum v__0 : int(1..n_courses) . (curr_Matrix1D[v__0] = p) * 1) >= minc,
    forAll v__0 : int(1..n_courses * n_courses)
        . (forAll v__1 : int(1..n_courses * n_courses)
               . v__0 < v__1 /\ prereq_RelationAsSet_ExplicitVarSize_tuple1[v__0]
                 /\
                 prereq_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 ->
                 prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]
                 !=
                 prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]
                 \/
                 prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0]
                 !=
                 prereq_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1]),
    forAll v__0 : int(1..n_courses * n_periods)
        . curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
          ->
          (sum v__1 : int(1..n_courses * n_periods)
               . (curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]
                  =
                  curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]
                  /\
                  curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1])
                 *
                 curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1])
          =
          curr_Matrix1D[curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]],
    forAll v__0 : int(1..n_courses * n_periods)
        . (forAll v__1 : int(1..n_courses * n_periods)
               . v__0 < v__1 /\ curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
                 /\
                 curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 ->
                 curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]
                 !=
                 curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]
                 \/
                 curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0]
                 !=
                 curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1]),
    forAll v__0 : int(1..n_courses * n_courses - 1)
        . prereq_RelationAsSet_ExplicitVarSize_tuple1[v__0]
          <=
          prereq_RelationAsSet_ExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..n_courses * n_periods - 1)
        . curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
          <=
          curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..n_courses)
        . (sum v__1 : int(1..n_courses * n_periods)
               . curr_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 *
                 (v__0 = curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]))
          =
          1
