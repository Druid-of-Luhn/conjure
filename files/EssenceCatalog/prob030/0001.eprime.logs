[handleInfDom] given n_periods: int(1..)
~~>
given n_periods: int(1..MAXINT)
[handleInfDom] given maxl: int(1..)
~~>
given maxl: int(1..MAXINT)
[handleInfDom] given minl: int(1..)
~~>
given minl: int(1..MAXINT)
[handleInfDom] given n_courses: int(1..)
~~>
given n_courses: int(1..MAXINT)
[handleInfDom] given maxc: int(1..)
~~>
given maxc: int(1..MAXINT)
[handleInfDom] given minc: int(1..)
~~>
given minc: int(1..MAXINT)
[handleInfDom] given credits: function (total) Course --> int(1..)
~~>
given credits: function (total) Course --> int(1..MAXINT)
[representation] find curr: function (total) int(1..n_courses) --> int(1..n_periods)
(#2)
AsReln, Matrix1D
[representation] given prereq: relation of (int(1..n_courses) * int(1..n_courses))
(#1)
RelationAsSet
[representation] given credits: function (total) int(1..n_courses) --> int(1..MAXINT)
(#2)
AsReln, Matrix1D
[configuration] curr§region5#Matrix1D curr§region8#Matrix1D curr§region4#Matrix1D curr§region3#Matrix1D credits§region7#Matrix1D curr§region6#Matrix1D credits§region9#Matrix1D prereq§region1#RelationAsSet curr§region2#Matrix1D
[addedDecl] given credits_Matrix1D: matrix indexed by [int(1..n_courses)] of int(1..MAXINT)
[addedDecl] find curr_Matrix1D: matrix indexed by [int(1..n_courses)] of int(1..n_periods)
[addedDecl] given prereq_RelationAsSet: set of (int(1..n_courses), int(1..n_courses))
[applied] prereq§region1#RelationAsSet(c1, c2)
{builtIn.relationApply}
    (c1, c2) in prereq_RelationAsSet§region1
[applied] (c1, c2) in prereq_RelationAsSet§region1
{rules/refns/set-in-to-quantified.rule}
    (exists v__1 in prereq_RelationAsSet§region1 . v__1[1] = c1 /\ v__1[2] = c2)
[applied] curr§region2#Matrix1D(c1)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region2[c1]
[applied] curr§region3#Matrix1D(c2)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region3[c2]
[applied] |preImage(curr§region4#Matrix1D, p)|
{rules/refns/set-card.rule}
    (sum v__2 in preImage(curr§region4#Matrix1D, p) . 1)
[applied] (sum v__2 in preImage(curr§region4#Matrix1D, p) . 1)
{rules/refns/function-preImage-quantified.rule}
    (sum v__3 : int(1..n_courses) , curr§region4#Matrix1D(v__3) = p . 1)
[applied] curr§region4#Matrix1D(v__3)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region4[v__3]
[applied] |preImage(curr§region5#Matrix1D, p)|
{rules/refns/set-card.rule}
    (sum v__4 in preImage(curr§region5#Matrix1D, p) . 1)
[applied] (sum v__4 in preImage(curr§region5#Matrix1D, p) . 1)
{rules/refns/function-preImage-quantified.rule}
    (sum v__5 : int(1..n_courses) , curr§region5#Matrix1D(v__5) = p . 1)
[applied] curr§region5#Matrix1D(v__5)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region5[v__5]
[applied] credits§region7#Matrix1D(c)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    credits_Matrix1D§region7[c]
[applied] (sum c in preImage(curr§region6#Matrix1D, p) . credits_Matrix1D§region7[c])
{rules/refns/function-preImage-quantified.rule}
    (sum v__6 : int(1..n_courses) , curr§region6#Matrix1D(v__6) = p
         . credits_Matrix1D§region7[v__6])
[applied] curr§region6#Matrix1D(v__6)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region6[v__6]
[applied] credits§region9#Matrix1D(c)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    credits_Matrix1D§region9[c]
[applied] (sum c in preImage(curr§region8#Matrix1D, p) . credits_Matrix1D§region9[c])
{rules/refns/function-preImage-quantified.rule}
    (sum v__7 : int(1..n_courses) , curr§region8#Matrix1D(v__7) = p
         . credits_Matrix1D§region9[v__7])
[applied] curr§region8#Matrix1D(v__7)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region8[v__7]
[removedDecl] find curr: function (total) int(1..n_courses) --> int(1..n_periods)
[removedDecl] given credits: function (total) int(1..n_courses) --> int(1..MAXINT)
[removedDecl] given prereq: relation of (int(1..n_courses) * int(1..n_courses))
[representation] given prereq_RelationAsSet: set of (int(1..n_courses), int(1..n_courses))
(#1)
ExplicitVarSize
[configuration] prereq_RelationAsSet§region1#ExplicitVarSize
[addedDecl] given prereq_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..n_courses * n_courses)] of (bool,
                                                              (int(1..n_courses), int(1..n_courses)))
[applied] (exists v__1 in prereq_RelationAsSet§region1#ExplicitVarSize
     . v__1[1] = c1 /\ v__1[2] = c2)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__8 : int(1..n_courses * n_courses)
         , prereq_RelationAsSet_ExplicitVarSize§region1[v__8, 1]
         . prereq_RelationAsSet_ExplicitVarSize§region1[v__8, 2, 1] = c1
           /\
           prereq_RelationAsSet_ExplicitVarSize§region1[v__8, 2, 2] = c2)
[removedDecl] given prereq_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..n_courses * n_courses)] of (bool,
                                                              (int(1..n_courses), int(1..n_courses)))
[removedDecl] given prereq_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..n_courses * n_courses)] of (int(1..n_courses),
                                                              int(1..n_courses))
[removedDecl] given prereq_RelationAsSet: set of (int(1..n_courses), int(1..n_courses))