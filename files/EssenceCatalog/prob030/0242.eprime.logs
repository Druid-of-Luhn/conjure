[handleInfDom] given n_periods: int(1..)
~~>
given n_periods: int(1..MAXINT)
[handleInfDom] given maxl: int(1..)
~~>
given maxl: int(1..MAXINT)
[handleInfDom] given minl: int(1..)
~~>
given minl: int(1..MAXINT)
[handleInfDom] given n_courses: int(1..)
~~>
given n_courses: int(1..MAXINT)
[handleInfDom] given maxc: int(1..)
~~>
given maxc: int(1..MAXINT)
[handleInfDom] given minc: int(1..)
~~>
given minc: int(1..MAXINT)
[handleInfDom] given credits: function (total) Course --> int(1..)
~~>
given credits: function (total) Course --> int(1..MAXINT)
[representation] find curr: function (total) int(1..n_courses) --> int(1..n_periods)
(#2)
AsReln, Matrix1D
[representation] given prereq: relation of (int(1..n_courses) * int(1..n_courses))
(#1)
RelationAsSet
[representation] given credits: function (total) int(1..n_courses) --> int(1..MAXINT)
(#2)
AsReln, Matrix1D
[configuration] curr§region5#AsReln curr§region8#Matrix1D curr§region4#Matrix1D curr§region3#Matrix1D credits§region7#Matrix1D curr§region6#Matrix1D credits§region9#Matrix1D prereq§region1#RelationAsSet curr§region2#Matrix1D
[addedDecl] given credits_Matrix1D: matrix indexed by [int(1..n_courses)] of int(1..MAXINT)
[addedDecl] find curr_Matrix1D: matrix indexed by [int(1..n_courses)] of int(1..n_periods)
[addedDecl] find curr_AsReln: relation of (int(1..n_courses) * int(1..n_periods))
[addedDecl] given prereq_RelationAsSet: set of (int(1..n_courses), int(1..n_courses))
[applied] prereq§region1#RelationAsSet(c1, c2)
{builtIn.relationApply}
    (c1, c2) in prereq_RelationAsSet§region1
[applied] (c1, c2) in prereq_RelationAsSet§region1
{rules/refns/set-in-to-quantified.rule}
    (exists v__3 in prereq_RelationAsSet§region1 . v__3[1] = c1 /\ v__3[2] = c2)
[applied] curr§region2#Matrix1D(c1)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region2[c1]
[applied] curr§region3#Matrix1D(c2)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region3[c2]
[applied] |preImage(curr§region4#Matrix1D, p)|
{rules/refns/set-card.rule}
    (sum v__4 in preImage(curr§region4#Matrix1D, p) . 1)
[applied] (sum v__4 in preImage(curr§region4#Matrix1D, p) . 1)
{rules/refns/function-preImage-quantified.rule}
    (sum v__5 : int(1..n_courses) , curr§region4#Matrix1D(v__5) = p . 1)
[applied] curr§region4#Matrix1D(v__5)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region4[v__5]
[applied] |preImage(curr§region5#AsReln, p)|
{rules/refns/set-card.rule}
    (sum v__6 in preImage(curr§region5#AsReln, p) . 1)
[applied] (sum v__6 in preImage(curr§region5#AsReln, p) . 1)
{rules/refns/function-preImage-quantified.rule}
    (sum v__7 : int(1..n_courses) , curr§region5#AsReln(v__7) = p . 1)
[applied] curr§region5#AsReln(v__7)
{rules/refns/function-asreln/function-asreln-image-int.rule}
    (sum v__8 in toSet(curr_AsReln§region5) , v__8[1] = v__7 . v__8[2])
[applied] credits§region7#Matrix1D(c)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    credits_Matrix1D§region7[c]
[applied] (sum c in preImage(curr§region6#Matrix1D, p) . credits_Matrix1D§region7[c])
{rules/refns/function-preImage-quantified.rule}
    (sum v__9 : int(1..n_courses) , curr§region6#Matrix1D(v__9) = p
         . credits_Matrix1D§region7[v__9])
[applied] curr§region6#Matrix1D(v__9)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region6[v__9]
[applied] credits§region9#Matrix1D(c)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    credits_Matrix1D§region9[c]
[applied] (sum c in preImage(curr§region8#Matrix1D, p) . credits_Matrix1D§region9[c])
{rules/refns/function-preImage-quantified.rule}
    (sum v__10 : int(1..n_courses) , curr§region8#Matrix1D(v__10) = p
         . credits_Matrix1D§region9[v__10])
[applied] curr§region8#Matrix1D(v__10)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D§region8[v__10]
[applied] curr#AsReln = curr#Matrix1D
{rules/refns/function-eq.rule}
    (forAll v__11 in defined(curr#AsReln)
         . curr#AsReln(v__11) = curr#Matrix1D(v__11))
[applied] curr#AsReln(v__11)
{rules/refns/function-asreln/function-asreln-image-int.rule}
    (sum v__12 in toSet(curr_AsReln) , v__12[1] = v__11 . v__12[2])
[applied] curr#Matrix1D(v__11)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    curr_Matrix1D[v__11]
[applied] (forAll v__11 in defined(curr#AsReln)
     . (sum v__12 in toSet(curr_AsReln) , v__12[1] = v__11 . v__12[2])
       =
       curr_Matrix1D[v__11])
{rules/refns/function-defined-quantified.rule}
    (forAll v__13 in toSet(curr#AsReln)
         . (sum v__12 in toSet(curr_AsReln) , v__12[1] = v__13[1] . v__12[2])
           =
           curr_Matrix1D[v__13[1]])
[applied] (forAll v__13 in toSet(curr#AsReln)
     . (sum v__12 in toSet(curr_AsReln) , v__12[1] = v__13[1] . v__12[2])
       =
       curr_Matrix1D[v__13[1]])
{rules/refns/function-asreln/function-toSet-quantified.rule}
    (forAll v__13 in toSet(curr_AsReln)
         . (sum v__12 in toSet(curr_AsReln) , v__12[1] = v__13[1] . v__12[2])
           =
           curr_Matrix1D[v__13[1]])
[removedDecl] find curr: function (total) int(1..n_courses) --> int(1..n_periods)
[removedDecl] given credits: function (total) int(1..n_courses) --> int(1..MAXINT)
[removedDecl] given prereq: relation of (int(1..n_courses) * int(1..n_courses))
[representation] find curr_AsReln: relation of (int(1..n_courses) * int(1..n_periods))
(#1)
RelationAsSet
[representation] given prereq_RelationAsSet: set of (int(1..n_courses), int(1..n_courses))
(#1)
ExplicitVarSize
[configuration] curr_AsReln§region2#RelationAsSet prereq_RelationAsSet§region3#ExplicitVarSize curr_AsReln§region5#RelationAsSet curr_AsReln§region1#RelationAsSet prereq_RelationAsSet§region1#ExplicitVarSize
[addedDecl] given prereq_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..n_courses * n_courses)] of (bool,
                                                              (int(1..n_courses), int(1..n_courses)))
[addedDecl] find curr_AsReln_RelationAsSet: set of (int(1..n_courses), int(1..n_periods))
[applied] (exists v__3 in prereq_RelationAsSet§region1#ExplicitVarSize
     . v__3[1] = c1 /\ v__3[2] = c2)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__11 : int(1..n_courses * n_courses)
         , prereq_RelationAsSet_ExplicitVarSize§region1[v__11, 1]
         . prereq_RelationAsSet_ExplicitVarSize§region1[v__11, 2, 1] = c1
           /\
           prereq_RelationAsSet_ExplicitVarSize§region1[v__11, 2, 2] = c2)
[applied] (sum v__8 in toSet(curr_AsReln§region5#RelationAsSet) , v__8[1] = v__7
     . v__8[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__8 in curr_AsReln_RelationAsSet§region5 , v__8[1] = v__7 . v__8[2])
[applied] (sum v__12 in toSet(curr_AsReln§region2#RelationAsSet) , v__12[1] = v__13[1]
     . v__12[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__12 in curr_AsReln_RelationAsSet§region2 , v__12[1] = v__13[1]
         . v__12[2])
[applied] (forAll v__13 in toSet(curr_AsReln§region1#RelationAsSet)
     . (sum v__12 in curr_AsReln_RelationAsSet§region2 , v__12[1] = v__13[1]
            . v__12[2])
       =
       curr_Matrix1D[v__13[1]])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (forAll v__13 in curr_AsReln_RelationAsSet§region1
         . (sum v__12 in curr_AsReln_RelationAsSet§region2 , v__12[1] = v__13[1]
                . v__12[2])
           =
           curr_Matrix1D[v__13[1]])
[applied] (sum v__1 in toSet(curr_AsReln§region5#RelationAsSet) . v__2 = v__1[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__1 in curr_AsReln_RelationAsSet§region5 . v__2 = v__1[1])
[removedDecl] given prereq_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..n_courses * n_courses)] of (bool,
                                                              (int(1..n_courses), int(1..n_courses)))
[removedDecl] given prereq_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..n_courses * n_courses)] of (int(1..n_courses),
                                                              int(1..n_courses))
[removedDecl] find curr_AsReln: relation of (int(1..n_courses) * int(1..n_periods))
[removedDecl] given prereq_RelationAsSet: set of (int(1..n_courses), int(1..n_courses))
[representation] find curr_AsReln_RelationAsSet: set of (int(1..n_courses), int(1..n_periods))
(#1)
ExplicitVarSize
[configuration] curr_AsReln_RelationAsSet§region2#ExplicitVarSize curr_AsReln_RelationAsSet§region5#ExplicitVarSize curr_AsReln_RelationAsSet§region1#ExplicitVarSize
[addedDecl] find curr_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..n_courses * n_periods)] of (bool,
                                                              (int(1..n_courses), int(1..n_periods)))
[applied] (sum v__8 in curr_AsReln_RelationAsSet§region5#ExplicitVarSize , v__8[1] = v__7
     . v__8[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__15 : int(1..n_courses * n_periods)
         , curr_AsReln_RelationAsSet_ExplicitVarSize§region5[v__15, 2, 1] = v__7
           /\
           curr_AsReln_RelationAsSet_ExplicitVarSize§region5[v__15, 1]
         . curr_AsReln_RelationAsSet_ExplicitVarSize§region5[v__15, 2, 2])
[applied] (sum v__12 in curr_AsReln_RelationAsSet§region2#ExplicitVarSize
     , v__12[1] = v__13[1]
     . v__12[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__16 : int(1..n_courses * n_periods)
         , curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 2, 1] = v__13[1]
           /\
           curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 1]
         . curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 2, 2])
[applied] (forAll v__13 in curr_AsReln_RelationAsSet§region1#ExplicitVarSize
     . (sum v__16 : int(1..n_courses * n_periods)
            , curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 2, 1] = v__13[1]
              /\
              curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 1]
            . curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 2, 2])
       =
       curr_Matrix1D[v__13[1]])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (forAll v__17 : int(1..n_courses * n_periods)
         , curr_AsReln_RelationAsSet_ExplicitVarSize§region1[v__17, 1]
         . (sum v__16 : int(1..n_courses * n_periods)
                , curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 2, 1]
                  =
                  curr_AsReln_RelationAsSet_ExplicitVarSize§region1[v__17, 2, 1]
                  /\
                  curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 1]
                . curr_AsReln_RelationAsSet_ExplicitVarSize§region2[v__16, 2, 2])
           =
           curr_Matrix1D[curr_AsReln_RelationAsSet_ExplicitVarSize§region1[v__17, 2, 1]])
[applied] (sum v__1 in curr_AsReln_RelationAsSet§region5#ExplicitVarSize . v__2 = v__1[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__18 : int(1..n_courses * n_periods)
         , curr_AsReln_RelationAsSet_ExplicitVarSize§region5[v__18, 1]
         . v__2 = curr_AsReln_RelationAsSet_ExplicitVarSize§region5[v__18, 2, 1])
[removedDecl] find curr_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..n_courses * n_periods)] of (bool,
                                                              (int(1..n_courses), int(1..n_periods)))
[removedDecl] find curr_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..n_courses * n_periods)] of (int(1..n_courses),
                                                              int(1..n_periods))
[removedDecl] find curr_AsReln_RelationAsSet: set of (int(1..n_courses), int(1..n_periods))