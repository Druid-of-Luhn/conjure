language ESSENCE' 1.0

given MAXINT: int
given d: int(1..MAXINT)
where d % 2 = 1
find hexagon:
        matrix indexed by [int(1..d), int(1..d)] of int(1..3 * (d / 2 + 1) ** 2
                                                           -
                                                           3 * (d / 2 + 1)
                                                           +
                                                           1)
find s: int(1..(sum i : int(3 * (d / 2 + 1) ** 2 - 3 * (d / 2 + 1) + 1 + 1
                            -
                            d..3 * (d / 2 + 1) ** 2 - 3 * (d / 2 + 1) + 1)
                    . i))
such that
    forAll r : int(1..d)
        . (sum i : int(1..d - |d / 2 + 1 - r|)
               . hexagon[i + max(0, d / 2 + 1 - r),
                         r - max(0, d / 2 + 1 - (i + max(0, d / 2 + 1 - r)))])
          =
          s,
    forAll r : int(1..d)
        . (sum i : int(1..d - |d / 2 + 1 - r|)
               . hexagon[i + max(0, r - (d / 2 + 1)),
                         r - max(0, i + max(0, r - (d / 2 + 1)) - (d / 2 + 1))])
          =
          s,
    forAll r : int(1..d)
        . (sum i : int(1..d - |d / 2 + 1 - r|) . hexagon[r, i]) = s,
    forAll r1 : int(1..d)
        . (forAll r2 : int(1..d)
               . (forAll i1 : int(1..d - |d / 2 + 1 - r1|)
                      . (forAll i2 : int(1..d - |d / 2 + 1 - r2|)
                             . r1 != r2 \/ i1 != i2 -> hexagon[r1, i1] != hexagon[r2, i2])))
