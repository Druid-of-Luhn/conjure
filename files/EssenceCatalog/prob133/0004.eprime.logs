[handleInfDom] given s: function (total) U --> int(1..)
~~>
given s: function (total) U --> int(1..MAXINT)
[handleInfDom] given v: function (total) U --> int(1..)
~~>
given v: function (total) U --> int(1..MAXINT)
[handleInfDom] given B: int(1..)
~~>
given B: int(1..MAXINT)
[handleInfDom] given K: int(1..)
~~>
given K: int(1..MAXINT)
[handleEnums] given U new type enum
~~>
given U_fromEnumSize: int(1..)
letting U_fromEnum be domain int(1..U_fromEnumSize)
[handleInfDom] given U_fromEnumSize: int(1..)
~~>
given U_fromEnumSize: int(1..MAXINT)
[representation] find U': set of int(1..U_fromEnumSize) (#2) ExplicitVarSize, Occurrence
[representation] given s: function (total) int(1..U_fromEnumSize) --> int(1..MAXINT)
(#2)
AsReln, Matrix1D
[representation] given v: function (total) int(1..U_fromEnumSize) --> int(1..MAXINT)
(#2)
AsReln, Matrix1D
[configuration] U'§region3#Occurrence s§region2#Matrix1D v§region4#Matrix1D U'§region1#ExplicitVarSize
[addedDecl] given v_Matrix1D: matrix indexed by [int(1..U_fromEnumSize)] of int(1..MAXINT)
[addedDecl] find U'_Occurrence: matrix indexed by [int(1..U_fromEnumSize)] of bool
[addedDecl] given s_Matrix1D: matrix indexed by [int(1..U_fromEnumSize)] of int(1..MAXINT)
[addedDecl] find U'_ExplicitVarSize:
        matrix indexed by [int(1..U_fromEnumSize)] of (bool, int(1..U_fromEnumSize))
[applied] s§region2#Matrix1D(u)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    s_Matrix1D§region2[u]
[applied] (sum u in U'§region1#ExplicitVarSize . s_Matrix1D§region2[u] <= B)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__3 : int(1..U_fromEnumSize) , U'_ExplicitVarSize§region1[v__3, 1]
         . s_Matrix1D§region2[U'_ExplicitVarSize§region1[v__3, 2]] <= B)
[applied] v§region4#Matrix1D(u)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    v_Matrix1D§region4[u]
[applied] (sum u in U'§region3#Occurrence . v_Matrix1D§region4[u] >= K)
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (sum v__4 : int(1..U_fromEnumSize) , U'_Occurrence§region3[v__4]
         . v_Matrix1D§region4[v__4] >= K)
[applied] U'#ExplicitVarSize = U'#Occurrence
{rules/refns/set-eq-to-subsets.rule}
    U'#ExplicitVarSize subsetEq U'#Occurrence
    /\
    U'#ExplicitVarSize supsetEq U'#Occurrence
[applied] U'#ExplicitVarSize subsetEq U'#Occurrence
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__5 in U'#ExplicitVarSize . v__5 in U'#Occurrence)
[applied] v__5 in U'#Occurrence
{rules/refns/set-in-to-quantified.rule}
    (exists v__6 in U'#Occurrence . v__6 = v__5)
[applied] (exists v__6 in U'#Occurrence . v__6 = v__5)
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (exists v__7 : int(1..U_fromEnumSize) , U'_Occurrence[v__7] . v__7 = v__5)
[applied] (forAll v__5 in U'#ExplicitVarSize
     . (exists v__7 : int(1..U_fromEnumSize) , U'_Occurrence[v__7] . v__7 = v__5))
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (forAll v__8 : int(1..U_fromEnumSize) , U'_ExplicitVarSize[v__8, 1]
         . (exists v__7 : int(1..U_fromEnumSize) , U'_Occurrence[v__7]
                . v__7 = U'_ExplicitVarSize[v__8, 2]))
[applied] U'#ExplicitVarSize supsetEq U'#Occurrence
{rules/refns/set-supseteq-to-subseteq.rule}
    U'#Occurrence subsetEq U'#ExplicitVarSize
[applied] U'#Occurrence subsetEq U'#ExplicitVarSize
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__9 in U'#Occurrence . v__9 in U'#ExplicitVarSize)
[applied] v__9 in U'#ExplicitVarSize
{rules/refns/set-in-to-quantified.rule}
    (exists v__10 in U'#ExplicitVarSize . v__10 = v__9)
[applied] (exists v__10 in U'#ExplicitVarSize . v__10 = v__9)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__11 : int(1..U_fromEnumSize) , U'_ExplicitVarSize[v__11, 1]
         . U'_ExplicitVarSize[v__11, 2] = v__9)
[applied] (forAll v__9 in U'#Occurrence
     . (exists v__11 : int(1..U_fromEnumSize) , U'_ExplicitVarSize[v__11, 1]
            . U'_ExplicitVarSize[v__11, 2] = v__9))
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (forAll v__12 : int(1..U_fromEnumSize) , U'_Occurrence[v__12]
         . (exists v__11 : int(1..U_fromEnumSize) , U'_ExplicitVarSize[v__11, 1]
                . U'_ExplicitVarSize[v__11, 2] = v__12))
[removedDecl] find U'_ExplicitVarSize:
        matrix indexed by [int(1..U_fromEnumSize)] of (bool, int(1..U_fromEnumSize))
[removedDecl] find U': set of int(1..U_fromEnumSize)
[removedDecl] given v: function (total) int(1..U_fromEnumSize) --> int(1..MAXINT)
[removedDecl] given s: function (total) int(1..U_fromEnumSize) --> int(1..MAXINT)