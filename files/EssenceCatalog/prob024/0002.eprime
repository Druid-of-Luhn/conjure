language ESSENCE' 1.0

given n: int(1..)
given k: int(1..)
find seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n * k * n)] of bool
find seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n * k * n)] of int(1..n * k)
find seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n * k * n)] of int(1..n)
such that
    forAll m : int(1..n)
        . (exists f_Matrix1D : matrix indexed by [int(1..k)] of int(1..n * k)
               . allDiff(f_Matrix1D)
                 /\
                 ((forAll i : int(1..n * k)
                       . (exists v__0 : int(1..k) . f_Matrix1D[v__0] = i)
                         <->
                         (exists v__0 : int(1..n * k)
                              . (sum v__1 : int(1..n * k * n)
                                     . (seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1] = v__0
                                        /\
                                        seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1])
                                       *
                                       seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1])
                                =
                                m
                                /\
                                v__0 = i))
                  /\
                  (forAll j : int(1..k - 1) . f_Matrix1D[j + 1] - f_Matrix1D[j] = m + 1))),
    forAll v__0 : int(1..n * k * n)
        . (forAll v__1 : int(1..n * k * n)
               . v__0 < v__1 /\ seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
                 /\
                 seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 ->
                 seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]
                 !=
                 seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]
                 \/
                 seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0]
                 !=
                 seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1]),
    forAll v__0 : int(1..n * k)
        . (sum v__1 : int(1..n * k * n)
               . seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 *
                 (v__0 = seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]))
          =
          1,
    forAll v__0 : int(1..n * k * n - 1)
        . seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
          <=
          seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..n)
        . (exists v__1 : int(1..n * k * n)
               . seq_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 /\
                 v__0 = seq_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1])
