[handleInfDom] given n_boats: int(1..)
~~>
given n_boats: int(1..MAXINT)
[handleInfDom] given n_periods: int(1..)
~~>
given n_periods: int(1..MAXINT)
[handleInfDom] given capacity: function (total) Boat --> int(1..)
~~>
given capacity: function (total) Boat --> int(1..MAXINT)
[handleInfDom] given crew: function (total) Boat --> int(1..)
~~>
given crew: function (total) Boat --> int(1..MAXINT)
[representation] find hosts: set of int(1..n_boats) (#2) ExplicitVarSize, Occurrence
[representation] find sched:
        set (size n_periods) of function (total) int(1..n_boats) --> int(1..n_boats)
(#1)
Explicit
[representation] given capacity: function (total) int(1..n_boats) --> int(1..MAXINT)
(#2)
AsReln, Matrix1D
[representation] given crew: function (total) int(1..n_boats) --> int(1..MAXINT)
(#2)
AsReln, Matrix1D
[configuration] crew§region7#Matrix1D hosts§region1#Occurrence sched§region2#Explicit sched§region5#Explicit sched§region9#Explicit hosts§region10#Occurrence capacity§region8#Matrix1D sched§region3#Explicit hosts§region6#Occurrence hosts§region4#Occurrence
[addedDecl] find hosts_Occurrence: matrix indexed by [int(1..n_boats)] of bool
[addedDecl] find sched_Explicit:
        matrix indexed by [int(1..n_periods)] of function (total)
                                                     int(1..n_boats) --> int(1..n_boats)
[addedDecl] given capacity_Matrix1D: matrix indexed by [int(1..n_boats)] of int(1..MAXINT)
[addedDecl] given crew_Matrix1D: matrix indexed by [int(1..n_boats)] of int(1..MAXINT)
[applied] |hosts§region1#Occurrence|
{rules/refns/set-card.rule}
    (sum v__1 in hosts§region1#Occurrence . 1)
[applied] (sum v__1 in hosts§region1#Occurrence . 1)
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (sum v__2 : int(1..n_boats) , hosts_Occurrence§region1[v__2] . 1)
[applied] (sum p in sched§region2#Explicit . p(b1) = p(b2))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (sum v__3 : int(1..n_periods)
         . sched_Explicit§region2[v__3](b1) = sched_Explicit§region2[v__3](b2))
[applied] range(p) subsetEq hosts§region4#Occurrence
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__4 in range(p) . v__4 in hosts§region4#Occurrence)
[applied] v__4 in hosts§region4#Occurrence
{rules/refns/set-in-to-quantified.rule}
    (exists v__5 in hosts§region4#Occurrence . v__5 = v__4)
[applied] (exists v__5 in hosts§region4#Occurrence . v__5 = v__4)
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6] . v__6 = v__4)
[applied] (forAll v__4 in range(p)
     . (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6]
            . v__6 = v__4))
{rules/refns/function-range-quantified.rule}
    (forAll v__7 in toSet(p)
         . (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6]
                . v__6 = v__7[2]))
[applied] (forAll p in sched§region3#Explicit
     . (forAll v__7 in toSet(p)
            . (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6]
                   . v__6 = v__7[2])))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (forAll v__8 : int(1..n_periods)
         . (forAll v__7 in toSet(sched_Explicit§region3[v__8])
                . (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6]
                       . v__6 = v__7[2])))
[applied] crew§region7#Matrix1D(b)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    crew_Matrix1D§region7[b]
[applied] capacity§region8#Matrix1D(h)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    capacity_Matrix1D§region8[h]
[applied] (forAll h in hosts§region6#Occurrence
     . (sum b in preImage(p, h) . crew_Matrix1D§region7[b])
       <=
       capacity_Matrix1D§region8[h])
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (forAll v__9 : int(1..n_boats) , hosts_Occurrence§region6[v__9]
         . (sum b in preImage(p, v__9) . crew_Matrix1D§region7[b])
           <=
           capacity_Matrix1D§region8[v__9])
[applied] (forAll p in sched§region5#Explicit
     . (forAll v__9 : int(1..n_boats) , hosts_Occurrence§region6[v__9]
            . (sum b in preImage(p, v__9) . crew_Matrix1D§region7[b])
              <=
              capacity_Matrix1D§region8[v__9]))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (forAll v__10 : int(1..n_periods)
         . (forAll v__9 : int(1..n_boats) , hosts_Occurrence§region6[v__9]
                . (sum b in preImage(sched_Explicit§region5[v__10], v__9)
                       . crew_Matrix1D§region7[b])
                  <=
                  capacity_Matrix1D§region8[v__9]))
[applied] (sum b in preImage(sched_Explicit§region5[v__10], v__9)
     . crew_Matrix1D§region7[b])
{rules/refns/function-preImage-quantified.rule}
    (sum v__11 : int(1..n_boats) , sched_Explicit§region5[v__10](v__11) = v__9
         . crew_Matrix1D§region7[v__11])
[applied] (forAll h in hosts§region10#Occurrence . p(h) = h)
{rules/refns/set-occurrence/set-occurrence-quantified.rule}
    (forAll v__12 : int(1..n_boats) , hosts_Occurrence§region10[v__12]
         . p(v__12) = v__12)
[applied] (forAll p in sched§region9#Explicit
     . (forAll v__12 : int(1..n_boats) , hosts_Occurrence§region10[v__12]
            . p(v__12) = v__12))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (forAll v__13 : int(1..n_periods)
         . (forAll v__12 : int(1..n_boats) , hosts_Occurrence§region10[v__12]
                . sched_Explicit§region9[v__13](v__12) = v__12))
[removedDecl] find sched:
        set (size n_periods) of function (total) int(1..n_boats) --> int(1..n_boats)
[removedDecl] find hosts: set of int(1..n_boats)
[removedDecl] given crew: function (total) int(1..n_boats) --> int(1..MAXINT)
[removedDecl] given capacity: function (total) int(1..n_boats) --> int(1..MAXINT)
[representation] find sched_Explicit:
        matrix indexed by [int(1..n_periods)] of function (total)
                                                     int(1..n_boats) --> int(1..n_boats)
(#2)
AsReln, Matrix1D
[configuration] sched_Explicit§region9#Matrix1D sched_Explicit§region3#Matrix1D sched_Explicit§region5#Matrix1D sched_Explicit§region2#Matrix1D sched_Explicit§region1#Matrix1D
[addedDecl] find sched_Explicit_Matrix1D:
        matrix indexed by [int(1..n_periods), int(1..n_boats)] of int(1..n_boats)
[applied] sched_Explicit§region2#Matrix1D[v__3](b1)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    sched_Explicit_Matrix1D§region2[v__3, b1]
[applied] sched_Explicit§region2#Matrix1D[v__3](b2)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    sched_Explicit_Matrix1D§region2[v__3, b2]
[applied] sched_Explicit§region5#Matrix1D[v__10](v__11)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    sched_Explicit_Matrix1D§region5[v__10, v__11]
[applied] sched_Explicit§region9#Matrix1D[v__13](v__12)
{rules/refns/function-matrix1d/function-matrix1d-image.rule}
    sched_Explicit_Matrix1D§region9[v__13, v__12]
[applied] (forAll v__7 in toSet(sched_Explicit§region3#Matrix1D[v__8])
     . (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6]
            . v__6 = v__7[2]))
{rules/refns/function-matrix1d/function-toSet-quantified.rule}
    (forAll v__1 : int(1..n_boats)
         . (exists v__6 : int(1..n_boats) , hosts_Occurrence§region4[v__6]
                . v__6 = sched_Explicit_Matrix1D§region3[v__8, v__1]))
[removedDecl] find sched_Explicit:
        matrix indexed by [int(1..n_periods)] of function (total)
                                                     int(1..n_boats) --> int(1..n_boats)