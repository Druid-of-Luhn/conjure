language ESSENCE' 1.0

given n_cars: int(1..)
given n_classes: int(1..)
given n_options: int(1..)
given n_upperBound: int(1..)
given quantity_AsReln_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n_classes * n_upperBound)] of bool
given quantity_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n_classes * n_upperBound)] of int(1..n_classes)
given quantity_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n_classes * n_upperBound)] of int(1..n_upperBound)
given maxcars_Matrix1D:
        matrix indexed by [int(1..n_options)] of int(1..n_upperBound)
given blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n_options * n_upperBound)] of bool
given blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n_options * n_upperBound)] of int(1..n_options)
given blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n_options * n_upperBound)] of int(1..n_upperBound)
given usage_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n_classes * n_options)] of bool
given usage_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n_classes * n_options)] of int(1..n_classes)
given usage_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n_classes * n_options)] of int(1..n_options)
find car_AsReln_RelationAsSet_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..n_cars * n_classes)] of bool
find car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..n_cars * n_classes)] of int(1..n_cars)
find car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..n_cars * n_classes)] of int(1..n_classes)
find car_Matrix1D: matrix indexed by [int(1..n_cars)] of int(1..n_classes)
such that
    forAll c : int(1..n_classes)
        . (sum v__0 : int(1..n_cars) . (car_Matrix1D[v__0] = c) * 1)
          =
          (sum v__0 : int(1..n_classes * n_upperBound)
               . (quantity_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0] = c
                  /\
                  quantity_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0])
                 *
                 quantity_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0]),
    forAll opt : int(1..n_options)
        . (forAll s : int(1..n_cars + 1
                             -
                             (sum v__0 : int(1..n_options * n_upperBound)
                                  . (blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0] = opt
                                     /\
                                     blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0])
                                    *
                                    blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0]))
               . (sum i : int(s..s
                                 +
                                 (sum v__0 : int(1..n_options * n_upperBound)
                                      . (blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0] = opt
                                         /\
                                         blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0])
                                        *
                                        blksize_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0])
                                 -
                                 1)
                      . (exists v__0 : int(1..n_classes * n_options)
                             . usage_RelationAsSet_ExplicitVarSize_tuple1[v__0]
                               /\
                               (usage_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]
                                =
                                (sum v__1 : int(1..n_cars * n_classes)
                                     . toInt(car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1] = i
                                             /\
                                             car_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1])
                                       *
                                       car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1])
                                /\
                                usage_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0] = opt)))
                 <=
                 maxcars_Matrix1D[opt]),
    forAll v__0 : int(1..n_cars * n_classes)
        . (forAll v__1 : int(1..n_cars * n_classes)
               . v__0 < v__1 /\ car_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
                 /\
                 car_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 ->
                 car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__0]
                 !=
                 car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]
                 \/
                 car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__0]
                 !=
                 car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple2[v__1]),
    forAll v__0 : int(1..n_cars * n_classes - 1)
        . car_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0]
          <=
          car_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..n_cars)
        . (sum v__1 : int(1..n_cars * n_classes)
               . car_AsReln_RelationAsSet_ExplicitVarSize_tuple1[v__1]
                 *
                 (v__0 = car_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1[v__1]))
          =
          1
