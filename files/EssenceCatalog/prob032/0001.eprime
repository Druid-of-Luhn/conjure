language ESSENCE' 1.0

given MAXINT: int
given n: int(1..MAXINT)
find alive_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..(n + 2) * (n + 2))] of bool
find alive_ExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..(n + 2) * (n + 2))] of int(1..n + 2)
find alive_ExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..(n + 2) * (n + 2))] of int(1..n + 2)
maximising sum v__0 : int(1..(n + 2) * (n + 2))
               . alive_ExplicitVarSize_tuple1[v__0] * 1
such that
    forAll v__0 : int(1..(n + 2) * (n + 2))
        . alive_ExplicitVarSize_tuple1[v__0]
          ->
          3
          <=
          (sum i : int(-1..1)
               . (sum j : int(-1..1)
                      . (exists v__1 : int(1..(n + 2) * (n + 2))
                             . alive_ExplicitVarSize_tuple1[v__1]
                               /\
                               (alive_ExplicitVarSize_tuple2_tuple1[v__1]
                                =
                                alive_ExplicitVarSize_tuple2_tuple1[v__0] + i
                                /\
                                alive_ExplicitVarSize_tuple2_tuple2[v__1]
                                =
                                alive_ExplicitVarSize_tuple2_tuple2[v__0] + j))))
          /\
          (sum i : int(-1..1)
               . (sum j : int(-1..1)
                      . (exists v__1 : int(1..(n + 2) * (n + 2))
                             . alive_ExplicitVarSize_tuple1[v__1]
                               /\
                               (alive_ExplicitVarSize_tuple2_tuple1[v__1]
                                =
                                alive_ExplicitVarSize_tuple2_tuple1[v__0] + i
                                /\
                                alive_ExplicitVarSize_tuple2_tuple2[v__1]
                                =
                                alive_ExplicitVarSize_tuple2_tuple2[v__0] + j))))
          <=
          4,
    forAll v__0 : int(1..(n + 2) * (n + 2))
        . (forAll v__1 : int(1..(n + 2) * (n + 2))
               . v__0 < v__1 /\ alive_ExplicitVarSize_tuple1[v__0]
                 /\
                 alive_ExplicitVarSize_tuple1[v__1]
                 ->
                 alive_ExplicitVarSize_tuple2_tuple1[v__0]
                 !=
                 alive_ExplicitVarSize_tuple2_tuple1[v__1]
                 \/
                 alive_ExplicitVarSize_tuple2_tuple2[v__0]
                 !=
                 alive_ExplicitVarSize_tuple2_tuple2[v__1]),
    forAll v__0 : int(1..n + 2)
        . (forAll v__1 : int(1..n + 2)
               . (1 = v__0 \/ n + 2 = v__0) + (!(v__0 = v__1) /\ (1 = v__1 \/ n + 2 = v__1))
                 =
                 0
                 ->
                 !(exists v__2 : int(1..(n + 2) * (n + 2))
                       . alive_ExplicitVarSize_tuple1[v__2]
                         /\
                         (alive_ExplicitVarSize_tuple2_tuple1[v__2] = v__0
                          /\
                          alive_ExplicitVarSize_tuple2_tuple2[v__2] = v__1))),
    forAll v__0 : int(1..n + 2)
        . (forAll v__1 : int(1..n + 2)
               . !(exists v__2 : int(1..(n + 2) * (n + 2))
                       . alive_ExplicitVarSize_tuple1[v__2]
                         /\
                         (alive_ExplicitVarSize_tuple2_tuple1[v__2] = v__0
                          /\
                          alive_ExplicitVarSize_tuple2_tuple2[v__2] = v__1))
                 ->
                 (sum i : int(-1..1)
                      . (sum j : int(-1..1)
                             . (exists v__2 : int(1..(n + 2) * (n + 2))
                                    . alive_ExplicitVarSize_tuple1[v__2]
                                      /\
                                      (alive_ExplicitVarSize_tuple2_tuple1[v__2] = v__0 + i
                                       /\
                                       alive_ExplicitVarSize_tuple2_tuple2[v__2] = v__1 + j))))
                 !=
                 3),
    forAll v__0 : int(1..(n + 2) * (n + 2) - 1)
        . alive_ExplicitVarSize_tuple1[v__0] <= alive_ExplicitVarSize_tuple1[v__0 + 1]
