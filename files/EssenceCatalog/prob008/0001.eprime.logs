[handleInfDom] given n_upper: int
               ~~>
               given n_upper: int(MININT..MAXINT)
[handleInfDom] given deck_width: int(1..)
               ~~>
               given deck_width: int(1..MAXINT)
[handleInfDom] given deck_length: int(1..)
               ~~>
               given deck_length: int(1..MAXINT)
[handleInfDom] given n_containers: int(1..)
               ~~>
               given n_containers: int(1..MAXINT)
[handleInfDom] given n_classes: int(1..)
               ~~>
               given n_classes: int(1..MAXINT)
[representation] find west:
                         function (total) int(1..n_containers) --> int(0..deck_width)
                 (#1)
                 Matrix1D
[representation] find east:
                         function (total) int(1..n_containers) --> int(0..deck_width)
                 (#1)
                 Matrix1D
[representation] find north:
                         function (total) int(1..n_containers) --> int(0..deck_length)
                 (#1)
                 Matrix1D
[representation] find south:
                         function (total) int(1..n_containers) --> int(0..deck_length)
                 (#1)
                 Matrix1D
[representation] given width:
                         function (total) int(1..n_containers) --> int(1..deck_width)
                 (#1)
                 Matrix1D
[representation] given length:
                         function (total) int(1..n_containers) --> int(1..deck_length)
                 (#1)
                 Matrix1D
[representation] given class:
                         function (total) int(1..n_containers) --> int(1..n_classes)
                 (#1)
                 Matrix1D
[representation] given separation:
                         function (total) set (size 2) of int(1..n_classes) --> int(0..n_upper)
                 (#1)
                 AsReln
[configuration] width§region12#Matrix1D north§region24#Matrix1D length§region9#Matrix1D length§region6#Matrix1D east§region34#Matrix1D east§region1#Matrix1D south§region4#Matrix1D separation§region28#AsReln west§region8#Matrix1D separation§region21#AsReln east§region19#Matrix1D south§region27#Matrix1D south§region37#Matrix1D west§region13#Matrix1D east§region33#Matrix1D west§region14#Matrix1D north§region36#Matrix1D north§region11#Matrix1D class§region29#Matrix1D north§region5#Matrix1D south§region26#Matrix1D west§region17#Matrix1D south§region38#Matrix1D south§region10#Matrix1D north§region16#Matrix1D west§region32#Matrix1D class§region30#Matrix1D east§region7#Matrix1D class§region23#Matrix1D width§region3#Matrix1D north§region15#Matrix1D west§region2#Matrix1D north§region35#Matrix1D east§region20#Matrix1D class§region22#Matrix1D west§region31#Matrix1D west§region18#Matrix1D north§region25#Matrix1D
[addedDecl] find south_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(0..deck_length)
[addedDecl] find north_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(0..deck_length)
[addedDecl] find east_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(0..deck_width)
[addedDecl] find west_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(0..deck_width)
[addedDecl] given class_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(1..n_classes)
[addedDecl] given separation_AsReln:
                    relation of (set (size 2) of int(1..n_classes) * int(0..n_upper))
[addedDecl] given width_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(1..deck_width)
[addedDecl] given length_Matrix1D:
                    matrix indexed by [int(1..n_containers)] of int(1..deck_length)
[applied] east§region1#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              east_Matrix1D§region1[c]
[applied] west§region2#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region2[c]
[applied] width§region3#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              width_Matrix1D§region3[c]
[applied] south§region4#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              south_Matrix1D§region4[c]
[applied] north§region5#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region5[c]
[applied] length§region6#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              length_Matrix1D§region6[c]
[applied] east§region7#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              east_Matrix1D§region7[c]
[applied] west§region8#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region8[c]
[applied] length§region9#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              length_Matrix1D§region9[c]
[applied] south§region10#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              south_Matrix1D§region10[c]
[applied] north§region11#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region11[c]
[applied] width§region12#Matrix1D(c)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              width_Matrix1D§region12[c]
[applied] west§region13#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region13[c1]
[applied] west§region14#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region14[c2]
[applied] north§region15#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region15[c1]
[applied] north§region16#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region16[c2]
[applied] west§region17#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region17[c1]
[applied] west§region18#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region18[c2]
[applied] east§region19#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              east_Matrix1D§region19[c1]
[applied] east§region20#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              east_Matrix1D§region20[c2]
[applied] class§region22#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              class_Matrix1D§region22[c1]
[applied] class§region23#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              class_Matrix1D§region23[c2]
[applied] separation§region21#AsReln({class_Matrix1D§region22[c1],
                                      class_Matrix1D§region23[c2]})
          {rules/refns/function-asreln/function-asreln-image-int.rule}
              (sum v__17 in toSet(separation_AsReln§region21)
                   , v__17[1] = {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
                   . v__17[2])
[applied] v__17[1] = {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
          {rules/refns/set-eq-to-subsets.rule}
              v__17[1] subsetEq {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
              /\
              v__17[1] supsetEq {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
[applied] v__17[1]
          subsetEq
          {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__18 in v__17[1]
                   . v__18 in {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]})
[applied] v__18 in {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
          {rules/refns/set-in-to-quantified.rule}
              class_Matrix1D§region22[c1] = v__18 \/ class_Matrix1D§region23[c2] = v__18
[applied] v__17[1]
          supsetEq
          {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]} subsetEq v__17[1]
[applied] {class_Matrix1D§region22[c1], class_Matrix1D§region23[c2]}
          subsetEq
          v__17[1]
          {rules/refns/set-subseteq-to-quantified.rule}
              class_Matrix1D§region22[c1] in v__17[1]
              /\
              class_Matrix1D§region23[c2] in v__17[1]
[applied] class_Matrix1D§region22[c1] in v__17[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__21 in v__17[1] . v__21 = class_Matrix1D§region22[c1])
[applied] class_Matrix1D§region23[c2] in v__17[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__22 in v__17[1] . v__22 = class_Matrix1D§region23[c2])
[applied] north§region24#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region24[c1]
[applied] north§region25#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region25[c2]
[applied] south§region26#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              south_Matrix1D§region26[c1]
[applied] south§region27#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              south_Matrix1D§region27[c2]
[applied] class§region29#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              class_Matrix1D§region29[c1]
[applied] class§region30#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              class_Matrix1D§region30[c2]
[applied] separation§region28#AsReln({class_Matrix1D§region29[c1],
                                      class_Matrix1D§region30[c2]})
          {rules/refns/function-asreln/function-asreln-image-int.rule}
              (sum v__23 in toSet(separation_AsReln§region28)
                   , v__23[1] = {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
                   . v__23[2])
[applied] v__23[1] = {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
          {rules/refns/set-eq-to-subsets.rule}
              v__23[1] subsetEq {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
              /\
              v__23[1] supsetEq {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
[applied] v__23[1]
          subsetEq
          {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__24 in v__23[1]
                   . v__24 in {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]})
[applied] v__24 in {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
          {rules/refns/set-in-to-quantified.rule}
              class_Matrix1D§region29[c1] = v__24 \/ class_Matrix1D§region30[c2] = v__24
[applied] v__23[1]
          supsetEq
          {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]} subsetEq v__23[1]
[applied] {class_Matrix1D§region29[c1], class_Matrix1D§region30[c2]}
          subsetEq
          v__23[1]
          {rules/refns/set-subseteq-to-quantified.rule}
              class_Matrix1D§region29[c1] in v__23[1]
              /\
              class_Matrix1D§region30[c2] in v__23[1]
[applied] class_Matrix1D§region29[c1] in v__23[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__27 in v__23[1] . v__27 = class_Matrix1D§region29[c1])
[applied] class_Matrix1D§region30[c2] in v__23[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__28 in v__23[1] . v__28 = class_Matrix1D§region30[c2])
[applied] west§region31#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region31[c1]
[applied] west§region32#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              west_Matrix1D§region32[c2]
[applied] east§region33#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              east_Matrix1D§region33[c1]
[applied] east§region34#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              east_Matrix1D§region34[c2]
[applied] north§region35#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region35[c1]
[applied] north§region36#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              north_Matrix1D§region36[c2]
[applied] south§region37#Matrix1D(c1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              south_Matrix1D§region37[c1]
[applied] south§region38#Matrix1D(c2)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              south_Matrix1D§region38[c2]
[removedDecl] find south:
                      function (total) int(1..n_containers) --> int(0..deck_length)
[removedDecl] find north:
                      function (total) int(1..n_containers) --> int(0..deck_length)
[removedDecl] find east:
                      function (total) int(1..n_containers) --> int(0..deck_width)
[removedDecl] find west:
                      function (total) int(1..n_containers) --> int(0..deck_width)
[removedDecl] given separation:
                      function (total) set (size 2) of int(1..n_classes) --> int(0..n_upper)
[removedDecl] given class:
                      function (total) int(1..n_containers) --> int(1..n_classes)
[removedDecl] given length:
                      function (total) int(1..n_containers) --> int(1..deck_length)
[removedDecl] given width:
                      function (total) int(1..n_containers) --> int(1..deck_width)
[representation] given separation_AsReln:
                         relation of (set (size 2) of int(1..n_classes) * int(0..n_upper))
                 (#1)
                 RelationAsSet
[configuration] separation_AsReln§region1#RelationAsSet separation_AsReln§region28#RelationAsSet separation_AsReln§region21#RelationAsSet
[addedDecl] given separation_AsReln_RelationAsSet:
                    set of (set (size 2) of int(1..n_classes), int(0..n_upper))
[applied] (sum v__17 in toSet(separation_AsReln§region21#RelationAsSet)
               , (forAll v__18 in v__17[1]
                      . class_Matrix1D§region22[c1] = v__18 \/ class_Matrix1D§region23[c2] = v__18)
                 /\
                 ((exists v__21 in v__17[1] . v__21 = class_Matrix1D§region22[c1])
                  /\
                  (exists v__22 in v__17[1] . v__22 = class_Matrix1D§region23[c2]))
               . v__17[2])
          {rules/refns/relation-asset/relation-asset-toSet.rule}
              (sum v__17 in separation_AsReln_RelationAsSet§region21
                   , (forAll v__18 in v__17[1]
                          . class_Matrix1D§region22[c1] = v__18 \/ class_Matrix1D§region23[c2] = v__18)
                     /\
                     ((exists v__21 in v__17[1] . v__21 = class_Matrix1D§region22[c1])
                      /\
                      (exists v__22 in v__17[1] . v__22 = class_Matrix1D§region23[c2]))
                   . v__17[2])
[applied] (sum v__23 in toSet(separation_AsReln§region28#RelationAsSet)
               , (forAll v__24 in v__23[1]
                      . class_Matrix1D§region29[c1] = v__24 \/ class_Matrix1D§region30[c2] = v__24)
                 /\
                 ((exists v__27 in v__23[1] . v__27 = class_Matrix1D§region29[c1])
                  /\
                  (exists v__28 in v__23[1] . v__28 = class_Matrix1D§region30[c2]))
               . v__23[2])
          {rules/refns/relation-asset/relation-asset-toSet.rule}
              (sum v__23 in separation_AsReln_RelationAsSet§region28
                   , (forAll v__24 in v__23[1]
                          . class_Matrix1D§region29[c1] = v__24 \/ class_Matrix1D§region30[c2] = v__24)
                     /\
                     ((exists v__27 in v__23[1] . v__27 = class_Matrix1D§region29[c1])
                      /\
                      (exists v__28 in v__23[1] . v__28 = class_Matrix1D§region30[c2]))
                   . v__23[2])
[removedDecl] given separation_AsReln:
                      relation of (set (size 2) of int(1..n_classes) * int(0..n_upper))
[representation] given separation_AsReln_RelationAsSet:
                         set of (set (size 2) of int(1..n_classes), int(0..n_upper))
                 (#1)
                 ExplicitVarSize
[configuration] separation_AsReln_RelationAsSet§region28#ExplicitVarSize separation_AsReln_RelationAsSet§region1#ExplicitVarSize separation_AsReln_RelationAsSet§region21#ExplicitVarSize
[addedDecl] given separation_AsReln_RelationAsSet_ExplicitVarSize:
                    matrix indexed by [int(1..2 ** n_classes * (n_upper + 1))] of (bool,
                                                                                   (set (size 2) of int(1..n_classes),
                                                                                    int(0..n_upper)))
[applied] (sum v__17 in separation_AsReln_RelationAsSet§region21#ExplicitVarSize
               , (forAll v__18 in v__17[1]
                      . class_Matrix1D§region22[c1] = v__18 \/ class_Matrix1D§region23[c2] = v__18)
                 /\
                 ((exists v__21 in v__17[1] . v__21 = class_Matrix1D§region22[c1])
                  /\
                  (exists v__22 in v__17[1] . v__22 = class_Matrix1D§region23[c2]))
               . v__17[2])
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (sum v__31 : int(1..2 ** n_classes * (n_upper + 1))
                   , (forAll v__18 in separation_AsReln_RelationAsSet_ExplicitVarSize§region21[v__31,
                                                                                               2,
                                                                                               1]
                          . class_Matrix1D§region22[c1] = v__18 \/ class_Matrix1D§region23[c2] = v__18)
                     /\
                     ((exists v__21 in separation_AsReln_RelationAsSet_ExplicitVarSize§region21[v__31,
                                                                                                2,
                                                                                                1]
                           . v__21 = class_Matrix1D§region22[c1])
                      /\
                      (exists v__22 in separation_AsReln_RelationAsSet_ExplicitVarSize§region21[v__31,
                                                                                                2,
                                                                                                1]
                           . v__22 = class_Matrix1D§region23[c2]))
                     /\
                     separation_AsReln_RelationAsSet_ExplicitVarSize§region21[v__31, 1]
                   . separation_AsReln_RelationAsSet_ExplicitVarSize§region21[v__31, 2, 2])
[applied] (sum v__23 in separation_AsReln_RelationAsSet§region28#ExplicitVarSize
               , (forAll v__24 in v__23[1]
                      . class_Matrix1D§region29[c1] = v__24 \/ class_Matrix1D§region30[c2] = v__24)
                 /\
                 ((exists v__27 in v__23[1] . v__27 = class_Matrix1D§region29[c1])
                  /\
                  (exists v__28 in v__23[1] . v__28 = class_Matrix1D§region30[c2]))
               . v__23[2])
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (sum v__32 : int(1..2 ** n_classes * (n_upper + 1))
                   , (forAll v__24 in separation_AsReln_RelationAsSet_ExplicitVarSize§region28[v__32,
                                                                                               2,
                                                                                               1]
                          . class_Matrix1D§region29[c1] = v__24 \/ class_Matrix1D§region30[c2] = v__24)
                     /\
                     ((exists v__27 in separation_AsReln_RelationAsSet_ExplicitVarSize§region28[v__32,
                                                                                                2,
                                                                                                1]
                           . v__27 = class_Matrix1D§region29[c1])
                      /\
                      (exists v__28 in separation_AsReln_RelationAsSet_ExplicitVarSize§region28[v__32,
                                                                                                2,
                                                                                                1]
                           . v__28 = class_Matrix1D§region30[c2]))
                     /\
                     separation_AsReln_RelationAsSet_ExplicitVarSize§region28[v__32, 1]
                   . separation_AsReln_RelationAsSet_ExplicitVarSize§region28[v__32, 2, 2])
[removedDecl] given separation_AsReln_RelationAsSet_ExplicitVarSize:
                      matrix indexed by [int(1..2 ** n_classes * (n_upper + 1))] of (bool,
                                                                                     (set (size 2) of int(1..n_classes),
                                                                                      int(0..n_upper)))
[removedDecl] given separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2 ** n_classes * (n_upper + 1))] of (set (size 2) of
                                                                                         int(1..n_classes),
                                                                                     int(0..n_upper))
[removedDecl] given separation_AsReln_RelationAsSet:
                      set of (set (size 2) of int(1..n_classes), int(0..n_upper))
[representation] given separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
                         matrix indexed by [int(1..2 ** n_classes * (n_upper + 1))] of set (size 2) of
                                                                                           int(1..n_classes)
                 (#1)
                 Occurrence
[configuration] separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region21#Occurrence separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region1#Occurrence separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region28#Occurrence
[addedDecl] given separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence:
                    matrix indexed by [int(1..2 ** n_classes * (n_upper + 1)),
                                       int(1..n_classes)] of bool
[applied] (forAll v__18 in separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region21#Occurrence[v__31]
               . class_Matrix1D§region22[c1] = v__18 \/ class_Matrix1D§region23[c2] = v__18)
          {rules/refns/set-occurrence/set-occurrence-quantified.rule}
              (forAll v__39 : int(1..n_classes)
                   , separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence§region21[v__31,
                                                                                                       v__39]
                   . class_Matrix1D§region22[c1] = v__39 \/ class_Matrix1D§region23[c2] = v__39)
[applied] (exists v__21 in separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region21#Occurrence[v__31]
               . v__21 = class_Matrix1D§region22[c1])
          {rules/refns/set-occurrence/set-occurrence-quantified.rule}
              (exists v__40 : int(1..n_classes)
                   , separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence§region21[v__31,
                                                                                                       v__40]
                   . v__40 = class_Matrix1D§region22[c1])
[applied] (exists v__22 in separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region21#Occurrence[v__31]
               . v__22 = class_Matrix1D§region23[c2])
          {rules/refns/set-occurrence/set-occurrence-quantified.rule}
              (exists v__41 : int(1..n_classes)
                   , separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence§region21[v__31,
                                                                                                       v__41]
                   . v__41 = class_Matrix1D§region23[c2])
[applied] (forAll v__24 in separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region28#Occurrence[v__32]
               . class_Matrix1D§region29[c1] = v__24 \/ class_Matrix1D§region30[c2] = v__24)
          {rules/refns/set-occurrence/set-occurrence-quantified.rule}
              (forAll v__42 : int(1..n_classes)
                   , separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence§region28[v__32,
                                                                                                       v__42]
                   . class_Matrix1D§region29[c1] = v__42 \/ class_Matrix1D§region30[c2] = v__42)
[applied] (exists v__27 in separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region28#Occurrence[v__32]
               . v__27 = class_Matrix1D§region29[c1])
          {rules/refns/set-occurrence/set-occurrence-quantified.rule}
              (exists v__43 : int(1..n_classes)
                   , separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence§region28[v__32,
                                                                                                       v__43]
                   . v__43 = class_Matrix1D§region29[c1])
[applied] (exists v__28 in separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1§region28#Occurrence[v__32]
               . v__28 = class_Matrix1D§region30[c2])
          {rules/refns/set-occurrence/set-occurrence-quantified.rule}
              (exists v__44 : int(1..n_classes)
                   , separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1_Occurrence§region28[v__32,
                                                                                                       v__44]
                   . v__44 = class_Matrix1D§region30[c2])
[removedDecl] given separation_AsReln_RelationAsSet_ExplicitVarSize_tuple2_tuple1:
                      matrix indexed by [int(1..2 ** n_classes * (n_upper + 1))] of set (size 2) of
                                                                                        int(1..n_classes)