[handleInfDom] given n: int(1..)
~~>
given n: int(1..MAXINT)
[representation] find assign: function (total, surjective) int(1..3 * n) --> int(1..9)
(#2)
AsReln, Matrix1D
[configuration] assign§region1#AsReln assign§region3#AsReln assign§region4#AsReln assign§region2#AsReln
[addedDecl] find assign_AsReln: relation of (int(1..3 * n) * int(1..9))
[applied] assign§region1#AsReln(3 * i + 1)
{rules/refns/function-asreln/function-asreln-image-int.rule}
    (sum v__3 in toSet(assign_AsReln§region1) , v__3[1] = 3 * i + 1 . v__3[2])
[applied] assign§region2#AsReln(3 * i + 2)
{rules/refns/function-asreln/function-asreln-image-int.rule}
    (sum v__4 in toSet(assign_AsReln§region2) , v__4[1] = 3 * i + 2 . v__4[2])
[applied] assign§region3#AsReln(3 * i + 3)
{rules/refns/function-asreln/function-asreln-image-int.rule}
    (sum v__5 in toSet(assign_AsReln§region3) , v__5[1] = 3 * i + 3 . v__5[2])
[applied] assign§region4#AsReln(i)
{rules/refns/function-asreln/function-asreln-image-int.rule}
    (sum v__6 in toSet(assign_AsReln§region4) , v__6[1] = i . v__6[2])
[removedDecl] find assign: function (total, surjective) int(1..3 * n) --> int(1..9)
[representation] find assign_AsReln: relation of (int(1..3 * n) * int(1..9)) (#1) RelationAsSet
[configuration] assign_AsReln§region4#RelationAsSet assign_AsReln§region1#RelationAsSet assign_AsReln§region2#RelationAsSet assign_AsReln§region3#RelationAsSet
[addedDecl] find assign_AsReln_RelationAsSet: set of (int(1..3 * n), int(1..9))
[applied] (sum v__3 in toSet(assign_AsReln§region1#RelationAsSet) , v__3[1] = 3 * i + 1
     . v__3[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__3 in assign_AsReln_RelationAsSet§region1 , v__3[1] = 3 * i + 1
         . v__3[2])
[applied] (sum v__4 in toSet(assign_AsReln§region2#RelationAsSet) , v__4[1] = 3 * i + 2
     . v__4[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__4 in assign_AsReln_RelationAsSet§region2 , v__4[1] = 3 * i + 2
         . v__4[2])
[applied] (sum v__5 in toSet(assign_AsReln§region3#RelationAsSet) , v__5[1] = 3 * i + 3
     . v__5[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__5 in assign_AsReln_RelationAsSet§region3 , v__5[1] = 3 * i + 3
         . v__5[2])
[applied] (sum v__6 in toSet(assign_AsReln§region4#RelationAsSet) , v__6[1] = i . v__6[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__6 in assign_AsReln_RelationAsSet§region4 , v__6[1] = i . v__6[2])
[applied] (sum v__2 in toSet(assign_AsReln§region1#RelationAsSet) . v__1 = v__2[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__2 in assign_AsReln_RelationAsSet§region1 . v__1 = v__2[1])
[applied] (sum v__2 in toSet(assign_AsReln§region2#RelationAsSet) . v__1 = v__2[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__2 in assign_AsReln_RelationAsSet§region2 . v__1 = v__2[1])
[applied] (sum v__2 in toSet(assign_AsReln§region3#RelationAsSet) . v__1 = v__2[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__2 in assign_AsReln_RelationAsSet§region3 . v__1 = v__2[1])
[applied] (sum v__2 in toSet(assign_AsReln§region4#RelationAsSet) . v__1 = v__2[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__2 in assign_AsReln_RelationAsSet§region4 . v__1 = v__2[1])
[applied] (exists v__2 in toSet(assign_AsReln§region1#RelationAsSet) . v__1 = v__2[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (exists v__2 in assign_AsReln_RelationAsSet§region1 . v__1 = v__2[2])
[applied] (exists v__2 in toSet(assign_AsReln§region2#RelationAsSet) . v__1 = v__2[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (exists v__2 in assign_AsReln_RelationAsSet§region2 . v__1 = v__2[2])
[applied] (exists v__2 in toSet(assign_AsReln§region3#RelationAsSet) . v__1 = v__2[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (exists v__2 in assign_AsReln_RelationAsSet§region3 . v__1 = v__2[2])
[applied] (exists v__2 in toSet(assign_AsReln§region4#RelationAsSet) . v__1 = v__2[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (exists v__2 in assign_AsReln_RelationAsSet§region4 . v__1 = v__2[2])
[removedDecl] find assign_AsReln: relation of (int(1..3 * n) * int(1..9))
[representation] find assign_AsReln_RelationAsSet: set of (int(1..3 * n), int(1..9))
(#1)
ExplicitVarSize
[configuration] assign_AsReln_RelationAsSet§region1#ExplicitVarSize assign_AsReln_RelationAsSet§region2#ExplicitVarSize assign_AsReln_RelationAsSet§region3#ExplicitVarSize assign_AsReln_RelationAsSet§region4#ExplicitVarSize
[addedDecl] find assign_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..3 * n * 9)] of (bool, (int(1..3 * n), int(1..9)))
[applied] (sum v__3 in assign_AsReln_RelationAsSet§region1#ExplicitVarSize
     , v__3[1] = 3 * i + 1
     . v__3[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__9 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__9, 2, 1] = 3 * i + 1
           /\
           assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__9, 1]
         . assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__9, 2, 2])
[applied] (sum v__4 in assign_AsReln_RelationAsSet§region2#ExplicitVarSize
     , v__4[1] = 3 * i + 2
     . v__4[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__10 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__10, 2, 1] = 3 * i + 2
           /\
           assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__10, 1]
         . assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__10, 2, 2])
[applied] (sum v__5 in assign_AsReln_RelationAsSet§region3#ExplicitVarSize
     , v__5[1] = 3 * i + 3
     . v__5[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__11 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__11, 2, 1] = 3 * i + 3
           /\
           assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__11, 1]
         . assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__11, 2, 2])
[applied] (sum v__6 in assign_AsReln_RelationAsSet§region4#ExplicitVarSize , v__6[1] = i
     . v__6[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__12 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__12, 2, 1] = i
           /\
           assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__12, 1]
         . assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__12, 2, 2])
[applied] (sum v__2 in assign_AsReln_RelationAsSet§region1#ExplicitVarSize
     . v__1 = v__2[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__13 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__13, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__13, 2, 1])
[applied] (sum v__2 in assign_AsReln_RelationAsSet§region2#ExplicitVarSize
     . v__1 = v__2[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__14 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__14, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__14, 2, 1])
[applied] (sum v__2 in assign_AsReln_RelationAsSet§region3#ExplicitVarSize
     . v__1 = v__2[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__15 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__15, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__15, 2, 1])
[applied] (sum v__2 in assign_AsReln_RelationAsSet§region4#ExplicitVarSize
     . v__1 = v__2[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__16 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__16, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__16, 2, 1])
[applied] (exists v__2 in assign_AsReln_RelationAsSet§region1#ExplicitVarSize
     . v__1 = v__2[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__17 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__17, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region1[v__17, 2, 2])
[applied] (exists v__2 in assign_AsReln_RelationAsSet§region2#ExplicitVarSize
     . v__1 = v__2[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__18 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__18, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region2[v__18, 2, 2])
[applied] (exists v__2 in assign_AsReln_RelationAsSet§region3#ExplicitVarSize
     . v__1 = v__2[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__19 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__19, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region3[v__19, 2, 2])
[applied] (exists v__2 in assign_AsReln_RelationAsSet§region4#ExplicitVarSize
     . v__1 = v__2[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__20 : int(1..3 * n * 9)
         , assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__20, 1]
         . v__1 = assign_AsReln_RelationAsSet_ExplicitVarSize§region4[v__20, 2, 2])
[removedDecl] find assign_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..3 * n * 9)] of (bool, (int(1..3 * n), int(1..9)))
[removedDecl] find assign_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..3 * n * 9)] of (int(1..3 * n), int(1..9))
[removedDecl] find assign_AsReln_RelationAsSet: set of (int(1..3 * n), int(1..9))