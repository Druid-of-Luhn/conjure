[useChannelling] True
[handleEnums] letting VCol be new type enum {rx, ry}
              ~~>
              letting VCol_fromEnum be domain int(1..2)
[handleEnums] letting PCol be new type enum {pr, pg}
              ~~>
              letting PCol_fromEnum be domain int(1..2)
[representation] find valid:
                         set (minSize 1) of function (total) int(1..3) --> (int(1..2), int(1..2))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] valid§region1#Set~ExplicitVarSizeWithMarker
[addedDecl] find valid_Set~ExplicitVarSizeWithMarker:
                    (int(0..12),
                     matrix indexed by [int(1..12)] of function (total)
                                                           int(1..3) --> (int(1..2), int(1..2)))
[addedStructuralCons] (forAll v__3 : int(1..12)
                           , v__3 + 1 <= valid_Set~ExplicitVarSizeWithMarker§region1[1]
                           . valid_Set~ExplicitVarSizeWithMarker§region1[2, v__3]
                             .<
                             valid_Set~ExplicitVarSizeWithMarker§region1[2, v__3 + 1])
                      valid_Set~ExplicitVarSizeWithMarker§region1[1] >= 1
[refn] 0
[removeRefinedDecl] find valid:
                            set (minSize 1) of function (total) int(1..3) --> (int(1..2), int(1..2))
[removedDecl] find valid_Set~ExplicitVarSizeWithMarker:
                      (int(0..12),
                       matrix indexed by [int(1..12)] of function (total)
                                                             int(1..3) --> (int(1..2), int(1..2)))
              Added the following:
              find valid_Set~ExplicitVarSizeWithMarker_tuple1: int(0..12)
              find valid_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..12)] of function (total)
                                                            int(1..3) --> (int(1..2), int(1..2))
[repr] 1
[representation] find valid_Set~ExplicitVarSizeWithMarker_tuple2:
                         matrix indexed by [int(1..12)] of function (total)
                                                               int(1..3) --> (int(1..2), int(1..2))
                 (#2)
                 AsReln, Matrix1D
[configuration] valid_Set~ExplicitVarSizeWithMarker_tuple2§region1#Matrix1D
[addedDecl] find valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D:
                    matrix indexed by [int(1..12), int(1..3)] of (int(1..2), int(1..2))
[refn] 1
[applied] valid_Set~ExplicitVarSizeWithMarker_tuple2§region1#Matrix1D[v__0]
          .<
          valid_Set~ExplicitVarSizeWithMarker_tuple2§region1#Matrix1D[v__0 + 1]
          {rules/refns/vertical/function-matrix1d/DotLt.rule}
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 1]
              .<
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 1]
              \/
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 1]
              =
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 1]
              /\
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 2]
              .<
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 2]
              \/
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 1]
              =
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 1]
              /\
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 2]
              =
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 2]
              /\
              (valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 2, 1]
               .<
               valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 1]
               \/
               valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 2, 1]
               =
               valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 1]
               /\
               valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 2, 2]
               .<
               valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 2])
[applied] valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0,
                                                                      1,
                                                                      1]
          .<
          valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 1]
              <
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 1]
[applied] valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0,
                                                                      1,
                                                                      2]
          .<
          valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 1, 2]
              <
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 1, 2]
[applied] valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0,
                                                                      2,
                                                                      1]
          .<
          valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 2, 1]
              <
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 1]
[applied] valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0,
                                                                      2,
                                                                      2]
          .<
          valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0, 2, 2]
              <
              valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D§region1[v__0 + 1, 2, 2]
[removeRefinedDecl] find valid_Set~ExplicitVarSizeWithMarker_tuple2:
                            matrix indexed by [int(1..12)] of function (total)
                                                                  int(1..3) --> (int(1..2), int(1..2))
[matrixToTuple] valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D∑2
[removedDecl] find valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D:
                      matrix indexed by [int(1..12), int(1..3)] of (int(1..2), int(1..2))
              Added the following:
              find valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D_tuple1:
                      matrix indexed by [int(1..12), int(1..3)] of int(1..2)
              find valid_Set~ExplicitVarSizeWithMarker_tuple2_Matrix1D_tuple2:
                      matrix indexed by [int(1..12), int(1..3)] of int(1..2)
[repr] 2