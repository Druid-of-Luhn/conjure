[useChannelling] True
[representation] find valid:
                         set (minSize 1) of function (total) int(4..5) --> (int(6, 7), int(9))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] valid§region1#Set~ExplicitVarSize
[addedDecl] find valid_Set~ExplicitVarSize:
                    matrix indexed by [int(1..4)] of (bool,
                                                      function (total) int(4..5) --> (int(6, 7), int(9)))
[addedStructuralCons] (forAll v__1 : int(1..3)
                           , valid_Set~ExplicitVarSize§region1[v__1, 1]
                             /\
                             valid_Set~ExplicitVarSize§region1[v__1 + 1, 1]
                           . valid_Set~ExplicitVarSize§region1[v__1, 2]
                             .<
                             valid_Set~ExplicitVarSize§region1[v__1 + 1, 2])
                      /\
                      (forAll v__1 : int(1..3)
                           . valid_Set~ExplicitVarSize§region1[v__1, 1]
                             >=
                             valid_Set~ExplicitVarSize§region1[v__1 + 1, 1])
                      (sum v__2 : int(1..4) . valid_Set~ExplicitVarSize§region1[v__2, 1]) >= 1
[refn] 0
[removeRefinedDecl] find valid:
                            set (minSize 1) of function (total) int(4..5) --> (int(6, 7), int(9))
[matrixToTuple] valid_Set~ExplicitVarSize∑1
[removedDecl] find valid_Set~ExplicitVarSize:
                      matrix indexed by [int(1..4)] of (bool,
                                                        function (total) int(4..5) --> (int(6, 7), int(9)))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple1: matrix indexed by [int(1..4)] of bool
              find valid_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..4)] of function (total)
                                                           int(4..5) --> (int(6, 7), int(9))
[repr] 1
[representation] find valid_Set~ExplicitVarSize_tuple2:
                         matrix indexed by [int(1..4)] of function (total)
                                                              int(4..5) --> (int(6, 7), int(9))
                 (#2)
                 AsReln, Matrix1D
[configuration] valid_Set~ExplicitVarSize_tuple2§region1#Matrix1D
[addedDecl] find valid_Set~ExplicitVarSize_tuple2_Matrix1D:
                    matrix indexed by [int(1..4), int(4..5)] of (int(6, 7), int(9))
[refn] 1
[removeRefinedDecl] find valid_Set~ExplicitVarSize_tuple2:
                            matrix indexed by [int(1..4)] of function (total)
                                                                 int(4..5) --> (int(6, 7), int(9))
[matrixToTuple] valid_Set~ExplicitVarSize_tuple2_Matrix1D∑2
[removedDecl] find valid_Set~ExplicitVarSize_tuple2_Matrix1D:
                      matrix indexed by [int(1..4), int(4..5)] of (int(6, 7), int(9))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple2_Matrix1D_tuple1:
                      matrix indexed by [int(1..4), int(4..5)] of int(6, 7)
              find valid_Set~ExplicitVarSize_tuple2_Matrix1D_tuple2:
                      matrix indexed by [int(1..4), int(4..5)] of int(9)
[repr] 2