language ESSENCE' 1.0

find valid_SetExplicitVarSize_tuple1: matrix indexed by [int(1..6)] of bool
find valid_SetExplicitVarSize_tuple2_Matrix1D:
        matrix indexed by [int(1..6), int(1..3)] of int(1..2)
such that
    (sum v__0 : int(1..6) . valid_SetExplicitVarSize_tuple1[v__0]) >= 1,
    forAll v__0 : int(1..5)
        . valid_SetExplicitVarSize_tuple1[v__0]
          /\
          valid_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          flatten(valid_SetExplicitVarSize_tuple2_Matrix1D[v__0, ..])
          <lex
          flatten(valid_SetExplicitVarSize_tuple2_Matrix1D[v__0 + 1, ..]),
    forAll v__0 : int(1..5)
        . valid_SetExplicitVarSize_tuple1[v__0]
          >=
          valid_SetExplicitVarSize_tuple1[v__0 + 1]
