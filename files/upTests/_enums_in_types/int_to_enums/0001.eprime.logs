[useChannelling] True
[handleEnums] letting VCol be new type enum {rx, ry}
              ~~>
              letting VCol_fromEnum be domain int(1..2)
[representation] find valid: function (total) int(1..3) --> int(1..2)
                 (#2)
                 AsReln, Matrix1D
[configuration] valid§region1#AsReln
[addedDecl] find valid_AsReln: relation of (int(1..3) * int(1..2))
[addedStructuralCons] (forAll v__1 : int(1..3)
                           . (sum v__2 in toSet(valid_AsReln§region1) . v__1 = v__2[1]) = 1)
[refn] 0
[removeRefinedDecl] find valid: function (total) int(1..3) --> int(1..2)
[repr] 1
[representation] find valid_AsReln: relation of (int(1..3) * int(1..2))
                 (#2)
                 RelationAsSet, RelationIntMatrix2
[configuration] valid_AsReln§region1#RelationAsSet
[addedDecl] find valid_AsReln_RelationAsSet: set of (int(1..3), int(1..2))
[refn] 1
[applied] (sum v__1 in toSet(valid_AsReln§region1#RelationAsSet)
               . v__0 = v__1[1])
          {rules/refns/vertical/relation-RelationAsSet/relation-RelationAsSet-toSet.rule}
              (sum v__1 in valid_AsReln_RelationAsSet§region1 . v__0 = v__1[1])
[removeRefinedDecl] find valid_AsReln: relation of (int(1..3) * int(1..2))
[repr] 2
[representation] find valid_AsReln_RelationAsSet: set of (int(1..3), int(1..2))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] valid_AsReln_RelationAsSet§region1#Set~ExplicitVarSize
[addedDecl] find valid_AsReln_RelationAsSet_Set~ExplicitVarSize:
                    matrix indexed by [int(1..6)] of (bool, (int(1..3), int(1..2)))
[addedStructuralCons] (forAll v__3 : int(1..5)
                           , valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 1]
                             /\
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 1]
                           . valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 1]
                             .<
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 1]
                             \/
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 1]
                             =
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 1]
                             /\
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 2]
                             .<
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 2])
                      /\
                      (forAll v__3 : int(1..5)
                           . valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 1]
                             >=
                             valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 1])
[refn] 2
[applied] (sum v__1 in valid_AsReln_RelationAsSet§region1#Set~ExplicitVarSize
               . v__0 = v__1[1])
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (sum v__5 : int(1..6)
                   , valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__5, 1]
                   . v__0 = valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__5, 2, 1])
[applied] valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 1]
          .<
          valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 1]
              <
              valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 1]
[applied] valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 2]
          .<
          valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3, 2, 2]
              <
              valid_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__3 + 1, 2, 2]
[removeRefinedDecl] find valid_AsReln_RelationAsSet:
                            set of (int(1..3), int(1..2))
[matrixToTuple] valid_AsReln_RelationAsSet_Set~ExplicitVarSize∑1
[removedDecl] find valid_AsReln_RelationAsSet_Set~ExplicitVarSize:
                      matrix indexed by [int(1..6)] of (bool, (int(1..3), int(1..2)))
              Added the following:
              find valid_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple1:
                      matrix indexed by [int(1..6)] of bool
              find valid_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..6)] of (int(1..3), int(1..2))
[matrixToTuple] valid_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2∑1
[removedDecl] find valid_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..6)] of (int(1..3), int(1..2))
              Added the following:
              find valid_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1:
                      matrix indexed by [int(1..6)] of int(1..3)
              find valid_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple2:
                      matrix indexed by [int(1..6)] of int(1..2)
[repr] 3