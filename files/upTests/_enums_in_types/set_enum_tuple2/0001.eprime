language ESSENCE' 1.0

find valid_SetExplicitVarSize_tuple1: matrix indexed by [int(1..2)] of bool
find valid_SetExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..2)] of int(1..2)
find valid_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..2)] of int(1..1)
such that
    valid_SetExplicitVarSize_tuple1[1] /\ valid_SetExplicitVarSize_tuple1[2]
    ->
    valid_SetExplicitVarSize_tuple2_tuple1[1]
    <
    valid_SetExplicitVarSize_tuple2_tuple1[2]
    \/
    valid_SetExplicitVarSize_tuple2_tuple1[1]
    =
    valid_SetExplicitVarSize_tuple2_tuple1[2]
    /\
    valid_SetExplicitVarSize_tuple2_tuple2[1]
    <
    valid_SetExplicitVarSize_tuple2_tuple2[2],
    valid_SetExplicitVarSize_tuple1[1] >= valid_SetExplicitVarSize_tuple1[2],
    (sum v__0 : int(1..2) . valid_SetExplicitVarSize_tuple1[v__0]) >= 1
