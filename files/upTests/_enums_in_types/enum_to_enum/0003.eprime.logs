[useChannelling] True
[handleEnums] letting VCol be new type enum {rx, ry}
              ~~>
              letting VCol_fromEnum be domain int(1..2)
[representation] find valid: function (total) int(1..3) --> int(1..2)
                 (#2)
                 AsReln, Matrix1D
[configuration] valid§region1#AsReln
[addedDecl] find valid_AsReln: relation of (int(1..3) * int(1..2))
[addedStructuralCons] (forAll v__1 : int(1..3)
                           . (sum v__2 in toSet(valid_AsReln§region1) . v__1 = v__2[1]) = 1)
[refn] 0
[removeRefinedDecl] find valid: function (total) int(1..3) --> int(1..2)
[repr] 1
[representation] find valid_AsReln: relation of (int(1..3) * int(1..2))
                 (#2)
                 RelationAsSet, RelationIntMatrix2
[configuration] valid_AsReln§region1#RelationIntMatrix2
[addedDecl] find valid_AsReln_RelationIntMatrix2:
                    matrix indexed by [int(1..3), int(1..2)] of bool
[refn] 1
[applied] (sum v__1 in toSet(valid_AsReln§region1#RelationIntMatrix2)
               . v__0 = v__1[1])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__3 : int(1..3)
                   . (sum v__4 : int(1..2) , valid_AsReln_RelationIntMatrix2§region1[v__3, v__4]
                          . v__0 = v__3))
[removeRefinedDecl] find valid_AsReln: relation of (int(1..3) * int(1..2))
[repr] 2