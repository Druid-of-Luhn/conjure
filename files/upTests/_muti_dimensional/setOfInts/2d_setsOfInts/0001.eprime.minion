MINION 3
**VARIABLES**
BOOL x_ExplicitVarSize_tuple1_00000_00000_00000 #
BOOL x_ExplicitVarSize_tuple1_00000_00000_00001 #
BOOL x_ExplicitVarSize_tuple1_00000_00001_00000 #
BOOL x_ExplicitVarSize_tuple1_00000_00001_00001 #
BOOL x_ExplicitVarSize_tuple1_00001_00000_00000 #
BOOL x_ExplicitVarSize_tuple1_00001_00000_00001 #
BOOL x_ExplicitVarSize_tuple1_00001_00001_00000 #
BOOL x_ExplicitVarSize_tuple1_00001_00001_00001 #
DISCRETE x_ExplicitVarSize_tuple2_00000_00000_00000 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00000_00000_00001 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00000_00001_00000 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00000_00001_00001 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00001_00000_00000 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00001_00000_00001 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00001_00001_00000 #
{6..8}
DISCRETE x_ExplicitVarSize_tuple2_00001_00001_00001 #
{6..8}
BOOL aux0 #(x_ExplicitVarSize_tuple1_00001_00001_00001 /\ x_ExplicitVarSize_tuple1_00001_00001_00000)
BOOL aux1 #(x_ExplicitVarSize_tuple2_00001_00001_00000<x_ExplicitVarSize_tuple2_00001_00001_00001)
BOOL aux2 #(x_ExplicitVarSize_tuple1_00001_00000_00001 /\ x_ExplicitVarSize_tuple1_00001_00000_00000)
BOOL aux3 #(x_ExplicitVarSize_tuple2_00001_00000_00000<x_ExplicitVarSize_tuple2_00001_00000_00001)
BOOL aux4 #(x_ExplicitVarSize_tuple1_00000_00001_00001 /\ x_ExplicitVarSize_tuple1_00000_00001_00000)
BOOL aux5 #(x_ExplicitVarSize_tuple2_00000_00001_00000<x_ExplicitVarSize_tuple2_00000_00001_00001)
BOOL aux6 #(x_ExplicitVarSize_tuple1_00000_00000_00001 /\ x_ExplicitVarSize_tuple1_00000_00000_00000)
BOOL aux7 #(x_ExplicitVarSize_tuple2_00000_00000_00000<x_ExplicitVarSize_tuple2_00000_00000_00001)
BOOL aux8 #(8=x_ExplicitVarSize_tuple2_00001_00001_00000)
BOOL aux9 #(8=x_ExplicitVarSize_tuple2_00001_00001_00001)
BOOL aux10 #((6=x_ExplicitVarSize_tuple2_00001_00000_00000) \/ (7=x_ExplicitVarSize_tuple2_00001_00000_00000))
BOOL aux11 #((6=x_ExplicitVarSize_tuple2_00001_00000_00001) \/ (7=x_ExplicitVarSize_tuple2_00001_00000_00001))
BOOL aux12 #(7=x_ExplicitVarSize_tuple2_00000_00001_00000)
BOOL aux13 #(7=x_ExplicitVarSize_tuple2_00000_00001_00001)
BOOL aux14 #(6=x_ExplicitVarSize_tuple2_00000_00000_00000)
BOOL aux15 #(6=x_ExplicitVarSize_tuple2_00000_00000_00001)
**SEARCH**
PRINT[[x_ExplicitVarSize_tuple1_00000_00000_00000],[x_ExplicitVarSize_tuple1_00000_00000_00001],[x_ExplicitVarSize_tuple1_00000_00001_00000],[x_ExplicitVarSize_tuple1_00000_00001_00001],[x_ExplicitVarSize_tuple1_00001_00000_00000],[x_ExplicitVarSize_tuple1_00001_00000_00001],[x_ExplicitVarSize_tuple1_00001_00001_00000],[x_ExplicitVarSize_tuple1_00001_00001_00001],[x_ExplicitVarSize_tuple2_00000_00000_00000],[x_ExplicitVarSize_tuple2_00000_00000_00001],[x_ExplicitVarSize_tuple2_00000_00001_00000],[x_ExplicitVarSize_tuple2_00000_00001_00001],[x_ExplicitVarSize_tuple2_00001_00000_00000],[x_ExplicitVarSize_tuple2_00001_00000_00001],[x_ExplicitVarSize_tuple2_00001_00001_00000],[x_ExplicitVarSize_tuple2_00001_00001_00001]]
VARORDER STATIC [x_ExplicitVarSize_tuple1_00000_00000_00000,x_ExplicitVarSize_tuple1_00000_00000_00001,x_ExplicitVarSize_tuple1_00000_00001_00000,x_ExplicitVarSize_tuple1_00000_00001_00001,x_ExplicitVarSize_tuple1_00001_00000_00000,x_ExplicitVarSize_tuple1_00001_00000_00001,x_ExplicitVarSize_tuple1_00001_00001_00000,x_ExplicitVarSize_tuple1_00001_00001_00001,x_ExplicitVarSize_tuple2_00000_00000_00000,x_ExplicitVarSize_tuple2_00000_00000_00001,x_ExplicitVarSize_tuple2_00000_00001_00000,x_ExplicitVarSize_tuple2_00000_00001_00001,x_ExplicitVarSize_tuple2_00001_00000_00000,x_ExplicitVarSize_tuple2_00001_00000_00001,x_ExplicitVarSize_tuple2_00001_00001_00000,x_ExplicitVarSize_tuple2_00001_00001_00001]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15]
**CONSTRAINTS**
reify(watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00001_00001,1),w-literal(x_ExplicitVarSize_tuple1_00001_00001_00000,1)}), aux0)
reify(ineq(x_ExplicitVarSize_tuple2_00001_00001_00000, x_ExplicitVarSize_tuple2_00001_00001_00001, -1), aux1)
reify(watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00000_00001,1),w-literal(x_ExplicitVarSize_tuple1_00001_00000_00000,1)}), aux2)
reify(ineq(x_ExplicitVarSize_tuple2_00001_00000_00000, x_ExplicitVarSize_tuple2_00001_00000_00001, -1), aux3)
reify(watched-and({w-literal(x_ExplicitVarSize_tuple1_00000_00001_00001,1),w-literal(x_ExplicitVarSize_tuple1_00000_00001_00000,1)}), aux4)
reify(ineq(x_ExplicitVarSize_tuple2_00000_00001_00000, x_ExplicitVarSize_tuple2_00000_00001_00001, -1), aux5)
reify(watched-and({w-literal(x_ExplicitVarSize_tuple1_00000_00000_00001,1),w-literal(x_ExplicitVarSize_tuple1_00000_00000_00000,1)}), aux6)
reify(ineq(x_ExplicitVarSize_tuple2_00000_00000_00000, x_ExplicitVarSize_tuple2_00000_00000_00001, -1), aux7)
reify(w-literal(x_ExplicitVarSize_tuple2_00001_00001_00000,8), aux8)
reify(w-literal(x_ExplicitVarSize_tuple2_00001_00001_00001,8), aux9)
reify(watched-or({w-literal(x_ExplicitVarSize_tuple2_00001_00000_00000,6),w-literal(x_ExplicitVarSize_tuple2_00001_00000_00000,7)}), aux10)
reify(watched-or({w-literal(x_ExplicitVarSize_tuple2_00001_00000_00001,6),w-literal(x_ExplicitVarSize_tuple2_00001_00000_00001,7)}), aux11)
reify(w-literal(x_ExplicitVarSize_tuple2_00000_00001_00000,7), aux12)
reify(w-literal(x_ExplicitVarSize_tuple2_00000_00001_00001,7), aux13)
reify(w-literal(x_ExplicitVarSize_tuple2_00000_00000_00000,6), aux14)
reify(w-literal(x_ExplicitVarSize_tuple2_00000_00000_00001,6), aux15)
ineq(aux0, aux1, 0)
ineq(aux2, aux3, 0)
ineq(aux4, aux5, 0)
ineq(aux6, aux7, 0)
watched-or({watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00001_00000,1),w-literal(x_ExplicitVarSize_tuple2_00001_00001_00000,8)}),watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00001_00001,1),w-literal(x_ExplicitVarSize_tuple2_00001_00001_00001,8)})})
watched-or({watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00000_00000,1),w-literal(x_ExplicitVarSize_tuple2_00001_00000_00000,7)}),watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00000_00001,1),w-literal(x_ExplicitVarSize_tuple2_00001_00000_00001,7)})})
watched-or({watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00000_00000,1),w-literal(x_ExplicitVarSize_tuple2_00001_00000_00000,6)}),watched-and({w-literal(x_ExplicitVarSize_tuple1_00001_00000_00001,1),w-literal(x_ExplicitVarSize_tuple2_00001_00000_00001,6)})})
watched-or({watched-and({w-literal(x_ExplicitVarSize_tuple1_00000_00001_00000,1),w-literal(x_ExplicitVarSize_tuple2_00000_00001_00000,7)}),watched-and({w-literal(x_ExplicitVarSize_tuple1_00000_00001_00001,1),w-literal(x_ExplicitVarSize_tuple2_00000_00001_00001,7)})})
watched-or({watched-and({w-literal(x_ExplicitVarSize_tuple1_00000_00000_00000,1),w-literal(x_ExplicitVarSize_tuple2_00000_00000_00000,6)}),watched-and({w-literal(x_ExplicitVarSize_tuple1_00000_00000_00001,1),w-literal(x_ExplicitVarSize_tuple2_00000_00000_00001,6)})})
sumgeq([x_ExplicitVarSize_tuple1_00001_00001_00000,x_ExplicitVarSize_tuple1_00001_00001_00001],1)
sumgeq([x_ExplicitVarSize_tuple1_00001_00000_00000,x_ExplicitVarSize_tuple1_00001_00000_00001],1)
sumgeq([x_ExplicitVarSize_tuple1_00000_00001_00000,x_ExplicitVarSize_tuple1_00000_00001_00001],1)
sumgeq([x_ExplicitVarSize_tuple1_00000_00000_00000,x_ExplicitVarSize_tuple1_00000_00000_00001],1)
ineq(x_ExplicitVarSize_tuple1_00001_00001_00000, x_ExplicitVarSize_tuple1_00001_00001_00001, 0)
ineq(x_ExplicitVarSize_tuple1_00001_00000_00000, x_ExplicitVarSize_tuple1_00001_00000_00001, 0)
ineq(x_ExplicitVarSize_tuple1_00000_00000_00000, x_ExplicitVarSize_tuple1_00000_00000_00001, 0)
ineq(x_ExplicitVarSize_tuple1_00000_00001_00000, x_ExplicitVarSize_tuple1_00000_00001_00001, 0)
ineq(x_ExplicitVarSize_tuple1_00001_00001_00000, aux8, 0)
ineq(x_ExplicitVarSize_tuple1_00001_00001_00001, aux9, 0)
ineq(x_ExplicitVarSize_tuple1_00001_00000_00000, aux10, 0)
ineq(x_ExplicitVarSize_tuple1_00001_00000_00001, aux11, 0)
ineq(x_ExplicitVarSize_tuple1_00000_00001_00000, aux12, 0)
ineq(x_ExplicitVarSize_tuple1_00000_00001_00001, aux13, 0)
ineq(x_ExplicitVarSize_tuple1_00000_00000_00000, aux14, 0)
ineq(x_ExplicitVarSize_tuple1_00000_00000_00001, aux15, 0)
**EOF**
