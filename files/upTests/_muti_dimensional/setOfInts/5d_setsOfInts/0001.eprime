language ESSENCE' 1.0

find x_Explicit:
        matrix indexed by [int(1..2),
                           int(3, 4),
                           int(5, 6),
                           int(7, 8),
                           int(1, 2),
                           int(1..1)] of int(6..8)
such that
    x_Explicit[1, 3, 5, 7, 1, 1] = 6,
    x_Explicit[1, 3, 5, 7, 2, 1] = 7,
    x_Explicit[1, 3, 5, 8, 1, 1] = 8,
    x_Explicit[1, 3, 5, 8, 2, 1] = 6,
    6 = x_Explicit[1, 3, 5, 7, 1, 1],
    6 = x_Explicit[1, 3, 5, 8, 2, 1],
    7 = x_Explicit[1, 3, 5, 7, 2, 1],
    8 = x_Explicit[1, 3, 5, 8, 1, 1],
    allDiff(x_Explicit[1, 3, 5, 7, 1, ..]),
    allDiff(x_Explicit[1, 3, 5, 7, 2, ..]),
    allDiff(x_Explicit[1, 3, 5, 8, 1, ..]),
    allDiff(x_Explicit[1, 3, 5, 8, 2, ..]),
    allDiff(x_Explicit[1, 3, 6, 7, 1, ..]),
    allDiff(x_Explicit[1, 3, 6, 7, 2, ..]),
    allDiff(x_Explicit[1, 3, 6, 8, 1, ..]),
    allDiff(x_Explicit[1, 3, 6, 8, 2, ..]),
    allDiff(x_Explicit[1, 4, 5, 7, 1, ..]),
    allDiff(x_Explicit[1, 4, 5, 7, 2, ..]),
    allDiff(x_Explicit[1, 4, 5, 8, 1, ..]),
    allDiff(x_Explicit[1, 4, 5, 8, 2, ..]),
    allDiff(x_Explicit[1, 4, 6, 7, 1, ..]),
    allDiff(x_Explicit[1, 4, 6, 7, 2, ..]),
    allDiff(x_Explicit[1, 4, 6, 8, 1, ..]),
    allDiff(x_Explicit[1, 4, 6, 8, 2, ..]),
    allDiff(x_Explicit[2, 3, 5, 7, 1, ..]),
    allDiff(x_Explicit[2, 3, 5, 7, 2, ..]),
    allDiff(x_Explicit[2, 3, 5, 8, 1, ..]),
    allDiff(x_Explicit[2, 3, 5, 8, 2, ..]),
    allDiff(x_Explicit[2, 3, 6, 7, 1, ..]),
    allDiff(x_Explicit[2, 3, 6, 7, 2, ..]),
    allDiff(x_Explicit[2, 3, 6, 8, 1, ..]),
    allDiff(x_Explicit[2, 3, 6, 8, 2, ..]),
    allDiff(x_Explicit[2, 4, 5, 7, 1, ..]),
    allDiff(x_Explicit[2, 4, 5, 7, 2, ..]),
    allDiff(x_Explicit[2, 4, 5, 8, 1, ..]),
    allDiff(x_Explicit[2, 4, 5, 8, 2, ..]),
    allDiff(x_Explicit[2, 4, 6, 7, 1, ..]),
    allDiff(x_Explicit[2, 4, 6, 7, 2, ..]),
    allDiff(x_Explicit[2, 4, 6, 8, 1, ..]),
    allDiff(x_Explicit[2, 4, 6, 8, 2, ..])
