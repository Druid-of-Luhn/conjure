language ESSENCE' 1.0

find x_RelationAsSet_SetExplicitVarSize_tuple1:
        matrix indexed by [int(1..2)] of bool
find x_RelationAsSet_SetExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..2)] of int(1)
find x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..2)] of int(4)
find x_RelationAsSet_SetExplicitVarSize_tuple2_tuple3:
        matrix indexed by [int(1..2)] of int(1, 7)
such that
    x_RelationAsSet_SetExplicitVarSize_tuple1[1]
    /\
    x_RelationAsSet_SetExplicitVarSize_tuple1[2]
    ->
    x_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[1]
    <
    x_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[2]
    \/
    x_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[1]
    =
    x_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[2]
    /\
    (x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[1]
     <
     x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[2]
     \/
     x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[1]
     =
     x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[2]
     /\
     x_RelationAsSet_SetExplicitVarSize_tuple2_tuple3[1]
     <
     x_RelationAsSet_SetExplicitVarSize_tuple2_tuple3[2]),
    x_RelationAsSet_SetExplicitVarSize_tuple1[1]
    <=
    x_RelationAsSet_SetExplicitVarSize_tuple1[2],
    (sum v__0 : int(1..2) . x_RelationAsSet_SetExplicitVarSize_tuple1[v__0] * 1)
    >=
    2,
    forAll v__0 : int(1..2)
        . x_RelationAsSet_SetExplicitVarSize_tuple1[v__0]
          ->
          x_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0]
          !=
          x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__0]
          /\
          x_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__0]
          !=
          x_RelationAsSet_SetExplicitVarSize_tuple2_tuple3[v__0]
