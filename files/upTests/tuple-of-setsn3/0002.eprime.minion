MINION 3
# CSE_number = 6
# CSE_eliminated_expressions = 14
# CSE_total_size = 30
**VARIABLES**
DISCRETE b_tuple1 #
{0..9}
DISCRETE b_tuple2 #
{3..8}
BOOL b_tuple3_SetExplicitVarSize_tuple1_00000 #
BOOL b_tuple3_SetExplicitVarSize_tuple1_00001 #
DISCRETE b_tuple3_SetExplicitVarSize_tuple2_00000 #
{3..4}
DISCRETE b_tuple3_SetExplicitVarSize_tuple2_00001 #
{3..4}
DISCRETE c_tuple1 #
{0..9}
DISCRETE c_tuple2_SetExplicitVarSizeWithDefault_00000 #
{2..4}
DISCRETE c_tuple2_SetExplicitVarSizeWithDefault_00001 #
{2..4}
BOOL c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000 #
BOOL c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001 #
DISCRETE c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000 #
{3..4}
DISCRETE c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001 #
{3..4}
DISCRETE c_tuple3_tuple2_tuple1 #
{3..4}
BOOL c_tuple3_tuple2_tuple2 #
BOOL aux0 #CSE: 3 occurrences of: (c_tuple2_SetExplicitVarSizeWithDefault_00000 != 2)
BOOL aux1 #CSE: 3 occurrences of: (c_tuple2_SetExplicitVarSizeWithDefault_00001 != 2)
BOOL aux2 #CSE: 2 occurrences of: (c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000=4)
BOOL aux3 #CSE: 2 occurrences of: (c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000=3)
BOOL aux4 #CSE: 2 occurrences of: (c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001=3)
BOOL aux5 #CSE: 2 occurrences of: (c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001=4)
BOOL aux6 #(aux0 /\ aux1)
BOOL aux7 #(c_tuple2_SetExplicitVarSizeWithDefault_00000<c_tuple2_SetExplicitVarSizeWithDefault_00001)
BOOL aux8 #(b_tuple3_SetExplicitVarSize_tuple1_00000 /\ b_tuple3_SetExplicitVarSize_tuple1_00001)
BOOL aux9 #(b_tuple3_SetExplicitVarSize_tuple2_00000<b_tuple3_SetExplicitVarSize_tuple2_00001)
BOOL aux10 #(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000 /\ c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001)
BOOL aux11 #(c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000<c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001)
BOOL aux12 #(aux3 \/ aux2)
BOOL aux13 #(aux4 \/ aux5)
BOOL aux14 #(((c_tuple2_SetExplicitVarSizeWithDefault_00000=3) /\ aux0) \/ ((c_tuple2_SetExplicitVarSizeWithDefault_00001=3) /\ aux1))
BOOL aux15 #(((3=b_tuple3_SetExplicitVarSize_tuple2_00000) /\ b_tuple3_SetExplicitVarSize_tuple1_00000) \/ ((3=b_tuple3_SetExplicitVarSize_tuple2_00001) /\ b_tuple3_SetExplicitVarSize_tuple1_00001))
BOOL aux16 #(((c_tuple2_SetExplicitVarSizeWithDefault_00000=4) /\ aux0) \/ ((c_tuple2_SetExplicitVarSizeWithDefault_00001=4) /\ aux1))
BOOL aux17 #(((4=b_tuple3_SetExplicitVarSize_tuple2_00000) /\ b_tuple3_SetExplicitVarSize_tuple1_00000) \/ ((4=b_tuple3_SetExplicitVarSize_tuple2_00001) /\ b_tuple3_SetExplicitVarSize_tuple1_00001))
**SEARCH**
PRINT[[b_tuple1],[b_tuple2],[b_tuple3_SetExplicitVarSize_tuple1_00000],[b_tuple3_SetExplicitVarSize_tuple1_00001],[b_tuple3_SetExplicitVarSize_tuple2_00000],[b_tuple3_SetExplicitVarSize_tuple2_00001],[c_tuple1],[c_tuple2_SetExplicitVarSizeWithDefault_00000],[c_tuple2_SetExplicitVarSizeWithDefault_00001],[c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000],[c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001],[c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000],[c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001],[c_tuple3_tuple2_tuple1],[c_tuple3_tuple2_tuple2]]
VARORDER STATIC [b_tuple1,b_tuple2,b_tuple3_SetExplicitVarSize_tuple1_00000,b_tuple3_SetExplicitVarSize_tuple1_00001,b_tuple3_SetExplicitVarSize_tuple2_00000,b_tuple3_SetExplicitVarSize_tuple2_00001,c_tuple1,c_tuple2_SetExplicitVarSizeWithDefault_00000,c_tuple2_SetExplicitVarSizeWithDefault_00001,c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000,c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001,c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000,c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001,c_tuple3_tuple2_tuple1,c_tuple3_tuple2_tuple2]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17]
**CONSTRAINTS**
reify(watched-and({w-literal(aux0,1),w-literal(aux1,1)}), aux6)
reify(ineq(c_tuple2_SetExplicitVarSizeWithDefault_00000, c_tuple2_SetExplicitVarSizeWithDefault_00001, -1), aux7)
reify(watched-and({w-literal(b_tuple3_SetExplicitVarSize_tuple1_00000,1),w-literal(b_tuple3_SetExplicitVarSize_tuple1_00001,1)}), aux8)
reify(ineq(b_tuple3_SetExplicitVarSize_tuple2_00000, b_tuple3_SetExplicitVarSize_tuple2_00001, -1), aux9)
reify(watched-and({w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000,1),w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001,1)}), aux10)
reify(ineq(c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000, c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001, -1), aux11)
reify(watched-or({w-literal(aux3,1),w-literal(aux2,1)}), aux12)
reify(watched-or({w-literal(aux4,1),w-literal(aux5,1)}), aux13)
reify(watched-or({watched-and({w-literal(c_tuple2_SetExplicitVarSizeWithDefault_00000,3),w-literal(aux0,1)}),watched-and({w-literal(c_tuple2_SetExplicitVarSizeWithDefault_00001,3),w-literal(aux1,1)})}), aux14)
reify(watched-or({watched-and({w-literal(b_tuple3_SetExplicitVarSize_tuple2_00000,3),w-literal(b_tuple3_SetExplicitVarSize_tuple1_00000,1)}),watched-and({w-literal(b_tuple3_SetExplicitVarSize_tuple2_00001,3),w-literal(b_tuple3_SetExplicitVarSize_tuple1_00001,1)})}), aux15)
reify(watched-or({watched-and({w-literal(c_tuple2_SetExplicitVarSizeWithDefault_00000,4),w-literal(aux0,1)}),watched-and({w-literal(c_tuple2_SetExplicitVarSizeWithDefault_00001,4),w-literal(aux1,1)})}), aux16)
reify(watched-or({watched-and({w-literal(b_tuple3_SetExplicitVarSize_tuple2_00000,4),w-literal(b_tuple3_SetExplicitVarSize_tuple1_00000,1)}),watched-and({w-literal(b_tuple3_SetExplicitVarSize_tuple2_00001,4),w-literal(b_tuple3_SetExplicitVarSize_tuple1_00001,1)})}), aux17)
reify(diseq(c_tuple2_SetExplicitVarSizeWithDefault_00000,2), aux0)
reify(diseq(c_tuple2_SetExplicitVarSizeWithDefault_00001,2), aux1)
reify(w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000,4), aux2)
reify(w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple2_00000,3), aux3)
reify(w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001,3), aux4)
reify(w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple2_00001,4), aux5)
ineq(aux6, aux7, 0)
ineq(aux8, aux9, 0)
ineq(aux10, aux11, 0)
ineq(b_tuple1, 2, -1)
ineq(b_tuple3_SetExplicitVarSize_tuple1_00000, b_tuple3_SetExplicitVarSize_tuple1_00001, 0)
ineq(c_tuple2_SetExplicitVarSizeWithDefault_00000, c_tuple2_SetExplicitVarSizeWithDefault_00001, 0)
ineq(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000, c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001, 0)
w-literal(c_tuple1,1)
w-literal(c_tuple3_tuple2_tuple1,3)
w-literal(c_tuple3_tuple2_tuple2,1)
ineq(b_tuple1, b_tuple2, -1)
watched-or({watched-and({w-literal(aux3,1),w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000,1)}),watched-and({w-literal(aux4,1),w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001,1)})})
watched-or({watched-and({w-literal(aux2,1),w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000,1)}),watched-and({w-literal(aux5,1),w-literal(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001,1)})})
ineq(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00000, aux12, 0)
ineq(c_tuple3_tuple1_SetExplicitVarSize_tuple1_00001, aux13, 0)
eq(aux14, aux15)
eq(aux16, aux17)
**EOF**
