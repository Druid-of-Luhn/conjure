[removedDecl] find pain:
                      matrix indexed by [int(1..2), int(3)] of ((set (size 1) of int(1, 2),
                                                                 set (size 1) of int(4, 5)),
                                                                set of int(8, 9))
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1..2), int(3)] of (set (size 1) of int(1, 2),
                                                                set (size 1) of int(4, 5))
[representation] find pain_tuple1_tuple1:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
                 (#2)
                 Explicit, Occurrence
[representation] find pain_tuple1_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
                 (#2)
                 Explicit, Occurrence
[representation] find pain_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set of int(8, 9)
                 (#2)
                 ExplicitVarSize, Occurrence
[configuration] pain_tuple1_tuple1§region1#Explicit pain_tuple1_tuple1§region3#Explicit pain_tuple1_tuple2§region2#Explicit pain_tuple1_tuple2§region4#Explicit pain_tuple2§region5#ExplicitVarSize pain_tuple2§region6#ExplicitVarSize
[addedDecl] (find pain_tuple2:
                     matrix indexed by [int(1..2), int(3)] of set of int(8, 9),
             find pain_tuple2_ExplicitVarSize:
                     matrix indexed by [int(1..2), int(3), int(1..2)] of (bool, int(8, 9)))
[addedDecl] (find pain_tuple1_tuple2:
                     matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5),
             find pain_tuple1_tuple2_Explicit:
                     matrix indexed by [int(1..2), int(3), int(1..1)] of int(4, 5))
[addedDecl] (find pain_tuple1_tuple1:
                     matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2),
             find pain_tuple1_tuple1_Explicit:
                     matrix indexed by [int(1..2), int(3), int(1..1)] of int(1, 2))
[fullEvaluator empty range] (forAll v__13 : int(1..0)
                                 . pain_tuple1_tuple2_Explicit§regionS[v__14, v__15, v__13]
                                   <
                                   pain_tuple1_tuple2_Explicit§regionS[v__14, v__15, v__13 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
                                 . pain_tuple1_tuple1_Explicit§regionS[v__4, v__5, v__3]
                                   <
                                   pain_tuple1_tuple1_Explicit§regionS[v__4, v__5, v__3 + 1])
[applied] pain_tuple1_tuple1§region1#Explicit[1, 3] = {2}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region1#Explicit[1, 3] subsetEq {2}
              /\
              pain_tuple1_tuple1§region1#Explicit[1, 3] supsetEq {2}
[applied] pain_tuple1_tuple1§region1#Explicit[1, 3] subsetEq {2}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__27 in pain_tuple1_tuple1§region1#Explicit[1, 3] . v__27 in {2})
[applied] v__27 in {2}
          {rules/refns/set-in-to-quantified.rule}
              2 = v__27
[simplified] 2
             ~~>
             2
[applied] (forAll v__27 in pain_tuple1_tuple1§region1#Explicit[1, 3]
               . 2 = v__27)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__29 : int(1..1)
                   . 2 = pain_tuple1_tuple1_Explicit§region1[1, 3, v__29])
[applied] pain_tuple1_tuple1§region1#Explicit[1, 3] supsetEq {2}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {2} subsetEq pain_tuple1_tuple1§region1#Explicit[1, 3]
[applied] {2} subsetEq pain_tuple1_tuple1§region1#Explicit[1, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              2 in pain_tuple1_tuple1§region1#Explicit[1, 3]
[applied] 2 in pain_tuple1_tuple1§region1#Explicit[1, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__31 in pain_tuple1_tuple1§region1#Explicit[1, 3] . v__31 = 2)
[applied] (exists v__31 in pain_tuple1_tuple1§region1#Explicit[1, 3]
               . v__31 = 2)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__32 : int(1..1)
                   . pain_tuple1_tuple1_Explicit§region1[1, 3, v__32] = 2)
[applied] pain_tuple1_tuple2§region2#Explicit[1, 3] = {5}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region2#Explicit[1, 3] subsetEq {5}
              /\
              pain_tuple1_tuple2§region2#Explicit[1, 3] supsetEq {5}
[applied] pain_tuple1_tuple2§region2#Explicit[1, 3] subsetEq {5}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__33 in pain_tuple1_tuple2§region2#Explicit[1, 3] . v__33 in {5})
[applied] v__33 in {5}
          {rules/refns/set-in-to-quantified.rule}
              5 = v__33
[simplified] 5
             ~~>
             5
[applied] (forAll v__33 in pain_tuple1_tuple2§region2#Explicit[1, 3]
               . 5 = v__33)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__35 : int(1..1)
                   . 5 = pain_tuple1_tuple2_Explicit§region2[1, 3, v__35])
[applied] pain_tuple1_tuple2§region2#Explicit[1, 3] supsetEq {5}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple1_tuple2§region2#Explicit[1, 3]
[applied] {5} subsetEq pain_tuple1_tuple2§region2#Explicit[1, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              5 in pain_tuple1_tuple2§region2#Explicit[1, 3]
[applied] 5 in pain_tuple1_tuple2§region2#Explicit[1, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__37 in pain_tuple1_tuple2§region2#Explicit[1, 3] . v__37 = 5)
[applied] (exists v__37 in pain_tuple1_tuple2§region2#Explicit[1, 3]
               . v__37 = 5)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__38 : int(1..1)
                   . pain_tuple1_tuple2_Explicit§region2[1, 3, v__38] = 5)
[applied] pain_tuple1_tuple1§region3#Explicit[2, 3] = {1}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region3#Explicit[2, 3] subsetEq {1}
              /\
              pain_tuple1_tuple1§region3#Explicit[2, 3] supsetEq {1}
[applied] pain_tuple1_tuple1§region3#Explicit[2, 3] subsetEq {1}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__39 in pain_tuple1_tuple1§region3#Explicit[2, 3] . v__39 in {1})
[applied] v__39 in {1}
          {rules/refns/set-in-to-quantified.rule}
              1 = v__39
[simplified] 1
             ~~>
             1
[applied] (forAll v__39 in pain_tuple1_tuple1§region3#Explicit[2, 3]
               . 1 = v__39)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__41 : int(1..1)
                   . 1 = pain_tuple1_tuple1_Explicit§region3[2, 3, v__41])
[applied] pain_tuple1_tuple1§region3#Explicit[2, 3] supsetEq {1}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {1} subsetEq pain_tuple1_tuple1§region3#Explicit[2, 3]
[applied] {1} subsetEq pain_tuple1_tuple1§region3#Explicit[2, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              1 in pain_tuple1_tuple1§region3#Explicit[2, 3]
[applied] 1 in pain_tuple1_tuple1§region3#Explicit[2, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__43 in pain_tuple1_tuple1§region3#Explicit[2, 3] . v__43 = 1)
[applied] (exists v__43 in pain_tuple1_tuple1§region3#Explicit[2, 3]
               . v__43 = 1)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__44 : int(1..1)
                   . pain_tuple1_tuple1_Explicit§region3[2, 3, v__44] = 1)
[applied] pain_tuple1_tuple2§region4#Explicit[2, 3] = {4}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region4#Explicit[2, 3] subsetEq {4}
              /\
              pain_tuple1_tuple2§region4#Explicit[2, 3] supsetEq {4}
[applied] pain_tuple1_tuple2§region4#Explicit[2, 3] subsetEq {4}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__45 in pain_tuple1_tuple2§region4#Explicit[2, 3] . v__45 in {4})
[applied] v__45 in {4}
          {rules/refns/set-in-to-quantified.rule}
              4 = v__45
[simplified] 4
             ~~>
             4
[applied] (forAll v__45 in pain_tuple1_tuple2§region4#Explicit[2, 3]
               . 4 = v__45)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__47 : int(1..1)
                   . 4 = pain_tuple1_tuple2_Explicit§region4[2, 3, v__47])
[applied] pain_tuple1_tuple2§region4#Explicit[2, 3] supsetEq {4}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {4} subsetEq pain_tuple1_tuple2§region4#Explicit[2, 3]
[applied] {4} subsetEq pain_tuple1_tuple2§region4#Explicit[2, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              4 in pain_tuple1_tuple2§region4#Explicit[2, 3]
[applied] 4 in pain_tuple1_tuple2§region4#Explicit[2, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__49 in pain_tuple1_tuple2§region4#Explicit[2, 3] . v__49 = 4)
[applied] (exists v__49 in pain_tuple1_tuple2§region4#Explicit[2, 3]
               . v__49 = 4)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__50 : int(1..1)
                   . pain_tuple1_tuple2_Explicit§region4[2, 3, v__50] = 4)
[applied] pain_tuple2§region5#ExplicitVarSize[1, 3] = {8}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple2§region5#ExplicitVarSize[1, 3] subsetEq {8}
              /\
              pain_tuple2§region5#ExplicitVarSize[1, 3] supsetEq {8}
[applied] pain_tuple2§region5#ExplicitVarSize[1, 3] subsetEq {8}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__51 in pain_tuple2§region5#ExplicitVarSize[1, 3] . v__51 in {8})
[applied] v__51 in {8}
          {rules/refns/set-in-to-quantified.rule}
              8 = v__51
[simplified] 8
             ~~>
             8
[applied] (forAll v__51 in pain_tuple2§region5#ExplicitVarSize[1, 3]
               . 8 = v__51)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__53 : int(1..2) , pain_tuple2_ExplicitVarSize§region5[1, 3, v__53, 1]
                   . 8 = pain_tuple2_ExplicitVarSize§region5[1, 3, v__53, 2])
[applied] pain_tuple2§region5#ExplicitVarSize[1, 3] supsetEq {8}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {8} subsetEq pain_tuple2§region5#ExplicitVarSize[1, 3]
[applied] {8} subsetEq pain_tuple2§region5#ExplicitVarSize[1, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              8 in pain_tuple2§region5#ExplicitVarSize[1, 3]
[applied] 8 in pain_tuple2§region5#ExplicitVarSize[1, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__55 in pain_tuple2§region5#ExplicitVarSize[1, 3] . v__55 = 8)
[applied] (exists v__55 in pain_tuple2§region5#ExplicitVarSize[1, 3]
               . v__55 = 8)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__56 : int(1..2) , pain_tuple2_ExplicitVarSize§region5[1, 3, v__56, 1]
                   . pain_tuple2_ExplicitVarSize§region5[1, 3, v__56, 2] = 8)
[applied] pain_tuple2§region6#ExplicitVarSize[2, 3] = {9}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple2§region6#ExplicitVarSize[2, 3] subsetEq {9}
              /\
              pain_tuple2§region6#ExplicitVarSize[2, 3] supsetEq {9}
[applied] pain_tuple2§region6#ExplicitVarSize[2, 3] subsetEq {9}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__57 in pain_tuple2§region6#ExplicitVarSize[2, 3] . v__57 in {9})
[applied] v__57 in {9}
          {rules/refns/set-in-to-quantified.rule}
              9 = v__57
[simplified] 9
             ~~>
             9
[applied] (forAll v__57 in pain_tuple2§region6#ExplicitVarSize[2, 3]
               . 9 = v__57)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__59 : int(1..2) , pain_tuple2_ExplicitVarSize§region6[2, 3, v__59, 1]
                   . 9 = pain_tuple2_ExplicitVarSize§region6[2, 3, v__59, 2])
[applied] pain_tuple2§region6#ExplicitVarSize[2, 3] supsetEq {9}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple2§region6#ExplicitVarSize[2, 3]
[applied] {9} subsetEq pain_tuple2§region6#ExplicitVarSize[2, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              9 in pain_tuple2§region6#ExplicitVarSize[2, 3]
[applied] 9 in pain_tuple2§region6#ExplicitVarSize[2, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__61 in pain_tuple2§region6#ExplicitVarSize[2, 3] . v__61 = 9)
[applied] (exists v__61 in pain_tuple2§region6#ExplicitVarSize[2, 3]
               . v__61 = 9)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__62 : int(1..2) , pain_tuple2_ExplicitVarSize§region6[2, 3, v__62, 1]
                   . pain_tuple2_ExplicitVarSize§region6[2, 3, v__62, 2] = 9)
[removedDecl] find pain_tuple2_ExplicitVarSize:
                      matrix indexed by [int(1..2), int(3), int(1..2)] of (bool, int(8, 9))
[removedDecl] find pain_tuple2:
                      matrix indexed by [int(1..2), int(3)] of set of int(8, 9)
[removedDecl] find pain_tuple1_tuple2:
                      matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
[removedDecl] find pain_tuple1_tuple1:
                      matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
[addSlicing] pain_tuple1_tuple2_Explicit[v__14, v__15]
             pain_tuple1_tuple2_Explicit[v__14, v__15, ..]
[addSlicing] pain_tuple1_tuple1_Explicit[v__4, v__5]
             pain_tuple1_tuple1_Explicit[v__4, v__5, ..]