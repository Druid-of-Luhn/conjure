[representation] find schur: partition (size n_boxes) from int(1..n_balls) (#1) SetOfSets
[configuration] schur§region1#SetOfSets
[addedDecl] find schur_SetOfSets: set (size n_boxes) of set of int(1..n_balls)
[applied] {b1, b2, b3} subsetEq s
{rules/refns/set-subseteq-to-quantified.rule}
    b1 in s /\ b2 in s /\ b3 in s
[applied] b1 in s
{rules/refns/set-in-to-quantified.rule}
    (exists v__5 in s . v__5 = b1)
[applied] b2 in s
{rules/refns/set-in-to-quantified.rule}
    (exists v__6 in s . v__6 = b2)
[applied] b3 in s
{rules/refns/set-in-to-quantified.rule}
    (exists v__7 in s . v__7 = b3)
[applied] (forAll s in parts(schur§region1#SetOfSets)
     . b1 != b2 /\ b1 + b2 = b3
       ->
       !((exists v__5 in s . v__5 = b1) /\ (exists v__6 in s . v__6 = b2)
         /\
         (exists v__7 in s . v__7 = b3)))
{rules/refns/partition-SetOfSets/partition-SetOfSets-part.rule}
    (forAll s in schur_SetOfSets§region1
         . b1 != b2 /\ b1 + b2 = b3
           ->
           !((exists v__5 in s . v__5 = b1) /\ (exists v__6 in s . v__6 = b2)
             /\
             (exists v__7 in s . v__7 = b3)))
[applied] v__1 != v__2
{rules/refns/set-neq-to-eq.rule}
    !(v__1 = v__2)
[applied] v__1 = v__2
{rules/refns/set-eq-to-subsets.rule}
    v__1 subsetEq v__2 /\ v__1 supsetEq v__2
[applied] v__1 subsetEq v__2
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__8 in v__1 . v__8 in v__2)
[applied] v__8 in v__2
{rules/refns/set-in-to-quantified.rule}
    (exists v__9 in v__2 . v__9 = v__8)
[applied] v__1 supsetEq v__2
{rules/refns/set-supseteq-to-subseteq.rule}
    v__2 subsetEq v__1
[applied] v__2 subsetEq v__1
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__10 in v__2 . v__10 in v__1)
[applied] v__10 in v__1
{rules/refns/set-in-to-quantified.rule}
    (exists v__11 in v__1 . v__11 = v__10)
[applied] |v__1 intersect v__2|
{rules/refns/set-card.rule}
    (sum v__12 in v__1 intersect v__2 . 1)
[applied] (sum v__12 in v__1 intersect v__2 . 1)
{rules/refns/set-intersect-quantifier.rule}
    (sum v__12 in v__1 , v__12 in v__2 . 1)
[applied] v__12 in v__2
{rules/refns/set-in-to-quantified.rule}
    (exists v__13 in v__2 . v__13 = v__12)
[applied] v__1 in v__3
{rules/refns/set-in-to-quantified.rule}
    (exists v__14 in v__3 . v__14 = v__1)
[removedDecl] find schur: partition (size n_boxes) from int(1..n_balls)
[representation] find schur_SetOfSets: set (size n_boxes) of set of int(1..n_balls) (#1) Explicit
[configuration] schur_SetOfSets§region1#Explicit
[addedDecl] find schur_SetOfSets_Explicit:
        matrix indexed by [int(1..n_boxes)] of set of int(1..n_balls)
[applied] (forAll s in schur_SetOfSets§region1#Explicit
     . b1 != b2 /\ b1 + b2 = b3
       ->
       !((exists v__0 in s . v__0 = b1) /\ (exists v__0 in s . v__0 = b2)
         /\
         (exists v__0 in s . v__0 = b3)))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (forAll v__4 : int(1..n_boxes)
         . b1 != b2 /\ b1 + b2 = b3
           ->
           !((exists v__0 in schur_SetOfSets_Explicit§region1[v__4] . v__0 = b1)
             /\
             (exists v__0 in schur_SetOfSets_Explicit§region1[v__4] . v__0 = b2)
             /\
             (exists v__0 in schur_SetOfSets_Explicit§region1[v__4] . v__0 = b3)))
[applied] (forAll v__1 in schur_SetOfSets§region1#Explicit
     , !((forAll v__2 in v__0 . (exists v__3 in v__1 . v__3 = v__2))
         /\
         (forAll v__2 in v__1 . (exists v__3 in v__0 . v__3 = v__2)))
     . (sum v__2 in v__0 , (exists v__3 in v__1 . v__3 = v__2) . 1) = 0)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (forAll v__5 : int(1..n_boxes)
         , !((forAll v__2 in v__0
                  . (exists v__3 in schur_SetOfSets_Explicit§region1[v__5] . v__3 = v__2))
             /\
             (forAll v__2 in schur_SetOfSets_Explicit§region1[v__5]
                  . (exists v__3 in v__0 . v__3 = v__2)))
         . (sum v__2 in v__0
                , (exists v__3 in schur_SetOfSets_Explicit§region1[v__5] . v__3 = v__2)
                . 1)
           =
           0)
[applied] (forAll v__0 in schur_SetOfSets§region1#Explicit
     . (forAll v__5 : int(1..n_boxes)
            , !((forAll v__2 in v__0
                     . (exists v__3 in schur_SetOfSets_Explicit§region1[v__5] . v__3 = v__2))
                /\
                (forAll v__2 in schur_SetOfSets_Explicit§region1[v__5]
                     . (exists v__3 in v__0 . v__3 = v__2)))
            . (sum v__2 in v__0
                   , (exists v__3 in schur_SetOfSets_Explicit§region1[v__5] . v__3 = v__2)
                   . 1)
              =
              0))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (forAll v__6 : int(1..n_boxes)
         . (forAll v__5 : int(1..n_boxes)
                , !((forAll v__2 in schur_SetOfSets_Explicit§region1[v__6]
                         . (exists v__3 in schur_SetOfSets_Explicit§region1[v__5] . v__3 = v__2))
                    /\
                    (forAll v__2 in schur_SetOfSets_Explicit§region1[v__5]
                         . (exists v__3 in schur_SetOfSets_Explicit§region1[v__6] . v__3 = v__2)))
                . (sum v__2 in schur_SetOfSets_Explicit§region1[v__6]
                       , (exists v__3 in schur_SetOfSets_Explicit§region1[v__5] . v__3 = v__2)
                       . 1)
                  =
                  0))
[applied] (exists v__1 in schur_SetOfSets§region1#Explicit
     . (exists v__2 in v__1 . v__2 = v__0))
{rules/refns/set-explicit/set-explicit-quantified.rule}
    (exists v__7 : int(1..n_boxes)
         . (exists v__2 in schur_SetOfSets_Explicit§region1[v__7] . v__2 = v__0))
[removedDecl] find schur_SetOfSets: set (size n_boxes) of set of int(1..n_balls)
[representation] find schur_SetOfSets_Explicit:
        matrix indexed by [int(1..n_boxes)] of set of int(1..n_balls)
(#2)
ExplicitVarSize, Occurrence
[configuration] schur_SetOfSets_Explicit§region1#ExplicitVarSize
[addedDecl] find schur_SetOfSets_Explicit_ExplicitVarSize:
        matrix indexed by [int(1..n_boxes), int(1..n_balls)] of (bool, int(1..n_balls))
[applied] (exists v__1 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__0]
     . v__1 = b1)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__4 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__4, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__4, 2] = b1)
[applied] (exists v__1 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__0]
     . v__1 = b2)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__8 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__8, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__8, 2] = b2)
[applied] (exists v__1 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__0]
     . v__1 = b3)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__9 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__9, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__9, 2] = b3)
[applied] (exists v__2 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__1]
     . v__2 = v__0)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__10 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__10, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__10, 2] = v__0)
[applied] (exists v__3 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__1]
     . v__3 = v__2)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__11 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__11, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__11, 2] = v__2)
[applied] (forAll v__2 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__0]
     . (exists v__11 : int(1..n_balls)
            , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__11, 1]
            . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__11, 2] = v__2))
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (forAll v__12 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__12, 1]
         . (exists v__11 : int(1..n_balls)
                , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__11, 1]
                . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__11, 2]
                  =
                  schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__12, 2]))
[applied] (exists v__3 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__0]
     . v__3 = v__2)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__13 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__13, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__13, 2] = v__2)
[applied] (forAll v__2 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__1]
     . (exists v__13 : int(1..n_balls)
            , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__13, 1]
            . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__13, 2] = v__2))
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (forAll v__14 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__14, 1]
         . (exists v__13 : int(1..n_balls)
                , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__13, 1]
                . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__13, 2]
                  =
                  schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__14, 2]))
[applied] (exists v__3 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__1]
     . v__3 = v__2)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (exists v__15 : int(1..n_balls)
         , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__15, 1]
         . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__15, 2] = v__2)
[applied] (sum v__2 in schur_SetOfSets_Explicit§region1#ExplicitVarSize[v__0]
     , (exists v__15 : int(1..n_balls)
            , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__15, 1]
            . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__15, 2] = v__2)
     . 1)
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__16 : int(1..n_balls)
         , (exists v__15 : int(1..n_balls)
                , schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__15, 1]
                . schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__1, v__15, 2]
                  =
                  schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__16, 2])
           /\
           schur_SetOfSets_Explicit_ExplicitVarSize§region1[v__0, v__16, 1]
         . 1)
[removedDecl] find schur_SetOfSets_Explicit_ExplicitVarSize:
        matrix indexed by [int(1..n_boxes), int(1..n_balls)] of (bool, int(1..n_balls))
[removedDecl] find schur_SetOfSets_Explicit:
        matrix indexed by [int(1..n_boxes)] of set of int(1..n_balls)