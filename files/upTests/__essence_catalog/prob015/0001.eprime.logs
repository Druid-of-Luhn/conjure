[useChannelling] True
[representation] find schur: partition (size n_boxes) from int(1..n_balls)
                 (#1)
                 MSetOfSets
[configuration] schur§region1#MSetOfSets
[addedDecl] find schur_MSetOfSets: mset (size n_boxes) of set of int(1..n_balls)
[refn] 0
[applied] {b1, b2, b3} subsetEq s
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              b1 in s /\ b2 in s /\ b3 in s
[applied] b1 in s
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__5 in s . v__5 = b1)
[applied] b2 in s
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__6 in s . v__6 = b2)
[applied] b3 in s
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__7 in s . v__7 = b3)
[applied] (forAll s in parts(schur§region1#MSetOfSets)
               . b1 != b2 /\ b1 + b2 = b3
                 ->
                 !((exists v__5 in s . v__5 = b1) /\ (exists v__6 in s . v__6 = b2)
                   /\
                   (exists v__7 in s . v__7 = b3)))
          {rules/refns/vertical/partition-MSetOfSets/partition-MSetOfSets-part.rule}
              (forAll s in schur_MSetOfSets§region1
                   . b1 != b2 /\ b1 + b2 = b3
                     ->
                     !((exists v__5 in s . v__5 = b1) /\ (exists v__6 in s . v__6 = b2)
                       /\
                       (exists v__7 in s . v__7 = b3)))
[applied] v__1 != v__2
          {rules/refns/horizontal/neq-to-eq.rule}
              !(v__1 = v__2)
[applied] v__1 = v__2
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              v__1 subsetEq v__2 /\ v__1 supsetEq v__2
[applied] v__1 subsetEq v__2
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__8 in v__1 . v__8 in v__2)
[applied] v__8 in v__2
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__9 in v__2 . v__9 = v__8)
[applied] v__1 supsetEq v__2
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              v__2 subsetEq v__1
[applied] v__2 subsetEq v__1
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__10 in v__2 . v__10 in v__1)
[applied] v__10 in v__1
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__11 in v__1 . v__11 = v__10)
[applied] |v__1 intersect v__2|
          {rules/refns/horizontal/set-card.rule}
              (sum v__12 in v__1 intersect v__2 . 1)
[applied] (sum v__12 in v__1 intersect v__2 . 1)
          {rules/refns/horizontal/set-intersect-quantifier.rule}
              (sum v__12 in v__1 , v__12 in v__2 . 1)
[applied] v__12 in v__2
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__13 in v__2 . v__13 = v__12)
[applied] v__1 in v__3
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__14 in v__3 . v__14 = v__1)
[removeRefinedDecl] find schur: partition (size n_boxes) from int(1..n_balls)
[repr] 1
[representation] find schur_MSetOfSets:
                         mset (size n_boxes) of set of int(1..n_balls)
                 (#1)
                 MSet~Explicit
[configuration] schur_MSetOfSets§region1#MSet~Explicit
[addedDecl] find schur_MSetOfSets_MSet~Explicit:
                    matrix indexed by [int(1..n_boxes)] of set of int(1..n_balls)
[refn] 1
[applied] (forAll v__3 in schur_MSetOfSets§region1#MSet~Explicit
               . v__0 != v__1 /\ v__0 + v__1 = v__2
                 ->
                 !((exists v__4 in v__3 . v__4 = v__0) /\ (exists v__4 in v__3 . v__4 = v__1)
                   /\
                   (exists v__4 in v__3 . v__4 = v__2)))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (forAll v__16 : int(1..n_boxes)
                   . v__0 != v__1 /\ v__0 + v__1 = v__2
                     ->
                     !((exists v__4 in schur_MSetOfSets_MSet~Explicit§region1[v__16] . v__4 = v__0)
                       /\
                       (exists v__4 in schur_MSetOfSets_MSet~Explicit§region1[v__16] . v__4 = v__1)
                       /\
                       (exists v__4 in schur_MSetOfSets_MSet~Explicit§region1[v__16] . v__4 = v__2)))
[applied] (forAll v__1 in schur_MSetOfSets§region1#MSet~Explicit
               , !((forAll v__2 in v__0 . (exists v__3 in v__1 . v__3 = v__2))
                   /\
                   (forAll v__2 in v__1 . (exists v__3 in v__0 . v__3 = v__2)))
               . (sum v__2 in v__0 , (exists v__3 in v__1 . v__3 = v__2) . 1) = 0)
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (forAll v__17 : int(1..n_boxes)
                   , !((forAll v__2 in v__0
                            . (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__17] . v__3 = v__2))
                       /\
                       (forAll v__2 in schur_MSetOfSets_MSet~Explicit§region1[v__17]
                            . (exists v__3 in v__0 . v__3 = v__2)))
                   . (sum v__2 in v__0
                          , (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__17] . v__3 = v__2)
                          . 1)
                     =
                     0)
[applied] (forAll v__0 in schur_MSetOfSets§region1#MSet~Explicit
               . (forAll v__17 : int(1..n_boxes)
                      , !((forAll v__2 in v__0
                               . (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__17] . v__3 = v__2))
                          /\
                          (forAll v__2 in schur_MSetOfSets_MSet~Explicit§region1[v__17]
                               . (exists v__3 in v__0 . v__3 = v__2)))
                      . (sum v__2 in v__0
                             , (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__17] . v__3 = v__2)
                             . 1)
                        =
                        0))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (forAll v__18 : int(1..n_boxes)
                   . (forAll v__17 : int(1..n_boxes)
                          , !((forAll v__2 in schur_MSetOfSets_MSet~Explicit§region1[v__18]
                                   . (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__17] . v__3 = v__2))
                              /\
                              (forAll v__2 in schur_MSetOfSets_MSet~Explicit§region1[v__17]
                                   . (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__18] . v__3 = v__2)))
                          . (sum v__2 in schur_MSetOfSets_MSet~Explicit§region1[v__18]
                                 , (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1[v__17] . v__3 = v__2)
                                 . 1)
                            =
                            0))
[applied] (exists v__1 in schur_MSetOfSets§region1#MSet~Explicit
               . (exists v__2 in v__1 . v__2 = v__0))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (exists v__19 : int(1..n_boxes)
                   . (exists v__2 in schur_MSetOfSets_MSet~Explicit§region1[v__19] . v__2 = v__0))
[removeRefinedDecl] find schur_MSetOfSets:
                            mset (size n_boxes) of set of int(1..n_balls)
[repr] 2
[representation] find schur_MSetOfSets_MSet~Explicit:
                         matrix indexed by [int(1..n_boxes)] of set of int(1..n_balls)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[configuration] schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize
[addedDecl] find schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize:
                    matrix indexed by [int(1..n_boxes), int(1..n_balls)] of (bool, int(1..n_balls))
[refn] 2
[applied] (exists v__4 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__3]
               . v__4 = v__0)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__26 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__3, v__26, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__3, v__26, 2]
                     =
                     v__0)
[applied] (exists v__4 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__3]
               . v__4 = v__1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__27 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__3, v__27, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__3, v__27, 2]
                     =
                     v__1)
[applied] (exists v__4 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__3]
               . v__4 = v__2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__28 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__3, v__28, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__3, v__28, 2]
                     =
                     v__2)
[applied] (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__1]
               . v__3 = v__2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__29 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__29, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__29, 2]
                     =
                     v__2)
[applied] (forAll v__2 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__0]
               . (exists v__29 : int(1..n_balls)
                      , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__29, 1]
                      . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__29, 2]
                        =
                        v__2))
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__30 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__30, 1]
                   . (exists v__29 : int(1..n_balls)
                          , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__29, 1]
                          . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__29, 2]
                            =
                            schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__30, 2]))
[applied] (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__0]
               . v__3 = v__2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__31 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__31, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__31, 2]
                     =
                     v__2)
[applied] (forAll v__2 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__1]
               . (exists v__31 : int(1..n_balls)
                      , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__31, 1]
                      . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__31, 2]
                        =
                        v__2))
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__32 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__32, 1]
                   . (exists v__31 : int(1..n_balls)
                          , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__31, 1]
                          . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__31, 2]
                            =
                            schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__32, 2]))
[applied] (exists v__3 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__1]
               . v__3 = v__2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__33 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__33, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__33, 2]
                     =
                     v__2)
[applied] (sum v__2 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__0]
               , (exists v__33 : int(1..n_balls)
                      , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__33, 1]
                      . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__33, 2]
                        =
                        v__2)
               . 1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (sum v__34 : int(1..n_balls)
                   , (exists v__33 : int(1..n_balls)
                          , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__33, 1]
                          . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__33, 2]
                            =
                            schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__34, 2])
                     /\
                     schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__0, v__34, 1]
                   . 1)
[applied] (exists v__2 in schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__1]
               . v__2 = v__0)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__35 : int(1..n_balls)
                   , schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__35, 1]
                   . schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__1, v__35, 2]
                     =
                     v__0)
[applied] schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__0]
          .<=
          schur_MSetOfSets_MSet~Explicit§region1#Set~ExplicitVarSize[v__0 + 1]
          {rules/refns/vertical/Set~ExplicitVarSize/DotLeq.rule}
              true
[simplified] (forAll v__0 : int(1..n_boxes - 1) . true)
             ~~>
             true
[applied] schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__21,
                                                                     v__22,
                                                                     2]
          .<
          schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__21, v__22 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__21, v__22, 2]
              <
              schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize§region1[v__21, v__22 + 1, 2]
[removeRefinedDecl] find schur_MSetOfSets_MSet~Explicit:
                            matrix indexed by [int(1..n_boxes)] of set of int(1..n_balls)
[removedDecl] find schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize:
                      matrix indexed by [int(1..n_boxes), int(1..n_balls)] of (bool, int(1..n_balls))
[matrixToTuple] schur_MSetOfSets_MSet~Explicit_Set~ExplicitVarSize∑2
[repr] 3