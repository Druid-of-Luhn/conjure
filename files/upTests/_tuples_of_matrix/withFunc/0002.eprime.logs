[removedDecl] find pain:
        tuple (matrix indexed by [int(1)] of (int(1, 2),
                                              function (total) int(1..2) --> int(-1, 1),
                                              int(4, 5)))
[removedDecl] find pain_tuple1:
        matrix indexed by [int(1)] of (int(1, 2),
                                       function (total) int(1..2) --> int(-1, 1),
                                       int(4, 5))
[representation] find pain_tuple1_tuple2:
        matrix indexed by [int(1)] of function (total) int(1..2) --> int(-1, 1)
(#2)
AsReln, Matrix1D
[configuration] pain_tuple1_tuple2§region1#AsReln
[addedDecl] find pain_tuple1_tuple2_AsReln:
        matrix indexed by [int(1)] of relation of (int(1..2) * int(-1, 1))
[applied] pain_tuple1_tuple2§region1#AsReln[1](1)
{rules/refns/function-asreln/function-asreln-image.rule}
    (sum v__1 in toSet(pain_tuple1_tuple2_AsReln§region1[1]) , v__1[1] = 1
         . v__1[2])
[removedDecl] find pain_tuple1_tuple2:
        matrix indexed by [int(1)] of function (total) int(1..2) --> int(-1, 1)
[representation] find pain_tuple1_tuple2_AsReln:
        matrix indexed by [int(1)] of relation of (int(1..2) * int(-1, 1))
(#1)
RelationAsSet
[configuration] pain_tuple1_tuple2_AsReln§region1#RelationAsSet
[addedDecl] find pain_tuple1_tuple2_AsReln_RelationAsSet:
        matrix indexed by [int(1)] of set of (int(1..2), int(-1, 1))
[applied] (sum v__0 in toSet(pain_tuple1_tuple2_AsReln§region1#RelationAsSet[1])
     , v__0[1] = 1
     . v__0[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__0 in pain_tuple1_tuple2_AsReln_RelationAsSet§region1[1] , v__0[1] = 1
         . v__0[2])
[applied] (sum v__1 in toSet(pain_tuple1_tuple2_AsReln§region1#RelationAsSet[1])
     . v__0 = v__1[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__1 in pain_tuple1_tuple2_AsReln_RelationAsSet§region1[1]
         . v__0 = v__1[1])
[removedDecl] find pain_tuple1_tuple2_AsReln:
        matrix indexed by [int(1)] of relation of (int(1..2) * int(-1, 1))
[representation] find pain_tuple1_tuple2_AsReln_RelationAsSet:
        matrix indexed by [int(1)] of set of (int(1..2), int(-1, 1))
(#1)
ExplicitVarSize
[configuration] pain_tuple1_tuple2_AsReln_RelationAsSet§region1#ExplicitVarSize
[addedDecl] find pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1), int(1..4)] of (bool, (int(1..2), int(-1, 1)))
[applied] (sum v__0 in pain_tuple1_tuple2_AsReln_RelationAsSet§region1#ExplicitVarSize[1]
     , v__0[1] = 1
     . v__0[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__2 : int(1..4)
         , pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__2, 2, 1]
           =
           1
           /\
           pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__2, 1]
         . pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize§region1[1,
                                                                           v__2,
                                                                           2,
                                                                           2])
[applied] (sum v__1 in pain_tuple1_tuple2_AsReln_RelationAsSet§region1#ExplicitVarSize[1]
     . v__0 = v__1[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__5 : int(1..4)
         , pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__5, 1]
         . v__0
           =
           pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize§region1[1, v__5, 2, 1])
[removedDecl] find pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1), int(1..4)] of (bool, (int(1..2), int(-1, 1)))
[removedDecl] find pain_tuple1_tuple2_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [int(1), int(1..4)] of (int(1..2), int(-1, 1))
[removedDecl] find pain_tuple1_tuple2_AsReln_RelationAsSet:
        matrix indexed by [int(1)] of set of (int(1..2), int(-1, 1))