language ESSENCE' 1.0

find pain_tuple1: matrix indexed by [int(1)] of int(1)
find pain_tuple2_tuple1: matrix indexed by [int(1)] of int(8)
find pain_tuple2_tuple2: matrix indexed by [int(1)] of int(3)
find pain_tuple3_Explicit_tuple1_tuple1:
        matrix indexed by [int(1), int(1..1), int(1)] of int(12)
find pain_tuple3_Explicit_tuple1_tuple2:
        matrix indexed by [int(1), int(1..1), int(1)] of int(13)
find pain_tuple3_Explicit_tuple2_tuple1:
        matrix indexed by [int(1), int(1..1)] of int(14)
find pain_tuple3_Explicit_tuple2_tuple2:
        matrix indexed by [int(1), int(1..1)] of int(15)
find pain_tuple4_tuple1: matrix indexed by [int(1)] of int(15)
find pain_tuple4_tuple2: matrix indexed by [int(1)] of int(16)
find pain_tuple4_tuple3: matrix indexed by [int(1)] of int(17)
find pain_tuple4_tuple4: matrix indexed by [int(1)] of int(18)
such that
    pain_tuple1[1] = 1,
    pain_tuple2_tuple1[1] = 8,
    pain_tuple2_tuple2[1] = 3,
    forAll v__3 : int(1..1)
        . 12 = pain_tuple3_Explicit_tuple1_tuple1[1, v__3, 1]
          /\
          13 = pain_tuple3_Explicit_tuple1_tuple2[1, v__3, 1]
          /\
          (14 = pain_tuple3_Explicit_tuple2_tuple1[1, v__3]
           /\
           15 = pain_tuple3_Explicit_tuple2_tuple2[1, v__3]),
    exists v__7 : int(1..1)
        . pain_tuple3_Explicit_tuple1_tuple1[1, v__7, 1] = 12
          /\
          pain_tuple3_Explicit_tuple1_tuple2[1, v__7, 1] = 13
          /\
          (pain_tuple3_Explicit_tuple2_tuple1[1, v__7] = 14
           /\
           pain_tuple3_Explicit_tuple2_tuple2[1, v__7] = 15),
    pain_tuple4_tuple1[1] = 15,
    pain_tuple4_tuple2[1] = 16,
    pain_tuple4_tuple3[1] = 17,
    pain_tuple4_tuple4[1] = 18
