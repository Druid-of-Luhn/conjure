[useChannelling] True
[representation] find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                              int(6..8)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[configuration] x§region1#Set~ExplicitVarSize x§region2#Set~ExplicitVarSize
[addedDecl] find x_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2), int(1..3)] of (bool, int(6..8))
[refn] 0
[applied] x§region1#Set~ExplicitVarSize[1] = {6}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              x§region1#Set~ExplicitVarSize[1] subsetEq {6}
              /\
              x§region1#Set~ExplicitVarSize[1] supsetEq {6}
[applied] x§region1#Set~ExplicitVarSize[1] subsetEq {6}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__16 in x§region1#Set~ExplicitVarSize[1] . v__16 in {6})
[applied] v__16 in {6}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              6 = v__16
[applied] (forAll v__16 in x§region1#Set~ExplicitVarSize[1] . 6 = v__16)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__18 : int(1..3) , x_Set~ExplicitVarSize§region1[1, v__18, 1]
                   . 6 = x_Set~ExplicitVarSize§region1[1, v__18, 2])
[applied] x§region1#Set~ExplicitVarSize[1] supsetEq {6}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {6} subsetEq x§region1#Set~ExplicitVarSize[1]
[applied] {6} subsetEq x§region1#Set~ExplicitVarSize[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              6 in x§region1#Set~ExplicitVarSize[1]
[applied] 6 in x§region1#Set~ExplicitVarSize[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__20 in x§region1#Set~ExplicitVarSize[1] . v__20 = 6)
[applied] (exists v__20 in x§region1#Set~ExplicitVarSize[1] . v__20 = 6)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__21 : int(1..3) , x_Set~ExplicitVarSize§region1[1, v__21, 1]
                   . x_Set~ExplicitVarSize§region1[1, v__21, 2] = 6)
[applied] x§region2#Set~ExplicitVarSize[2] = {7, 8}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              x§region2#Set~ExplicitVarSize[2] subsetEq {7, 8}
              /\
              x§region2#Set~ExplicitVarSize[2] supsetEq {7, 8}
[applied] x§region2#Set~ExplicitVarSize[2] subsetEq {7, 8}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__22 in x§region2#Set~ExplicitVarSize[2] . v__22 in {7, 8})
[applied] v__22 in {7, 8}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              7 = v__22 \/ 8 = v__22
[applied] (forAll v__22 in x§region2#Set~ExplicitVarSize[2]
               . 7 = v__22 \/ 8 = v__22)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__24 : int(1..3) , x_Set~ExplicitVarSize§region2[2, v__24, 1]
                   . 7 = x_Set~ExplicitVarSize§region2[2, v__24, 2]
                     \/
                     8 = x_Set~ExplicitVarSize§region2[2, v__24, 2])
[applied] x§region2#Set~ExplicitVarSize[2] supsetEq {7, 8}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {7, 8} subsetEq x§region2#Set~ExplicitVarSize[2]
[applied] {7, 8} subsetEq x§region2#Set~ExplicitVarSize[2]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              7 in x§region2#Set~ExplicitVarSize[2] /\ 8 in x§region2#Set~ExplicitVarSize[2]
[applied] 7 in x§region2#Set~ExplicitVarSize[2]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__26 in x§region2#Set~ExplicitVarSize[2] . v__26 = 7)
[applied] (exists v__26 in x§region2#Set~ExplicitVarSize[2] . v__26 = 7)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__27 : int(1..3) , x_Set~ExplicitVarSize§region2[2, v__27, 1]
                   . x_Set~ExplicitVarSize§region2[2, v__27, 2] = 7)
[applied] 8 in x§region2#Set~ExplicitVarSize[2]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__28 in x§region2#Set~ExplicitVarSize[2] . v__28 = 8)
[applied] (exists v__28 in x§region2#Set~ExplicitVarSize[2] . v__28 = 8)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__29 : int(1..3) , x_Set~ExplicitVarSize§region2[2, v__29, 1]
                   . x_Set~ExplicitVarSize§region2[2, v__29, 2] = 8)
[applied] x_Set~ExplicitVarSize§region2[v__2, v__3, 2]
          .<
          x_Set~ExplicitVarSize§region2[v__2, v__3 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region2[v__2, v__3, 2]
              <
              x_Set~ExplicitVarSize§region2[v__2, v__3 + 1, 2]
[applied] x_Set~ExplicitVarSize§region1[v__2, v__3, 2]
          .<
          x_Set~ExplicitVarSize§region1[v__2, v__3 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize§region1[v__2, v__3, 2]
              <
              x_Set~ExplicitVarSize§region1[v__2, v__3 + 1, 2]
[removeRefinedDecl] find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                                 int(6..8)
[removedDecl] find x_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2), int(1..3)] of (bool, int(6..8))
[matrixToTuple] x_Set~ExplicitVarSize∑2
[repr] 1