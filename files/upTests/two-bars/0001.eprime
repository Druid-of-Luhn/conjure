language ESSENCE' 1.0

find x: int(-9..9)
find y: int(-9..9)
find s2_ExplicitVarSize_tuple1: matrix indexed by [int(1..10)] of bool
find s2_ExplicitVarSize_tuple2: matrix indexed by [int(1..10)] of int(0..9)
find s1_ExplicitVarSize_tuple1: matrix indexed by [int(1..10)] of bool
find s1_ExplicitVarSize_tuple2: matrix indexed by [int(1..10)] of int(0..9)
such that
    |x| = y,
    (sum v__8 : int(1..10)
         . ((exists v__7 : int(1..10)
                 . s2_ExplicitVarSize_tuple1[v__7]
                   /\
                   s2_ExplicitVarSize_tuple2[v__7] = s1_ExplicitVarSize_tuple2[v__8])
            /\
            s1_ExplicitVarSize_tuple1[v__8])
           *
           1)
    =
    y - x,
    forAll v__3 : int(1..10)
        . (forAll v__4 : int(1..10)
               . v__3 < v__4 /\ s2_ExplicitVarSize_tuple1[v__3]
                 /\
                 s2_ExplicitVarSize_tuple1[v__4]
                 ->
                 s2_ExplicitVarSize_tuple2[v__3] < s2_ExplicitVarSize_tuple2[v__4]),
    forAll v__3 : int(1..9)
        . s2_ExplicitVarSize_tuple1[v__3] <= s2_ExplicitVarSize_tuple1[v__3 + 1],
    forAll v__1 : int(1..10)
        . (forAll v__2 : int(1..10)
               . v__1 < v__2 /\ s1_ExplicitVarSize_tuple1[v__1]
                 /\
                 s1_ExplicitVarSize_tuple1[v__2]
                 ->
                 s1_ExplicitVarSize_tuple2[v__1] < s1_ExplicitVarSize_tuple2[v__2]),
    forAll v__1 : int(1..9)
        . s1_ExplicitVarSize_tuple1[v__1] <= s1_ExplicitVarSize_tuple1[v__1 + 1]
