[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1..2)] of (set (size 1) of int(5),
                                                        int(8),
                                                        set (size 1) of int(9),
                                                        int(7))
[matrixToTuple] pain∑1
[representation] find pain_tuple1:
                         matrix indexed by [int(1..2)] of set (size 1) of int(5)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple3:
                         matrix indexed by [int(1..2)] of set (size 1) of int(9)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] pain_tuple1§region1#Set~Occurrence pain_tuple3§region2#Set~Explicit
[addedDecl] find pain_tuple3_Set~Explicit:
                    matrix indexed by [int(1..2), int(1..1)] of int(9)
[addedDecl] find pain_tuple1_Set~Occurrence:
                    matrix indexed by [int(1..2), int(5)] of bool
[refn] 0
[applied] pain_tuple1§region1#Set~Occurrence[1] = {5}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1§region1#Set~Occurrence[1] subsetEq {5}
              /\
              pain_tuple1§region1#Set~Occurrence[1] supsetEq {5}
[applied] pain_tuple1§region1#Set~Occurrence[1] subsetEq {5}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__13 in pain_tuple1§region1#Set~Occurrence[1] . v__13 in {5})
[applied] v__13 in {5}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__13
[applied] (forAll v__13 in pain_tuple1§region1#Set~Occurrence[1] . 5 = v__13)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__15 : int(5) , pain_tuple1_Set~Occurrence§region1[1, v__15]
                   . 5 = v__15)
[applied] pain_tuple1§region1#Set~Occurrence[1] supsetEq {5}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple1§region1#Set~Occurrence[1]
[applied] {5} subsetEq pain_tuple1§region1#Set~Occurrence[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              5 in pain_tuple1§region1#Set~Occurrence[1]
[applied] 5 in pain_tuple1§region1#Set~Occurrence[1]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple1_Set~Occurrence§region1[1, 5] = true
[applied] pain_tuple3§region2#Set~Explicit[1] = {9}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple3§region2#Set~Explicit[1] subsetEq {9}
              /\
              pain_tuple3§region2#Set~Explicit[1] supsetEq {9}
[applied] pain_tuple3§region2#Set~Explicit[1] subsetEq {9}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__17 in pain_tuple3§region2#Set~Explicit[1] . v__17 in {9})
[applied] v__17 in {9}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              9 = v__17
[applied] (forAll v__17 in pain_tuple3§region2#Set~Explicit[1] . 9 = v__17)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              9 = pain_tuple3_Set~Explicit§region2[1, 1]
[applied] pain_tuple3§region2#Set~Explicit[1] supsetEq {9}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple3§region2#Set~Explicit[1]
[applied] {9} subsetEq pain_tuple3§region2#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              9 in pain_tuple3§region2#Set~Explicit[1]
[applied] 9 in pain_tuple3§region2#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__21 in pain_tuple3§region2#Set~Explicit[1] . v__21 = 9)
[applied] (exists v__21 in pain_tuple3§region2#Set~Explicit[1] . v__21 = 9)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple3_Set~Explicit§region2[1, 1] = 9
[removeRefinedDecl] find pain_tuple1:
                            matrix indexed by [int(1..2)] of set (size 1) of int(5)
[removeRefinedDecl] find pain_tuple3:
                            matrix indexed by [int(1..2)] of set (size 1) of int(9)
[repr] 1