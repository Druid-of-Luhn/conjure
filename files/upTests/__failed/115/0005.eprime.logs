[useChannelling] False
[representation] find route: function (total) int(1..n_planes) --> function int(1..n_flights) --> int(1..n_flights) (#2) Function~1D, Function~AsReln
[configuration] route§regionS#Function~AsReln
[addedDecl] find route_Function~AsReln: relation of (int(1..n_planes) * function int(1..n_flights) --> int(1..n_flights))
[addedStructuralCons] {Function~AsReln}
                      (forAll v__2 : int(1..n_planes) . (sum v__1 in toSet(route_Function~AsReln§regionS) . toInt(v__2 = v__1[1])) = 1)
[refn] 0
[removeRefinedDecl] find route: function (total) int(1..n_planes) --> function int(1..n_flights) --> int(1..n_flights)
[repr] 1
[representation] find route_Function~AsReln: relation of (int(1..n_planes) * function int(1..n_flights) --> int(1..n_flights)) (#1) Relation~AsSet
[configuration] route_Function~AsReln§regionS#Relation~AsSet
[addedDecl] find route_Function~AsReln_Relation~AsSet: set of (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights))
[refn] 1
[applied] (sum v__1 in toSet(route_Function~AsReln§regionS#Relation~AsSet) . toInt(v__0 = v__1[1]))
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (sum v__1 in route_Function~AsReln_Relation~AsSet§regionS . toInt(v__0 = v__1[1]))
[removeRefinedDecl] find route_Function~AsReln: relation of (int(1..n_planes) * function int(1..n_flights) --> int(1..n_flights))
[repr] 2
[representation] find route_Function~AsReln_Relation~AsSet: set of (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] route_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSize
[addedDecl] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize:
                    matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of (bool, (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights)))
[Evaluator.dontCare] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2])
                     ~~>
                     dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1])
                     /\
                     dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 2])
[Evaluator.dontCare] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1])
                     ~~>
                     route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1] = 1
[addedStructuralCons] {Set~ExplicitVarSize}
                      (forAll v__3 : int(1..n_planes * (n_flights + 1) ** n_flights - 1) , route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 1]
                           . route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1]
                             .<
                             route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 2, 1]
                             \/
                             route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1] = route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 2, 1]
                             /\
                             route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 2]
                             .<
                             route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 2, 2])
                      /\
                      (forAll v__3 : int(1..n_planes * (n_flights + 1) ** n_flights - 1) , route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 1]
                           . route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 1])
                      /\
                      (forAll v__3 : int(1..n_planes * (n_flights + 1) ** n_flights) , !route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 1]
                           . route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1] = 1
                             /\
                             dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 2]))
[refn] 2
[applied] (sum v__1 in route_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSize . toInt(v__0 = v__1[1]))
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (sum v__5 : int(1..n_planes * (n_flights + 1) ** n_flights) , route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__5, 1]
                   . toInt(v__0 = route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__5, 2, 1]))
[applied] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1]
          .<
          route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3, 2, 1] < route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize§regionS[v__3 + 1, 2, 1]
[removeRefinedDecl] find route_Function~AsReln_Relation~AsSet: set of (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights))
[matrixToTuple] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize∑1
[removedDecl] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of (bool, (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights)))
              Added the following:
              find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple1: matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of bool
              find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights))
[matrixToTuple] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2∑1
[removedDecl] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of (int(1..n_planes), function int(1..n_flights) --> int(1..n_flights))
              Added the following:
              find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple1:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of int(1..n_planes)
              find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of function int(1..n_flights) --> int(1..n_flights)
[repr] 3
[representation] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2:
                         matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of function int(1..n_flights) --> int(1..n_flights)
                 (#2)
                 Function~1DPartial, Function~AsReln
[configuration] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2§regionS#Function~1DPartial
[addedDecl] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial:
                    matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights), int(1..n_flights)] of (bool, int(1..n_flights))
[Evaluator.dontCare] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__7, v__8, 2])
                     ~~>
                     route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__7, v__8, 2] = 1
[addedStructuralCons] {Function~1DPartial}
                      (forAll v__7 : int(1..n_planes * (n_flights + 1) ** n_flights) , route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple1[v__7]
                           . (forAll v__8 : int(1..n_flights) , !route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__7, v__8, 1]
                                  . route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__7, v__8, 2] = 1))
[refn] 3
[applied] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2§regionS#Function~1DPartial[v__0]
          .<
          route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2§regionS#Function~1DPartial[v__0 + 1]
          {rules/refns/vertical/Function~1DPartial/DotLt.rule}
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 1]
              .<
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 1]
              \/
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 1]
              =
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 1]
              /\
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 2]
              .<
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 2]
              \/
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 1]
              =
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 1]
              /\
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 2]
              =
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 2]
              /\
              (route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 1]
               .<
               route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 1]
               \/
               route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 1]
               =
               route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 1]
               /\
               route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 2]
               .<
               route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 2])
[applied] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 1]
          .<
          route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 1]
          {rules/refns/horizontal/DotLt-bools.rule}
              toInt(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 1])
              <
              toInt(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 1])
[applied] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 2]
          .<
          route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 1, 2]
              <
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 1, 2]
[applied] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 1]
          .<
          route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-bools.rule}
              toInt(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 1])
              <
              toInt(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 1])
[applied] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 2]
          .<
          route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, 2, 2]
              <
              route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0 + 1, 2, 2]
[applied] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2§regionS#Function~1DPartial[v__0])
          {rules/refns/horizontal/dontcare/abstract.rule}
              dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0])
[Evaluator.dontCare] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13])
                     ~~>
                     dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 1])
                     /\
                     dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 2])
[Evaluator.dontCare] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 1])
                     ~~>
                     route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 1] = false
[Evaluator.dontCare] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 2])
                     ~~>
                     route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 2] = 1
[applied] dontCare(route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0])
          {rules/refns/horizontal/dontcare/matrix.rule}
              (forAll v__13 : int(1..n_flights)
                   . !route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 1]
                     /\
                     route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial§regionS[v__0, v__13, 2] = 1)
[removeRefinedDecl] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2:
                            matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights)] of function int(1..n_flights) --> int(1..n_flights)
[matrixToTuple] route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial∑2
[removedDecl] find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights), int(1..n_flights)] of (bool, int(1..n_flights))
              Added the following:
              find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial_tuple1:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights), int(1..n_flights)] of bool
              find route_Function~AsReln_Relation~AsSet_Set~ExplicitVarSize_tuple2_tuple2_Function~1DPartial_tuple2:
                      matrix indexed by [int(1..n_planes * (n_flights + 1) ** n_flights), int(1..n_flights)] of int(1..n_flights)
[repr] 4