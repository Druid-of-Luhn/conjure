[representation] find x: set (minSize 1) of
                             (set (size 2) of int(6, 7), int(1, 3), set (size 1) of int(9))
                 (#1)
                 ExplicitVarSize
[configuration] x§region1#ExplicitVarSize
[addedDecl] find x_ExplicitVarSize:
                    matrix indexed by [int(1..2 ** (1 + 1) * ((1 + 1) * 2 ** 1))] of (bool,
                                                                                      (set (size 2) of int(6, 7),
                                                                                       int(1, 3),
                                                                                       set (size 1) of int(9)))
[simplified] 1 + 1
             ~~>
             2
[simplified] 2 ** 2
             ~~>
             4
[simplified] 2 ** 1
             ~~>
             2
[simplified] 2 * 2
             ~~>
             4
[simplified] 4 * 4
             ~~>
             16
[applied] ({6, 7}, 3, {9}) in x§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__4 in x§region1#ExplicitVarSize
                   . v__4[1] = ({6, 7}, 3, {9})[1]
                     /\
                     (v__4[2] = ({6, 7}, 3, {9})[2] /\ v__4[3] = ({6, 7}, 3, {9})[3]))
[simplified] ({6, 7}, 3, {9})[1]
             ~~>
             {6, 7}
[applied] v__4[1] = {6, 7}
          {rules/refns/set-eq-to-subsets.rule}
              v__4[1] subsetEq {6, 7} /\ v__4[1] supsetEq {6, 7}
[applied] v__4[1] subsetEq {6, 7}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__5 in v__4[1] . v__5 in {6, 7})
[applied] v__5 in {6, 7}
          {rules/refns/set-in-to-quantified.rule}
              false \/ 6 = v__5 \/ 7 = v__5
[simplified] 6
             ~~>
             6
[simplified] false \/ 6 = v__5
             ~~>
             6 = v__5
[simplified] 7
             ~~>
             7
[applied] v__4[1] supsetEq {6, 7}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {6, 7} subsetEq v__4[1]
[applied] {6, 7} subsetEq v__4[1]
          {rules/refns/set-subseteq-to-quantified.rule}
              true /\ 6 in v__4[1] /\ 7 in v__4[1]
[applied] 6 in v__4[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__8 in v__4[1] . v__8 = 6)
[simplified] true /\ (exists v__8 in v__4[1] . v__8 = 6)
             ~~>
             (exists v__8 in v__4[1] . v__8 = 6)
[applied] 7 in v__4[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__9 in v__4[1] . v__9 = 7)
[simplified] ({6, 7}, 3, {9})[2]
             ~~>
             3
[simplified] ({6, 7}, 3, {9})[3]
             ~~>
             {9}
[applied] v__4[3] = {9}
          {rules/refns/set-eq-to-subsets.rule}
              v__4[3] subsetEq {9} /\ v__4[3] supsetEq {9}
[applied] v__4[3] subsetEq {9}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__10 in v__4[3] . v__10 in {9})
[applied] v__10 in {9}
          {rules/refns/set-in-to-quantified.rule}
              9 = v__10
[simplified] 9
             ~~>
             9
[applied] v__4[3] supsetEq {9}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {9} subsetEq v__4[3]
[applied] {9} subsetEq v__4[3]
          {rules/refns/set-subseteq-to-quantified.rule}
              9 in v__4[3]
[applied] 9 in v__4[3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__13 in v__4[3] . v__13 = 9)
[applied] (exists v__4 in x§region1#ExplicitVarSize
               . (forAll v__5 in v__4[1] . 6 = v__5 \/ 7 = v__5)
                 /\
                 ((exists v__8 in v__4[1] . v__8 = 6) /\ (exists v__9 in v__4[1] . v__9 = 7))
                 /\
                 (v__4[2] = 3
                  /\
                  ((forAll v__10 in v__4[3] . 9 = v__10)
                   /\
                   (exists v__13 in v__4[3] . v__13 = 9))))
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__14 : int(1..16) , x_ExplicitVarSize§region1[v__14, 1]
                   . (forAll v__5 in x_ExplicitVarSize§region1[v__14, 2, 1] . 6 = v__5 \/ 7 = v__5)
                     /\
                     ((exists v__8 in x_ExplicitVarSize§region1[v__14, 2, 1] . v__8 = 6)
                      /\
                      (exists v__9 in x_ExplicitVarSize§region1[v__14, 2, 1] . v__9 = 7))
                     /\
                     (x_ExplicitVarSize§region1[v__14, 2, 2] = 3
                      /\
                      ((forAll v__10 in x_ExplicitVarSize§region1[v__14, 2, 3] . 9 = v__10)
                       /\
                       (exists v__13 in x_ExplicitVarSize§region1[v__14, 2, 3] . v__13 = 9))))
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          !=
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-neq-to-eq.rule}
              !(x_ExplicitVarSize§regionS[v__1, 2, 1] = x_ExplicitVarSize§regionS[v__2, 2, 1])
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          =
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-eq-to-subsets.rule}
              x_ExplicitVarSize§regionS[v__1, 2, 1]
              subsetEq
              x_ExplicitVarSize§regionS[v__2, 2, 1]
              /\
              x_ExplicitVarSize§regionS[v__1, 2, 1]
              supsetEq
              x_ExplicitVarSize§regionS[v__2, 2, 1]
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          subsetEq
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__15 in x_ExplicitVarSize§regionS[v__1, 2, 1]
                   . v__15 in x_ExplicitVarSize§regionS[v__2, 2, 1])
[applied] v__15 in x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__16 in x_ExplicitVarSize§regionS[v__2, 2, 1] . v__16 = v__15)
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          supsetEq
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-supseteq-to-subseteq.rule}
              x_ExplicitVarSize§regionS[v__2, 2, 1]
              subsetEq
              x_ExplicitVarSize§regionS[v__1, 2, 1]
[applied] x_ExplicitVarSize§regionS[v__2, 2, 1]
          subsetEq
          x_ExplicitVarSize§regionS[v__1, 2, 1]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__17 in x_ExplicitVarSize§regionS[v__2, 2, 1]
                   . v__17 in x_ExplicitVarSize§regionS[v__1, 2, 1])
[applied] v__17 in x_ExplicitVarSize§regionS[v__1, 2, 1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__18 in x_ExplicitVarSize§regionS[v__1, 2, 1] . v__18 = v__17)
[applied] x_ExplicitVarSize§regionS[v__1, 2, 3]
          !=
          x_ExplicitVarSize§regionS[v__2, 2, 3]
          {rules/refns/set-neq-to-eq.rule}
              !(x_ExplicitVarSize§regionS[v__1, 2, 3] = x_ExplicitVarSize§regionS[v__2, 2, 3])
[applied] x_ExplicitVarSize§regionS[v__1, 2, 3]
          =
          x_ExplicitVarSize§regionS[v__2, 2, 3]
          {rules/refns/set-eq-to-subsets.rule}
              x_ExplicitVarSize§regionS[v__1, 2, 3]
              subsetEq
              x_ExplicitVarSize§regionS[v__2, 2, 3]
              /\
              x_ExplicitVarSize§regionS[v__1, 2, 3]
              supsetEq
              x_ExplicitVarSize§regionS[v__2, 2, 3]
[applied] x_ExplicitVarSize§regionS[v__1, 2, 3]
          subsetEq
          x_ExplicitVarSize§regionS[v__2, 2, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__19 in x_ExplicitVarSize§regionS[v__1, 2, 3]
                   . v__19 in x_ExplicitVarSize§regionS[v__2, 2, 3])
[applied] v__19 in x_ExplicitVarSize§regionS[v__2, 2, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__20 in x_ExplicitVarSize§regionS[v__2, 2, 3] . v__20 = v__19)
[applied] x_ExplicitVarSize§regionS[v__1, 2, 3]
          supsetEq
          x_ExplicitVarSize§regionS[v__2, 2, 3]
          {rules/refns/set-supseteq-to-subseteq.rule}
              x_ExplicitVarSize§regionS[v__2, 2, 3]
              subsetEq
              x_ExplicitVarSize§regionS[v__1, 2, 3]
[applied] x_ExplicitVarSize§regionS[v__2, 2, 3]
          subsetEq
          x_ExplicitVarSize§regionS[v__1, 2, 3]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__21 in x_ExplicitVarSize§regionS[v__2, 2, 3]
                   . v__21 in x_ExplicitVarSize§regionS[v__1, 2, 3])
[applied] v__21 in x_ExplicitVarSize§regionS[v__1, 2, 3]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__22 in x_ExplicitVarSize§regionS[v__1, 2, 3] . v__22 = v__21)
[simplified] 16 - 1
             ~~>
             15
[removedDecl] find x_ExplicitVarSize:
                      matrix indexed by [int(1..16)] of (bool,
                                                         (set (size 2) of int(6, 7), int(1, 3), set (size 1) of int(9)))
[removedDecl] find x_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..16)] of (set (size 2) of int(6, 7),
                                                         int(1, 3),
                                                         set (size 1) of int(9))
[removedDecl] find x: set (minSize 1) of
                          (set (size 2) of int(6, 7), int(1, 3), set (size 1) of int(9))
[representation] find x_ExplicitVarSize_tuple2_tuple1:
                         matrix indexed by [int(1..16)] of set (size 2) of int(6, 7)
                 (#2)
                 Explicit, Occurrence
[representation] find x_ExplicitVarSize_tuple2_tuple3:
                         matrix indexed by [int(1..16)] of set (size 1) of int(9)
                 (#2)
                 Explicit, Occurrence
[configuration] x_ExplicitVarSize_tuple2_tuple1§region1#Explicit x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit x_ExplicitVarSize_tuple2_tuple3§region1#Explicit x_ExplicitVarSize_tuple2_tuple3§regionS#Explicit
[addedDecl] find x_ExplicitVarSize_tuple2_tuple3_Explicit:
                    matrix indexed by [int(1..16), int(1..1)] of int(9)
[addedDecl] find x_ExplicitVarSize_tuple2_tuple1_Explicit:
                    matrix indexed by [int(1..16), int(1..2)] of int(6, 7)
[fullEvaluator empty range] (forAll v__30 : int(1..0)
                                 . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__31, v__30]
                                   <
                                   x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__31, v__30 + 1])
[applied] (forAll v__5 in x_ExplicitVarSize_tuple2_tuple1§region1#Explicit[v__14]
               . 6 = v__5 \/ 7 = v__5)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__35 : int(1..2)
                   . 6 = x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__14, v__35]
                     \/
                     7 = x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__14, v__35])
[applied] (exists v__8 in x_ExplicitVarSize_tuple2_tuple1§region1#Explicit[v__14]
               . v__8 = 6)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__36 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__14, v__36] = 6)
[applied] (exists v__9 in x_ExplicitVarSize_tuple2_tuple1§region1#Explicit[v__14]
               . v__9 = 7)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__37 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__14, v__37] = 7)
[applied] (forAll v__10 in x_ExplicitVarSize_tuple2_tuple3§region1#Explicit[v__14]
               . 9 = v__10)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__38 : int(1..1)
                   . 9 = x_ExplicitVarSize_tuple2_tuple3_Explicit§region1[v__14, v__38])
[applied] (exists v__13 in x_ExplicitVarSize_tuple2_tuple3§region1#Explicit[v__14]
               . v__13 = 9)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__39 : int(1..1)
                   . x_ExplicitVarSize_tuple2_tuple3_Explicit§region1[v__14, v__39] = 9)
[applied] (exists v__16 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__2]
               . v__16 = v__15)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__40 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__40] = v__15)
[applied] (forAll v__15 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__1]
               . (exists v__40 : int(1..2)
                      . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__40] = v__15))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__41 : int(1..2)
                   . (exists v__40 : int(1..2)
                          . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__40]
                            =
                            x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__41]))
[applied] (exists v__18 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__1]
               . v__18 = v__17)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__42 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__42] = v__17)
[applied] (forAll v__17 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__2]
               . (exists v__42 : int(1..2)
                      . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__42] = v__17))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__43 : int(1..2)
                   . (exists v__42 : int(1..2)
                          . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__42]
                            =
                            x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__43]))
[applied] (exists v__20 in x_ExplicitVarSize_tuple2_tuple3§regionS#Explicit[v__2]
               . v__20 = v__19)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__44 : int(1..1)
                   . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__2, v__44] = v__19)
[applied] (forAll v__19 in x_ExplicitVarSize_tuple2_tuple3§regionS#Explicit[v__1]
               . (exists v__44 : int(1..1)
                      . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__2, v__44] = v__19))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__45 : int(1..1)
                   . (exists v__44 : int(1..1)
                          . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__2, v__44]
                            =
                            x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__1, v__45]))
[applied] (exists v__22 in x_ExplicitVarSize_tuple2_tuple3§regionS#Explicit[v__1]
               . v__22 = v__21)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__46 : int(1..1)
                   . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__1, v__46] = v__21)
[applied] (forAll v__21 in x_ExplicitVarSize_tuple2_tuple3§regionS#Explicit[v__2]
               . (exists v__46 : int(1..1)
                      . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__1, v__46] = v__21))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__47 : int(1..1)
                   . (exists v__46 : int(1..1)
                          . x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__1, v__46]
                            =
                            x_ExplicitVarSize_tuple2_tuple3_Explicit§regionS[v__2, v__47]))
[removedDecl] find x_ExplicitVarSize_tuple2_tuple3:
                      matrix indexed by [int(1..16)] of set (size 1) of int(9)
[removedDecl] find x_ExplicitVarSize_tuple2_tuple1:
                      matrix indexed by [int(1..16)] of set (size 2) of int(6, 7)
[addSlicing] x_ExplicitVarSize_tuple2_tuple3_Explicit[v__31]
             x_ExplicitVarSize_tuple2_tuple3_Explicit[v__31, ..]
[addSlicing] x_ExplicitVarSize_tuple2_tuple1_Explicit[v__25]
             x_ExplicitVarSize_tuple2_tuple1_Explicit[v__25, ..]