[removedDecl] find pain:
                      ((set (minSize 1) of int(1, 3), set (minSize 1) of (int(1, 2), int(5))), int(3))
[removedDecl] find pain_tuple1:
                      (set (minSize 1) of int(1, 3), set (minSize 1) of (int(1, 2), int(5)))
[representation] find pain_tuple1_tuple1: set (minSize 1) of int(1, 3)
                 (#2)
                 ExplicitVarSize, Occurrence
[representation] find pain_tuple1_tuple2: set (minSize 1) of (int(1, 2), int(5))
                 (#1)
                 ExplicitVarSize
[configuration] pain_tuple1_tuple1§region1#ExplicitVarSize pain_tuple1_tuple2§region2#ExplicitVarSize
[addedDecl] (find pain_tuple1_tuple2: set (minSize 1) of (int(1, 2), int(5)),
             find pain_tuple1_tuple2_ExplicitVarSize:
                     matrix indexed by [int(1..2)] of (bool, (int(1, 2), int(5))))
[addedDecl] (find pain_tuple1_tuple1: set (minSize 1) of int(1, 3),
             find pain_tuple1_tuple1_ExplicitVarSize:
                     matrix indexed by [int(1..2)] of (bool, int(1, 3)))
[applied] pain_tuple1_tuple1§region1#ExplicitVarSize = {3}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple1_tuple1§region1#ExplicitVarSize subsetEq {3}
              /\
              pain_tuple1_tuple1§region1#ExplicitVarSize supsetEq {3}
[applied] pain_tuple1_tuple1§region1#ExplicitVarSize subsetEq {3}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__8 in pain_tuple1_tuple1§region1#ExplicitVarSize . v__8 in {3})
[applied] v__8 in {3}
          {rules/refns/set-in-to-quantified.rule}
              3 = v__8
[simplified] 3
             ~~>
             3
[applied] (forAll v__8 in pain_tuple1_tuple1§region1#ExplicitVarSize . 3 = v__8)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__10 : int(1..2) , pain_tuple1_tuple1_ExplicitVarSize§region1[v__10, 1]
                   . 3 = pain_tuple1_tuple1_ExplicitVarSize§region1[v__10, 2])
[applied] pain_tuple1_tuple1§region1#ExplicitVarSize supsetEq {3}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {3} subsetEq pain_tuple1_tuple1§region1#ExplicitVarSize
[applied] {3} subsetEq pain_tuple1_tuple1§region1#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              3 in pain_tuple1_tuple1§region1#ExplicitVarSize
[applied] 3 in pain_tuple1_tuple1§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__12 in pain_tuple1_tuple1§region1#ExplicitVarSize . v__12 = 3)
[applied] (exists v__12 in pain_tuple1_tuple1§region1#ExplicitVarSize
               . v__12 = 3)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__13 : int(1..2) , pain_tuple1_tuple1_ExplicitVarSize§region1[v__13, 1]
                   . pain_tuple1_tuple1_ExplicitVarSize§region1[v__13, 2] = 3)
[applied] pain_tuple1_tuple2§region2#ExplicitVarSize = {(1, 5)}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region2#ExplicitVarSize subsetEq {(1, 5)}
              /\
              pain_tuple1_tuple2§region2#ExplicitVarSize supsetEq {(1, 5)}
[applied] pain_tuple1_tuple2§region2#ExplicitVarSize subsetEq {(1, 5)}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__14 in pain_tuple1_tuple2§region2#ExplicitVarSize . v__14 in {(1, 5)})
[applied] v__14 in {(1, 5)}
          {rules/refns/set-in-to-quantified.rule}
              (1, 5)[1] = v__14[1] /\ (1, 5)[2] = v__14[2]
[simplified] (1, 5)
             ~~>
             (1, 5)
[simplified] (1, 5)[1]
             ~~>
             1
[simplified] (1, 5)[2]
             ~~>
             5
[applied] (forAll v__14 in pain_tuple1_tuple2§region2#ExplicitVarSize
               . 1 = v__14[1] /\ 5 = v__14[2])
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__16 : int(1..2) , pain_tuple1_tuple2_ExplicitVarSize§region2[v__16, 1]
                   . 1 = pain_tuple1_tuple2_ExplicitVarSize§region2[v__16, 2, 1]
                     /\
                     5 = pain_tuple1_tuple2_ExplicitVarSize§region2[v__16, 2, 2])
[applied] pain_tuple1_tuple2§region2#ExplicitVarSize supsetEq {(1, 5)}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {(1, 5)} subsetEq pain_tuple1_tuple2§region2#ExplicitVarSize
[applied] {(1, 5)} subsetEq pain_tuple1_tuple2§region2#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              (1, 5) in pain_tuple1_tuple2§region2#ExplicitVarSize
[applied] (1, 5) in pain_tuple1_tuple2§region2#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__18 in pain_tuple1_tuple2§region2#ExplicitVarSize
                   . v__18[1] = (1, 5)[1] /\ v__18[2] = (1, 5)[2])
[applied] (exists v__18 in pain_tuple1_tuple2§region2#ExplicitVarSize
               . v__18[1] = 1 /\ v__18[2] = 5)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__19 : int(1..2) , pain_tuple1_tuple2_ExplicitVarSize§region2[v__19, 1]
                   . pain_tuple1_tuple2_ExplicitVarSize§region2[v__19, 2, 1] = 1
                     /\
                     pain_tuple1_tuple2_ExplicitVarSize§region2[v__19, 2, 2] = 5)
[removedDecl] find pain_tuple1_tuple1_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(1, 3))
[removedDecl] find pain_tuple1_tuple2_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, (int(1, 2), int(5)))
[removedDecl] find pain_tuple1_tuple2_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2)] of (int(1, 2), int(5))
[removedDecl] find pain_tuple1_tuple2: set (minSize 1) of (int(1, 2), int(5))
[removedDecl] find pain_tuple1_tuple1: set (minSize 1) of int(1, 3)