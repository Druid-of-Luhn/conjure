[useChannelling] True
[representation] find r: relation of (int(0..3) * int(0..4))
                 (#2)
                 RelationIntMatrix2, RelationAsSet
[configuration] r§region3#RelationIntMatrix2 r§region2#RelationIntMatrix2 r§region1#RelationIntMatrix2
[addedDecl] find r_RelationIntMatrix2:
                    matrix indexed by [int(0..3), int(0..4)] of bool
[refn] 0
[applied] r§region1#RelationIntMatrix2(1, 2)
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-apply.rule}
              r_RelationIntMatrix2§region1[1, 2]
[applied] |toSet(r§region2#RelationIntMatrix2(2, _))|
          {rules/refns/horizontal/set-card.rule}
              (sum v__1 in toSet(r§region2#RelationIntMatrix2(2, _)) . 1)
[applied] (sum v__1 in toSet(r§region2#RelationIntMatrix2(2, _)) . 1)
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-leftProject.rule}
              (sum v__2 : int(0..4) , r_RelationIntMatrix2§region2[2, v__2] . 1)
[applied] |toSet(r§region3#RelationIntMatrix2(_, 3))|
          {rules/refns/horizontal/set-card.rule}
              (sum v__3 in toSet(r§region3#RelationIntMatrix2(_, 3)) . 1)
[applied] (sum v__3 in toSet(r§region3#RelationIntMatrix2(_, 3)) . 1)
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-rightProject.rule}
              (sum v__4 : int(0..3) , r_RelationIntMatrix2§region3[v__4, 3] . 1)
[removeRefinedDecl] find r: relation of (int(0..3) * int(0..4))
[repr] 1