[useChannelling] True
[representation] find rs: set (size 2) of relation of (int(0..3) * int(0..4))
                 (#1)
                 Explicit
[configuration] rs§region1#Explicit
[addedDecl] find rs_Explicit:
                    matrix indexed by [int(1..2)] of relation of (int(0..3) * int(0..4))
[refn] 0
[applied] |toSet(r(2, _))|
          {rules/refns/horizontal/set-card.rule}
              (sum v__3 in toSet(r(2, _)) . 1)
[applied] (forAll r in rs§region1#Explicit
               . r(1, 2) /\ (sum v__3 in toSet(r(2, _)) . 1) = 3)
          {rules/refns/vertical/set-explicit/set-explicit-quantified.rule}
              (forAll v__4 : int(1..2)
                   . rs_Explicit§region1[v__4](1, 2)
                     /\
                     (sum v__3 in toSet(rs_Explicit§region1[v__4](2, _)) . 1) = 3)
[applied] rs_Explicit§region1[v__1] != rs_Explicit§region1[v__2]
          {rules/refns/horizontal/relation-neq.rule}
              toSet(rs_Explicit§region1[v__1]) != toSet(rs_Explicit§region1[v__2])
[applied] toSet(rs_Explicit§region1[v__1]) != toSet(rs_Explicit§region1[v__2])
          {rules/refns/horizontal/neq-to-eq.rule}
              !(toSet(rs_Explicit§region1[v__1]) = toSet(rs_Explicit§region1[v__2]))
[applied] toSet(rs_Explicit§region1[v__1]) = toSet(rs_Explicit§region1[v__2])
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              toSet(rs_Explicit§region1[v__1]) subsetEq toSet(rs_Explicit§region1[v__2])
              /\
              toSet(rs_Explicit§region1[v__1]) supsetEq toSet(rs_Explicit§region1[v__2])
[applied] toSet(rs_Explicit§region1[v__1])
          subsetEq
          toSet(rs_Explicit§region1[v__2])
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__5 in toSet(rs_Explicit§region1[v__1])
                   . v__5 in toSet(rs_Explicit§region1[v__2]))
[applied] v__5 in toSet(rs_Explicit§region1[v__2])
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__6 in toSet(rs_Explicit§region1[v__2])
                   . v__6[1] = v__5[1] /\ v__6[2] = v__5[2])
[applied] toSet(rs_Explicit§region1[v__1])
          supsetEq
          toSet(rs_Explicit§region1[v__2])
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              toSet(rs_Explicit§region1[v__2]) subsetEq toSet(rs_Explicit§region1[v__1])
[applied] toSet(rs_Explicit§region1[v__2])
          subsetEq
          toSet(rs_Explicit§region1[v__1])
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__7 in toSet(rs_Explicit§region1[v__2])
                   . v__7 in toSet(rs_Explicit§region1[v__1]))
[applied] v__7 in toSet(rs_Explicit§region1[v__1])
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__8 in toSet(rs_Explicit§region1[v__1])
                   . v__8[1] = v__7[1] /\ v__8[2] = v__7[2])
[removeRefinedDecl] find rs: set (size 2) of relation of (int(0..3) * int(0..4))
[repr] 1
[representation] find rs_Explicit:
                         matrix indexed by [int(1..2)] of relation of (int(0..3) * int(0..4))
                 (#2)
                 RelationIntMatrix2, RelationAsSet
[configuration] rs_Explicit§region1#RelationIntMatrix2
[addedDecl] find rs_Explicit_RelationIntMatrix2:
                    matrix indexed by [int(1..2), int(0..3), int(0..4)] of bool
[refn] 1
[applied] rs_Explicit§region1#RelationIntMatrix2[v__4](1, 2)
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-apply.rule}
              rs_Explicit_RelationIntMatrix2§region1[v__4, 1, 2]
[applied] (sum v__3 in toSet(rs_Explicit§region1#RelationIntMatrix2[v__4](2, _))
               . 1)
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-leftProject.rule}
              (sum v__9 : int(0..4) , rs_Explicit_RelationIntMatrix2§region1[v__4, 2, v__9]
                   . 1)
[applied] (exists v__6 in toSet(rs_Explicit§region1#RelationIntMatrix2[v__2])
               . v__6[1] = v__5[1] /\ v__6[2] = v__5[2])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (exists v__10 : int(0..3)
                   . (exists v__11 : int(0..4)
                          , rs_Explicit_RelationIntMatrix2§region1[v__2, v__10, v__11]
                          . v__10 = v__5[1] /\ v__11 = v__5[2]))
[applied] (forAll v__5 in toSet(rs_Explicit§region1#RelationIntMatrix2[v__1])
               . (exists v__10 : int(0..3)
                      . (exists v__11 : int(0..4)
                             , rs_Explicit_RelationIntMatrix2§region1[v__2, v__10, v__11]
                             . v__10 = v__5[1] /\ v__11 = v__5[2])))
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (forAll v__12 : int(0..3)
                   . (forAll v__13 : int(0..4)
                          , rs_Explicit_RelationIntMatrix2§region1[v__1, v__12, v__13]
                          . (exists v__10 : int(0..3)
                                 . (exists v__11 : int(0..4)
                                        , rs_Explicit_RelationIntMatrix2§region1[v__2, v__10, v__11]
                                        . v__10 = v__12 /\ v__11 = v__13))))
[applied] (exists v__8 in toSet(rs_Explicit§region1#RelationIntMatrix2[v__1])
               . v__8[1] = v__7[1] /\ v__8[2] = v__7[2])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (exists v__14 : int(0..3)
                   . (exists v__15 : int(0..4)
                          , rs_Explicit_RelationIntMatrix2§region1[v__1, v__14, v__15]
                          . v__14 = v__7[1] /\ v__15 = v__7[2]))
[applied] (forAll v__7 in toSet(rs_Explicit§region1#RelationIntMatrix2[v__2])
               . (exists v__14 : int(0..3)
                      . (exists v__15 : int(0..4)
                             , rs_Explicit_RelationIntMatrix2§region1[v__1, v__14, v__15]
                             . v__14 = v__7[1] /\ v__15 = v__7[2])))
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (forAll v__16 : int(0..3)
                   . (forAll v__17 : int(0..4)
                          , rs_Explicit_RelationIntMatrix2§region1[v__2, v__16, v__17]
                          . (exists v__14 : int(0..3)
                                 . (exists v__15 : int(0..4)
                                        , rs_Explicit_RelationIntMatrix2§region1[v__1, v__14, v__15]
                                        . v__14 = v__16 /\ v__15 = v__17))))
[removeRefinedDecl] find rs_Explicit:
                            matrix indexed by [int(1..2)] of relation of (int(0..3) * int(0..4))
[repr] 2