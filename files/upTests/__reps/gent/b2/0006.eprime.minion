MINION 3
# CSETopLevel_number = 1
# CSETopLevel_eliminated_expressions = 9
# CSETopLevel_total_size = 3
# CSE_number = 10
# CSE_eliminated_expressions = 50
# CSE_total_size = 30
**VARIABLES**
DISCRETE x_SetGent_00000 #
{0..2}
DISCRETE x_SetGent_00001 #
{0..2}
DISCRETE x_SetGent_00002 #
{0..2}
DISCRETE x_SetGent_00003 #
{0..2}
DISCRETE x_SetGent_00004 #
{0..2}
DISCRETE x_SetGent_00005 #
{0..2}
DISCRETE x_SetGent_00006 #
{0..2}
DISCRETE x_SetGent_00007 #
{0..2}
DISCRETE x_SetGent_00008 #
{0..2}
DISCRETE x_SetGent_00009 #
{0..2}
BOOL x_SetExplicitVarSize_tuple1_00000 #
BOOL x_SetExplicitVarSize_tuple1_00001 #
DISCRETE x_SetExplicitVarSize_tuple2_00000 #
{0..9}
DISCRETE x_SetExplicitVarSize_tuple2_00001 #
{0..9}
DISCRETE aux21 #{ aux__0 @ find aux__0: int(0..9) such that ((((x_SetExplicitVarSize_tuple2[0]=aux__0) /\ x_SetExplicitVarSize_tuple1[0]) \/ ((x_SetExplicitVarSize_tuple2[1]=aux__0) /\ x_SetExplicitVarSize_tuple1[1])) /\ (x_SetExplicitVarSize_tuple1[0] -> (x_SetExplicitVarSize_tuple2[0]<=aux__0)) /\ (x_SetExplicitVarSize_tuple1[1] -> (x_SetExplicitVarSize_tuple2[1]<=aux__0))) }
{0..9}
BOOL aux22 #CSE: 3 occurrences of: (0<x_SetGent_00007)
BOOL aux23 #CSE: 5 occurrences of: (0<x_SetGent_00005)
BOOL aux24 #CSE: 2 occurrences of: (x_SetExplicitVarSize_tuple2_00000=0)
BOOL aux25 #CSE: 2 occurrences of: (x_SetExplicitVarSize_tuple2_00001=0)
BOOL aux26 #CSE: 10 occurrences of: (0<x_SetGent_00000)
BOOL aux27 #CSE: 2 occurrences of: (0<x_SetGent_00008)
BOOL aux28 #CSE: 9 occurrences of: (0<x_SetGent_00001)
BOOL aux29 #CSE: 6 occurrences of: (0<x_SetGent_00004)
BOOL aux30 #CSE: 7 occurrences of: (0<x_SetGent_00003)
BOOL aux31 #CSE: 4 occurrences of: (0<x_SetGent_00006)
BOOL aux32 #(x_SetExplicitVarSize_tuple2_00000<=aux21)
BOOL aux33 #(x_SetExplicitVarSize_tuple2_00001<=aux21)
BOOL aux34 #(x_SetExplicitVarSize_tuple2_00000<x_SetExplicitVarSize_tuple2_00001)
BOOL aux35 #((x_SetExplicitVarSize_tuple1_00000 /\ aux24) \/ (x_SetExplicitVarSize_tuple1_00001 /\ aux25))
BOOL aux36 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=1)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=1)))
BOOL aux37 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=3)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=3)))
BOOL aux38 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=4)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=4)))
BOOL aux39 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=5)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=5)))
BOOL aux40 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=6)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=6)))
BOOL aux41 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=7)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=7)))
BOOL aux42 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=8)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=8)))
BOOL aux43 #(0<x_SetGent_00009)
BOOL aux44 #((x_SetExplicitVarSize_tuple1_00000 /\ (x_SetExplicitVarSize_tuple2_00000=9)) \/ (x_SetExplicitVarSize_tuple1_00001 /\ (x_SetExplicitVarSize_tuple2_00001=9)))
DISCRETE aux45 #(aux26 + 1)
{1..2}
DISCRETE aux46 #(aux26 + aux28 + 1)
{1..3}
DISCRETE aux47 #(aux26 + aux28 + 2)
{2..4}
DISCRETE aux48 #(aux26 + aux28 + aux30 + 2)
{2..5}
DISCRETE aux49 #(aux26 + aux28 + aux30 + aux29 + 2)
{2..6}
DISCRETE aux50 #(aux26 + aux28 + aux30 + aux29 + aux23 + 2)
{2..7}
DISCRETE aux51 #(aux26 + aux28 + aux30 + aux29 + aux23 + aux31 + 2)
{2..8}
DISCRETE aux52 #(aux26 + aux28 + aux30 + aux29 + aux23 + aux31 + aux22 + 2)
{2..9}
DISCRETE aux53 #(aux26 + aux28 + aux30 + aux29 + aux23 + aux31 + aux22 + aux27 + 2)
{2..10}
DISCRETE aux54 #SafeElement([x_SetGent_00000, x_SetGent_00001, x_SetGent_00002, x_SetGent_00003, x_SetGent_00004, x_SetGent_00005, x_SetGent_00006, x_SetGent_00007, x_SetGent_00008, x_SetGent_00009;int(1..10)], x_SetExplicitVarSize_tuple2_00000)
{0..10}
BOOL aux55 #(0<aux54)
DISCRETE aux56 #SafeElement([x_SetGent_00000, x_SetGent_00001, x_SetGent_00002, x_SetGent_00003, x_SetGent_00004, x_SetGent_00005, x_SetGent_00006, x_SetGent_00007, x_SetGent_00008, x_SetGent_00009;int(1..10)], x_SetExplicitVarSize_tuple2_00001)
{0..10}
BOOL aux57 #(0<aux56)
BOOL aux58 #(!x_SetExplicitVarSize_tuple1_00000)
BOOL aux59 #(!x_SetExplicitVarSize_tuple1_00001)
**SEARCH**
PRINT[[x_SetGent_00000],[x_SetGent_00001],[x_SetGent_00002],[x_SetGent_00003],[x_SetGent_00004],[x_SetGent_00005],[x_SetGent_00006],[x_SetGent_00007],[x_SetGent_00008],[x_SetGent_00009],[x_SetExplicitVarSize_tuple1_00000],[x_SetExplicitVarSize_tuple1_00001],[x_SetExplicitVarSize_tuple2_00000],[x_SetExplicitVarSize_tuple2_00001]]
VARORDER STATIC [x_SetGent_00000, x_SetGent_00001, x_SetGent_00002, x_SetGent_00003, x_SetGent_00004, x_SetGent_00005, x_SetGent_00006, x_SetGent_00007, x_SetGent_00008, x_SetGent_00009, x_SetExplicitVarSize_tuple1_00000, x_SetExplicitVarSize_tuple1_00001, x_SetExplicitVarSize_tuple2_00000, x_SetExplicitVarSize_tuple2_00001]
VARORDER AUX [x_SetGent_00000,x_SetGent_00001,x_SetGent_00002,x_SetGent_00003,x_SetGent_00004,x_SetGent_00005,x_SetGent_00006,x_SetGent_00007,x_SetGent_00008,x_SetGent_00009,x_SetExplicitVarSize_tuple1_00000,x_SetExplicitVarSize_tuple1_00001,x_SetExplicitVarSize_tuple2_00000,x_SetExplicitVarSize_tuple2_00001,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59]
**CONSTRAINTS**
reify(ineq(x_SetExplicitVarSize_tuple2_00000, aux21, 0), aux32)
reify(ineq(x_SetExplicitVarSize_tuple2_00001, aux21, 0), aux33)
reify(ineq(x_SetExplicitVarSize_tuple2_00000, x_SetExplicitVarSize_tuple2_00001, -1), aux34)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(aux24,1)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(aux25,1)})}), aux35)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,1)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,1)})}), aux36)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,3)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,3)})}), aux37)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,4)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,4)})}), aux38)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,5)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,5)})}), aux39)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,6)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,6)})}), aux40)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,7)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,7)})}), aux41)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,8)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,8)})}), aux42)
reify(ineq(0, x_SetGent_00009, -1), aux43)
reify(watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,9)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,9)})}), aux44)
watchelement_undefzero([x_SetGent_00000, x_SetGent_00001, x_SetGent_00002, x_SetGent_00003, x_SetGent_00004, x_SetGent_00005, x_SetGent_00006, x_SetGent_00007, x_SetGent_00008, x_SetGent_00009], x_SetExplicitVarSize_tuple2_00000, aux54)
reify(ineq(0, aux54, -1), aux55)
watchelement_undefzero([x_SetGent_00000, x_SetGent_00001, x_SetGent_00002, x_SetGent_00003, x_SetGent_00004, x_SetGent_00005, x_SetGent_00006, x_SetGent_00007, x_SetGent_00008, x_SetGent_00009], x_SetExplicitVarSize_tuple2_00001, aux56)
reify(ineq(0, aux56, -1), aux57)
reify(w-literal(x_SetExplicitVarSize_tuple1_00000,0), aux58)
reify(w-literal(x_SetExplicitVarSize_tuple1_00001,0), aux59)
reify(ineq(0, x_SetGent_00007, -1), aux22)
reify(ineq(0, x_SetGent_00005, -1), aux23)
reify(w-literal(x_SetExplicitVarSize_tuple2_00000,0), aux24)
reify(w-literal(x_SetExplicitVarSize_tuple2_00001,0), aux25)
reify(ineq(0, x_SetGent_00000, -1), aux26)
reify(ineq(0, x_SetGent_00008, -1), aux27)
reify(ineq(0, x_SetGent_00001, -1), aux28)
reify(ineq(0, x_SetGent_00004, -1), aux29)
reify(ineq(0, x_SetGent_00003, -1), aux30)
reify(ineq(0, x_SetGent_00006, -1), aux31)
watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),gaceq(x_SetExplicitVarSize_tuple2_00000,aux21)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),gaceq(x_SetExplicitVarSize_tuple2_00001,aux21)})})
ineq(x_SetExplicitVarSize_tuple1_00000, aux32, 0)
ineq(x_SetExplicitVarSize_tuple1_00001, aux33, 0)
ineq(x_SetExplicitVarSize_tuple1_00001, aux34, 0)
ineq(x_SetExplicitVarSize_tuple1_00001, x_SetExplicitVarSize_tuple1_00000, 0)
ineq(8, aux21, -1)
ineq(0, x_SetGent_00002, -1)
ineq(aux26, aux35, 0)
ineq(aux28, aux36, 0)
watched-or({watched-and({w-literal(x_SetExplicitVarSize_tuple1_00000,1),w-literal(x_SetExplicitVarSize_tuple2_00000,2)}),watched-and({w-literal(x_SetExplicitVarSize_tuple1_00001,1),w-literal(x_SetExplicitVarSize_tuple2_00001,2)})})
ineq(aux30, aux37, 0)
ineq(aux29, aux38, 0)
ineq(aux23, aux39, 0)
ineq(aux31, aux40, 0)
ineq(aux22, aux41, 0)
ineq(aux27, aux42, 0)
ineq(aux43, aux44, 0)
watched-or({w-literal(x_SetGent_00000,0),w-literal(x_SetGent_00000,1)})
watched-or({gaceq(aux45,x_SetGent_00001),w-literal(x_SetGent_00001,0)})
watched-or({gaceq(x_SetGent_00002,aux46),w-literal(x_SetGent_00002,0)})
watched-or({gaceq(x_SetGent_00003,aux47),w-literal(x_SetGent_00003,0)})
watched-or({gaceq(x_SetGent_00004,aux48),w-literal(x_SetGent_00004,0)})
watched-or({gaceq(aux49,x_SetGent_00005),w-literal(x_SetGent_00005,0)})
watched-or({gaceq(aux50,x_SetGent_00006),w-literal(x_SetGent_00006,0)})
watched-or({w-literal(x_SetGent_00007,0),gaceq(aux51,x_SetGent_00007)})
watched-or({gaceq(aux52,x_SetGent_00008),w-literal(x_SetGent_00008,0)})
watched-or({gaceq(aux53,x_SetGent_00009),w-literal(x_SetGent_00009,0)})
ineq(x_SetExplicitVarSize_tuple1_00000, aux55, 0)
ineq(x_SetExplicitVarSize_tuple1_00001, aux57, 0)
ineq(aux58, aux24, 0)
ineq(aux59, aux25, 0)
sumleq([aux26,1],aux45)
sumgeq([aux26,1],aux45)
sumleq([aux26,aux28,1],aux46)
sumgeq([aux26,aux28,1],aux46)
sumleq([aux26,aux28,2],aux47)
sumgeq([aux26,aux28,2],aux47)
sumleq([aux26,aux28,aux30,2],aux48)
sumgeq([aux26,aux28,aux30,2],aux48)
sumleq([aux26,aux28,aux30,aux29,2],aux49)
sumgeq([aux26,aux28,aux30,aux29,2],aux49)
sumleq([aux26,aux28,aux30,aux29,aux23,2],aux50)
sumgeq([aux26,aux28,aux30,aux29,aux23,2],aux50)
sumleq([aux26,aux28,aux30,aux29,aux23,aux31,2],aux51)
sumgeq([aux26,aux28,aux30,aux29,aux23,aux31,2],aux51)
sumleq([aux26,aux28,aux30,aux29,aux23,aux31,aux22,2],aux52)
sumgeq([aux26,aux28,aux30,aux29,aux23,aux31,aux22,2],aux52)
sumleq([aux26,aux28,aux30,aux29,aux23,aux31,aux22,aux27,2],aux53)
sumgeq([aux26,aux28,aux30,aux29,aux23,aux31,aux22,aux27,2],aux53)
**EOF**
