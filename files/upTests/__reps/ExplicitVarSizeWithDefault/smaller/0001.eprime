language ESSENCE' 1.0

find s_ExplicitVarSizeWithDefault: matrix indexed by [int(1..4)] of int(0..4)
such that
    (sum v__0 : int(1..4) . s_ExplicitVarSizeWithDefault[v__0] != 0) >= 3,
    exists v__0 : int(1..4)
        . s_ExplicitVarSizeWithDefault[v__0] != 0
          /\
          s_ExplicitVarSizeWithDefault[v__0] = 2,
    forAll v__0 : int(1..3)
        . s_ExplicitVarSizeWithDefault[v__0] != 0
          /\
          s_ExplicitVarSizeWithDefault[v__0 + 1] != 0
          ->
          s_ExplicitVarSizeWithDefault[v__0] < s_ExplicitVarSizeWithDefault[v__0 + 1],
    forAll v__0 : int(1..3)
        . s_ExplicitVarSizeWithDefault[v__0] <= s_ExplicitVarSizeWithDefault[v__0 + 1]
