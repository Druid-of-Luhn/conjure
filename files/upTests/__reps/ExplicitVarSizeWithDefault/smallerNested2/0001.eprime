language ESSENCE' 1.0

find s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple1:
        matrix indexed by [int(1..2), int(1..1), int(1..3)] of bool
find s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple2:
        matrix indexed by [int(1..2), int(1..1), int(1..3)] of int(1..4)
such that
    forAll v__0 : int(1..2)
        . (forAll v__1 : int(1..2)
               . s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple1[v__0, 1, v__1]
                 /\
                 s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple1[v__0, 1, v__1 + 1]
                 ->
                 s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple2[v__0, 1, v__1]
                 <
                 s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple2[v__0, 1, v__1 + 1])
          /\
          (forAll v__1 : int(1..2)
               . s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple1[v__0, 1, v__1]
                 <=
                 s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple1[v__0, 1, v__1 + 1]),
    forAll v__0 : int(1..2)
        . (sum v__1 : int(1..3)
               . s_SetExplicit_SetExplicit_SetExplicitVarSize_tuple1[v__0, 1, v__1])
          >=
          2
