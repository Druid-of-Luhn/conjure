[useChannelling] True
[representation] find s: set (minSize 1, maxSize 5) of (int(1..4), int(1..3))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] s§region1#Set~ExplicitVarSize
[addedDecl] find s_Set~ExplicitVarSize:
                    matrix indexed by [int(1..5)] of (bool, (int(1..4), int(1..3)))
[refn] 0
[applied] s_Set~ExplicitVarSize§region1[v__1, 2, 1]
          .<
          s_Set~ExplicitVarSize§region1[v__1 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              s_Set~ExplicitVarSize§region1[v__1, 2, 1]
              <
              s_Set~ExplicitVarSize§region1[v__1 + 1, 2, 1]
[applied] s_Set~ExplicitVarSize§region1[v__1, 2, 2]
          .<
          s_Set~ExplicitVarSize§region1[v__1 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              s_Set~ExplicitVarSize§region1[v__1, 2, 2]
              <
              s_Set~ExplicitVarSize§region1[v__1 + 1, 2, 2]
[applied] s§region1#Set~ExplicitVarSize = {(2, 3), (1, 2), (4, 1)}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              s§region1#Set~ExplicitVarSize subsetEq {(2, 3), (1, 2), (4, 1)}
              /\
              s§region1#Set~ExplicitVarSize supsetEq {(2, 3), (1, 2), (4, 1)}
[applied] s§region1#Set~ExplicitVarSize subsetEq {(2, 3), (1, 2), (4, 1)}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__4 in s§region1#Set~ExplicitVarSize
                   . v__4 in {(2, 3), (1, 2), (4, 1)})
[applied] v__4 in {(2, 3), (1, 2), (4, 1)}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              2 = v__4[1] /\ 3 = v__4[2] \/ 1 = v__4[1] /\ 2 = v__4[2]
              \/
              4 = v__4[1] /\ 1 = v__4[2]
[applied] (forAll v__4 in s§region1#Set~ExplicitVarSize
               . 2 = v__4[1] /\ 3 = v__4[2] \/ 1 = v__4[1] /\ 2 = v__4[2]
                 \/
                 4 = v__4[1] /\ 1 = v__4[2])
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__6 : int(1..5) , s_Set~ExplicitVarSize§region1[v__6, 1]
                   . 2 = s_Set~ExplicitVarSize§region1[v__6, 2, 1]
                     /\
                     3 = s_Set~ExplicitVarSize§region1[v__6, 2, 2]
                     \/
                     1 = s_Set~ExplicitVarSize§region1[v__6, 2, 1]
                     /\
                     2 = s_Set~ExplicitVarSize§region1[v__6, 2, 2]
                     \/
                     4 = s_Set~ExplicitVarSize§region1[v__6, 2, 1]
                     /\
                     1 = s_Set~ExplicitVarSize§region1[v__6, 2, 2])
[applied] s§region1#Set~ExplicitVarSize supsetEq {(2, 3), (1, 2), (4, 1)}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {(2, 3), (1, 2), (4, 1)} subsetEq s§region1#Set~ExplicitVarSize
[applied] {(2, 3), (1, 2), (4, 1)} subsetEq s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (2, 3) in s§region1#Set~ExplicitVarSize
              /\
              (1, 2) in s§region1#Set~ExplicitVarSize
              /\
              (4, 1) in s§region1#Set~ExplicitVarSize
[applied] (2, 3) in s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__8 in s§region1#Set~ExplicitVarSize . v__8[1] = 2 /\ v__8[2] = 3)
[applied] (exists v__8 in s§region1#Set~ExplicitVarSize
               . v__8[1] = 2 /\ v__8[2] = 3)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__9 : int(1..5) , s_Set~ExplicitVarSize§region1[v__9, 1]
                   . s_Set~ExplicitVarSize§region1[v__9, 2, 1] = 2
                     /\
                     s_Set~ExplicitVarSize§region1[v__9, 2, 2] = 3)
[applied] (1, 2) in s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__10 in s§region1#Set~ExplicitVarSize . v__10[1] = 1 /\ v__10[2] = 2)
[applied] (exists v__10 in s§region1#Set~ExplicitVarSize
               . v__10[1] = 1 /\ v__10[2] = 2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__11 : int(1..5) , s_Set~ExplicitVarSize§region1[v__11, 1]
                   . s_Set~ExplicitVarSize§region1[v__11, 2, 1] = 1
                     /\
                     s_Set~ExplicitVarSize§region1[v__11, 2, 2] = 2)
[applied] (4, 1) in s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__12 in s§region1#Set~ExplicitVarSize . v__12[1] = 4 /\ v__12[2] = 1)
[applied] (exists v__12 in s§region1#Set~ExplicitVarSize
               . v__12[1] = 4 /\ v__12[2] = 1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__13 : int(1..5) , s_Set~ExplicitVarSize§region1[v__13, 1]
                   . s_Set~ExplicitVarSize§region1[v__13, 2, 1] = 4
                     /\
                     s_Set~ExplicitVarSize§region1[v__13, 2, 2] = 1)
[removeRefinedDecl] find s: set (minSize 1, maxSize 5) of (int(1..4), int(1..3))
[removedDecl] find s_Set~ExplicitVarSize:
                      matrix indexed by [int(1..5)] of (bool, (int(1..4), int(1..3)))
[matrixToTuple] s_Set~ExplicitVarSize∑1
[removedDecl] find s_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..5)] of (int(1..4), int(1..3))
[matrixToTuple] s_Set~ExplicitVarSize_tuple2∑1
[repr] 1