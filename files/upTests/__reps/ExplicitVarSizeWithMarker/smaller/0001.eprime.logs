[useChannelling] True
[representation] find s: set (minSize 1, maxSize 3) of int(1..4)
                 (#4)
                 Set~ExplicitVarSize,
                 Set~ExplicitVarSizeWithDefault,
                 Set~ExplicitVarSizeWithMarker,
                 Set~Occurrence
[configuration] s§region1#Set~ExplicitVarSize
[addedDecl] find s_Set~ExplicitVarSize:
                    matrix indexed by [int(1..3)] of (bool, int(1..4))
[addedStructuralCons] (forAll v__1 : int(1..2)
                           , s_Set~ExplicitVarSize§region1[v__1, 1]
                             /\
                             s_Set~ExplicitVarSize§region1[v__1 + 1, 1]
                           . s_Set~ExplicitVarSize§region1[v__1, 2]
                             .<
                             s_Set~ExplicitVarSize§region1[v__1 + 1, 2])
                      /\
                      (forAll v__1 : int(1..2)
                           . s_Set~ExplicitVarSize§region1[v__1, 1]
                             >=
                             s_Set~ExplicitVarSize§region1[v__1 + 1, 1])
                      (sum v__2 : int(1..3) . s_Set~ExplicitVarSize§region1[v__2, 1]) >= 1
[refn] 0
[applied] s§region1#Set~ExplicitVarSize = {2, 3, 4}
          {rules/refns/horizontal/set/eq-to-subsets.rule}
              s§region1#Set~ExplicitVarSize subsetEq {2, 3, 4}
              /\
              s§region1#Set~ExplicitVarSize supsetEq {2, 3, 4}
[applied] s§region1#Set~ExplicitVarSize subsetEq {2, 3, 4}
          {rules/refns/horizontal/set/subseteq-to-quantified.rule}
              (forAll v__7 in s§region1#Set~ExplicitVarSize . v__7 in {2, 3, 4})
[applied] v__7 in {2, 3, 4}
          {rules/refns/horizontal/set/in-to-quantified.rule}
              2 = v__7 \/ 3 = v__7 \/ 4 = v__7
[applied] (forAll v__7 in s§region1#Set~ExplicitVarSize
               . 2 = v__7 \/ 3 = v__7 \/ 4 = v__7)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__9 : int(1..3) , s_Set~ExplicitVarSize§region1[v__9, 1]
                   . 2 = s_Set~ExplicitVarSize§region1[v__9, 2]
                     \/
                     3 = s_Set~ExplicitVarSize§region1[v__9, 2]
                     \/
                     4 = s_Set~ExplicitVarSize§region1[v__9, 2])
[applied] s§region1#Set~ExplicitVarSize supsetEq {2, 3, 4}
          {rules/refns/horizontal/set/supseteq-to-subseteq.rule}
              {2, 3, 4} subsetEq s§region1#Set~ExplicitVarSize
[applied] {2, 3, 4} subsetEq s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set/subseteq-to-quantified.rule}
              2 in s§region1#Set~ExplicitVarSize /\ 3 in s§region1#Set~ExplicitVarSize
              /\
              4 in s§region1#Set~ExplicitVarSize
[applied] 2 in s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__11 in s§region1#Set~ExplicitVarSize . v__11 = 2)
[applied] (exists v__11 in s§region1#Set~ExplicitVarSize . v__11 = 2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__12 : int(1..3) , s_Set~ExplicitVarSize§region1[v__12, 1]
                   . s_Set~ExplicitVarSize§region1[v__12, 2] = 2)
[applied] 3 in s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__13 in s§region1#Set~ExplicitVarSize . v__13 = 3)
[applied] (exists v__13 in s§region1#Set~ExplicitVarSize . v__13 = 3)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__14 : int(1..3) , s_Set~ExplicitVarSize§region1[v__14, 1]
                   . s_Set~ExplicitVarSize§region1[v__14, 2] = 3)
[applied] 4 in s§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__15 in s§region1#Set~ExplicitVarSize . v__15 = 4)
[applied] (exists v__15 in s§region1#Set~ExplicitVarSize . v__15 = 4)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__16 : int(1..3) , s_Set~ExplicitVarSize§region1[v__16, 1]
                   . s_Set~ExplicitVarSize§region1[v__16, 2] = 4)
[applied] s_Set~ExplicitVarSize§region1[v__1, 2]
          .<
          s_Set~ExplicitVarSize§region1[v__1 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              s_Set~ExplicitVarSize§region1[v__1, 2]
              <
              s_Set~ExplicitVarSize§region1[v__1 + 1, 2]
[removeRefinedDecl] find s: set (minSize 1, maxSize 3) of int(1..4)
[removedDecl] find s_Set~ExplicitVarSize:
                      matrix indexed by [int(1..3)] of (bool, int(1..4))
[matrixToTuple] s_Set~ExplicitVarSize∑1
[repr] 1