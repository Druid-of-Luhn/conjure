[useChannelling] True
[representation] find s: set (minSize 1, maxSize 3) of int(1..4)
                 (#4)
                 Set~ExplicitVarSize,
                 Set~ExplicitVarSizeWithDefault,
                 Set~ExplicitVarSizeWithMarker,
                 Set~Occurrence
[configuration] s§region1#Set~ExplicitVarSizeWithDefault
[addedDecl] find s_Set~ExplicitVarSizeWithDefault:
                    matrix indexed by [int(1..3)] of int(1..5)
[addedStructuralCons] (forAll v__3 : int(1..2)
                           , s_Set~ExplicitVarSizeWithDefault§region1[v__3] != 5
                             /\
                             s_Set~ExplicitVarSizeWithDefault§region1[v__3 + 1] != 5
                           . s_Set~ExplicitVarSizeWithDefault§region1[v__3]
                             <
                             s_Set~ExplicitVarSizeWithDefault§region1[v__3 + 1])
                      /\
                      (forAll v__3 : int(1..2)
                           . s_Set~ExplicitVarSizeWithDefault§region1[v__3]
                             <=
                             s_Set~ExplicitVarSizeWithDefault§region1[v__3 + 1])
                      (sum v__4 : int(1..3) . s_Set~ExplicitVarSizeWithDefault§region1[v__4] != 5)
                      >=
                      1
[refn] 0
[applied] s§region1#Set~ExplicitVarSizeWithDefault = {2, 3, 4}
          {rules/refns/horizontal/set/eq-to-subsets.rule}
              s§region1#Set~ExplicitVarSizeWithDefault subsetEq {2, 3, 4}
              /\
              s§region1#Set~ExplicitVarSizeWithDefault supsetEq {2, 3, 4}
[applied] s§region1#Set~ExplicitVarSizeWithDefault subsetEq {2, 3, 4}
          {rules/refns/horizontal/set/subseteq-to-quantified.rule}
              (forAll v__7 in s§region1#Set~ExplicitVarSizeWithDefault . v__7 in {2, 3, 4})
[applied] v__7 in {2, 3, 4}
          {rules/refns/horizontal/set/in-to-quantified.rule}
              2 = v__7 \/ 3 = v__7 \/ 4 = v__7
[applied] (forAll v__7 in s§region1#Set~ExplicitVarSizeWithDefault
               . 2 = v__7 \/ 3 = v__7 \/ 4 = v__7)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (forAll v__9 : int(1..3) , s_Set~ExplicitVarSizeWithDefault§region1[v__9] != 5
                   . 2 = s_Set~ExplicitVarSizeWithDefault§region1[v__9]
                     \/
                     3 = s_Set~ExplicitVarSizeWithDefault§region1[v__9]
                     \/
                     4 = s_Set~ExplicitVarSizeWithDefault§region1[v__9])
[applied] s§region1#Set~ExplicitVarSizeWithDefault supsetEq {2, 3, 4}
          {rules/refns/horizontal/set/supseteq-to-subseteq.rule}
              {2, 3, 4} subsetEq s§region1#Set~ExplicitVarSizeWithDefault
[applied] {2, 3, 4} subsetEq s§region1#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set/subseteq-to-quantified.rule}
              2 in s§region1#Set~ExplicitVarSizeWithDefault
              /\
              3 in s§region1#Set~ExplicitVarSizeWithDefault
              /\
              4 in s§region1#Set~ExplicitVarSizeWithDefault
[applied] 2 in s§region1#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__11 in s§region1#Set~ExplicitVarSizeWithDefault . v__11 = 2)
[applied] (exists v__11 in s§region1#Set~ExplicitVarSizeWithDefault . v__11 = 2)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__12 : int(1..3) , s_Set~ExplicitVarSizeWithDefault§region1[v__12] != 5
                   . s_Set~ExplicitVarSizeWithDefault§region1[v__12] = 2)
[applied] 3 in s§region1#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__13 in s§region1#Set~ExplicitVarSizeWithDefault . v__13 = 3)
[applied] (exists v__13 in s§region1#Set~ExplicitVarSizeWithDefault . v__13 = 3)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__14 : int(1..3) , s_Set~ExplicitVarSizeWithDefault§region1[v__14] != 5
                   . s_Set~ExplicitVarSizeWithDefault§region1[v__14] = 3)
[applied] 4 in s§region1#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__15 in s§region1#Set~ExplicitVarSizeWithDefault . v__15 = 4)
[applied] (exists v__15 in s§region1#Set~ExplicitVarSizeWithDefault . v__15 = 4)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__16 : int(1..3) , s_Set~ExplicitVarSizeWithDefault§region1[v__16] != 5
                   . s_Set~ExplicitVarSizeWithDefault§region1[v__16] = 4)
[removeRefinedDecl] find s: set (minSize 1, maxSize 3) of int(1..4)
[repr] 1