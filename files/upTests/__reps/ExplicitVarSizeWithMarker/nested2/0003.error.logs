[useChannelling] True
[representation] find s: set (minSize 1, maxSize 5) of
                             set (minSize 2, maxSize 3) of int(1..5)
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] s§region1#Set~ExplicitVarSize
[addedDecl] find s_Set~ExplicitVarSize:
                    matrix indexed by [int(1..5)] of (bool, set (minSize 2, maxSize 3) of int(1..5))
[refn] 0
[removeRefinedDecl] find s: set (minSize 1, maxSize 5) of
                                set (minSize 2, maxSize 3) of int(1..5)
[removedDecl] find s_Set~ExplicitVarSize:
                      matrix indexed by [int(1..5)] of (bool, set (minSize 2, maxSize 3) of int(1..5))
[matrixToTuple] s_Set~ExplicitVarSize∑1
[repr] 1
[representation] find s_Set~ExplicitVarSize_tuple2:
                         matrix indexed by [int(1..5)] of set (minSize 2, maxSize 3) of int(1..5)
                 (#4)
                 Set~ExplicitVarSize,
                 Set~ExplicitVarSizeWithDefault,
                 Set~ExplicitVarSizeWithMarker,
                 Set~Occurrence
[configuration] s_Set~ExplicitVarSize_tuple2§region1#Set~ExplicitVarSizeWithMarker
[addedDecl] find s_Set~ExplicitVarSize_tuple2_Set~ExplicitVarSizeWithMarker:
                    matrix indexed by [int(1..5)] of (int(0..3),
                                                      matrix indexed by [int(1..3)] of int(1..5))
[refn] 1
[missing:tuple_indices] s_Set~ExplicitVarSize_tuple2_Set~ExplicitVarSizeWithMarker§region1[v__0]
                        operator.index.left.reference := s_Set~ExplicitVarSize_tuple2_Set~ExplicitVarSizeWithMarker§region1
                        operator.index.right.structural.single.reference := v__0
                        2
                        value.literal := 2
                        0