language ESSENCE' 1.0

find s_SetExplicitVarSizeWithMarker_tuple1: int(0..5)
find s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1:
        matrix indexed by [int(1..5)] of int(0..3)
find s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2:
        matrix indexed by [int(1..5), int(1..3)] of int(1..5)
such that
    s_SetExplicitVarSizeWithMarker_tuple1 >= 1,
    forAll v__0 : int(1..5)
        . v__0 + 1 <= s_SetExplicitVarSizeWithMarker_tuple1
          ->
          (exists v__1 : int(1..3)
               . v__1
                 <=
                 s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1[v__0]
                 /\
                 v__1
                 <=
                 s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1[v__0
                                                                                           +
                                                                                           1]
                 /\
                 ((forAll v__2 : int(1..3)
                       . v__2 <= v__1
                         ->
                         s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2[v__0,
                                                                                                   v__2]
                         =
                         s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2[v__0
                                                                                                   +
                                                                                                   1,
                                                                                                   v__2])
                  /\
                  (s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2[v__0,
                                                                                             v__1 + 1]
                   <
                   s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2[v__0
                                                                                             +
                                                                                             1,
                                                                                             v__1 + 1]
                   \/
                   s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1[v__0]
                   >
                   s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1[v__0
                                                                                             +
                                                                                             1]))),
    forAll v__0 : int(1..5)
        . s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1[v__0]
          >=
          2,
    forAll v__0 : int(1..5)
        . (forAll v__1 : int(1..3)
               . v__1 + 1
                 <=
                 s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple1[v__0]
                 ->
                 s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2[v__0,
                                                                                           v__1]
                 <
                 s_SetExplicitVarSizeWithMarker_tuple2_SetExplicitVarSizeWithMarker_tuple2[v__0,
                                                                                           v__1 + 1])
