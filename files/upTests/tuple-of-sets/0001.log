[removedDecl] find a: tuple (int(0..9))
[removedDecl] find b: (int(0..9), int(3..8), set of int(3..4))
[removedDecl] find c: (int(0..9),
                       set of int(3..4),
                       (set of int(3..4), (int(3..4), bool)))
[removedDecl] find c_tuple3: (set of int(3..4), (int(3..4), bool))
[removedDecl] find c_tuple3_tuple2: (int(3..4), bool)
[representation] find b_tuple3: set of int(3..4)
                 (#2)
                 ExplicitVarSize, Occurrence
[representation] find c_tuple2: set of int(3..4)
                 (#2)
                 ExplicitVarSize, Occurrence
[representation] find c_tuple3_tuple1: set of int(3..4)
                 (#2)
                 ExplicitVarSize, Occurrence
[configuration] b_tuple3§region2#ExplicitVarSize c_tuple2§region1#ExplicitVarSize c_tuple3_tuple1§region3#ExplicitVarSize
[addedDecl] (find c_tuple3_tuple1: set of int(3..4),
             find c_tuple3_tuple1_ExplicitVarSize:
                     matrix indexed by [int(1..4 - 3 + 1)] of (bool, int(3..4)))
[addedDecl] (find b_tuple3: set of int(3..4),
             find b_tuple3_ExplicitVarSize:
                     matrix indexed by [int(1..4 - 3 + 1)] of (bool, int(3..4)))
[addedDecl] (find c_tuple2: set of int(3..4),
             find c_tuple2_ExplicitVarSize:
                     matrix indexed by [int(1..4 - 3 + 1)] of (bool, int(3..4)))
[simplified] 4 - 3
             ~~>
             1
[simplified] 1 + 1
             ~~>
             2
[applied] c_tuple2§region1#ExplicitVarSize = b_tuple3§region2#ExplicitVarSize
          {rules/refns/set-eq-to-subsets.rule}
              c_tuple2§region1#ExplicitVarSize subsetEq b_tuple3§region2#ExplicitVarSize
              /\
              c_tuple2§region1#ExplicitVarSize supsetEq b_tuple3§region2#ExplicitVarSize
[applied] c_tuple2§region1#ExplicitVarSize
          subsetEq
          b_tuple3§region2#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__7 in c_tuple2§region1#ExplicitVarSize
                   . v__7 in b_tuple3§region2#ExplicitVarSize)
[applied] v__7 in b_tuple3§region2#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__8 in b_tuple3§region2#ExplicitVarSize . v__8 = v__7)
[applied] (exists v__8 in b_tuple3§region2#ExplicitVarSize . v__8 = v__7)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__9 : int(1..2) , b_tuple3_ExplicitVarSize§region2[v__9, 1]
                   . b_tuple3_ExplicitVarSize§region2[v__9, 2] = v__7)
[applied] (forAll v__7 in c_tuple2§region1#ExplicitVarSize
               . (exists v__9 : int(1..2) , b_tuple3_ExplicitVarSize§region2[v__9, 1]
                      . b_tuple3_ExplicitVarSize§region2[v__9, 2] = v__7))
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__10 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__10, 1]
                   . (exists v__9 : int(1..2) , b_tuple3_ExplicitVarSize§region2[v__9, 1]
                          . b_tuple3_ExplicitVarSize§region2[v__9, 2]
                            =
                            c_tuple2_ExplicitVarSize§region1[v__10, 2]))
[applied] c_tuple2§region1#ExplicitVarSize
          supsetEq
          b_tuple3§region2#ExplicitVarSize
          {rules/refns/set-supseteq-to-subseteq.rule}
              b_tuple3§region2#ExplicitVarSize subsetEq c_tuple2§region1#ExplicitVarSize
[applied] b_tuple3§region2#ExplicitVarSize
          subsetEq
          c_tuple2§region1#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__11 in b_tuple3§region2#ExplicitVarSize
                   . v__11 in c_tuple2§region1#ExplicitVarSize)
[applied] v__11 in c_tuple2§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__12 in c_tuple2§region1#ExplicitVarSize . v__12 = v__11)
[applied] (exists v__12 in c_tuple2§region1#ExplicitVarSize . v__12 = v__11)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__13 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__13, 1]
                   . c_tuple2_ExplicitVarSize§region1[v__13, 2] = v__11)
[applied] (forAll v__11 in b_tuple3§region2#ExplicitVarSize
               . (exists v__13 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__13, 1]
                      . c_tuple2_ExplicitVarSize§region1[v__13, 2] = v__11))
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__14 : int(1..2) , b_tuple3_ExplicitVarSize§region2[v__14, 1]
                   . (exists v__13 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__13, 1]
                          . c_tuple2_ExplicitVarSize§region1[v__13, 2]
                            =
                            b_tuple3_ExplicitVarSize§region2[v__14, 2]))
[applied] c_tuple3_tuple1§region3#ExplicitVarSize = {3, 4}
          {rules/refns/set-eq-to-subsets.rule}
              c_tuple3_tuple1§region3#ExplicitVarSize subsetEq {3, 4}
              /\
              c_tuple3_tuple1§region3#ExplicitVarSize supsetEq {3, 4}
[applied] c_tuple3_tuple1§region3#ExplicitVarSize subsetEq {3, 4}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__15 in c_tuple3_tuple1§region3#ExplicitVarSize . v__15 in {3, 4})
[applied] v__15 in {3, 4}
          {rules/refns/set-in-to-quantified.rule}
              false \/ 3 = v__15 \/ 4 = v__15
[simplified] 3
             ~~>
             3
[simplified] false \/ 3 = v__15
             ~~>
             3 = v__15
[simplified] 4
             ~~>
             4
[applied] (forAll v__15 in c_tuple3_tuple1§region3#ExplicitVarSize
               . 3 = v__15 \/ 4 = v__15)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__17 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region3[v__17, 1]
                   . 3 = c_tuple3_tuple1_ExplicitVarSize§region3[v__17, 2]
                     \/
                     4 = c_tuple3_tuple1_ExplicitVarSize§region3[v__17, 2])
[applied] c_tuple3_tuple1§region3#ExplicitVarSize supsetEq {3, 4}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {3, 4} subsetEq c_tuple3_tuple1§region3#ExplicitVarSize
[applied] {3, 4} subsetEq c_tuple3_tuple1§region3#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              true /\ 3 in c_tuple3_tuple1§region3#ExplicitVarSize
              /\
              4 in c_tuple3_tuple1§region3#ExplicitVarSize
[applied] 3 in c_tuple3_tuple1§region3#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__19 in c_tuple3_tuple1§region3#ExplicitVarSize . v__19 = 3)
[applied] (exists v__19 in c_tuple3_tuple1§region3#ExplicitVarSize . v__19 = 3)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__20 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region3[v__20, 1]
                   . c_tuple3_tuple1_ExplicitVarSize§region3[v__20, 2] = 3)
[simplified] true
             /\
             (exists v__20 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region3[v__20, 1]
                  . c_tuple3_tuple1_ExplicitVarSize§region3[v__20, 2] = 3)
             ~~>
             (exists v__20 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region3[v__20, 1]
                  . c_tuple3_tuple1_ExplicitVarSize§region3[v__20, 2] = 3)
[applied] 4 in c_tuple3_tuple1§region3#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__21 in c_tuple3_tuple1§region3#ExplicitVarSize . v__21 = 4)
[applied] (exists v__21 in c_tuple3_tuple1§region3#ExplicitVarSize . v__21 = 4)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__22 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region3[v__22, 1]
                   . c_tuple3_tuple1_ExplicitVarSize§region3[v__22, 2] = 4)
[removedDecl] find b_tuple3_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[removedDecl] find c_tuple2_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[removedDecl] find c_tuple3_tuple1_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[removedDecl] find c_tuple3_tuple1: set of int(3..4)
[removedDecl] find c_tuple2: set of int(3..4)
[removedDecl] find b_tuple3: set of int(3..4)