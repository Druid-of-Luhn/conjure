[useChannelling] True
[removedDecl] find a: tuple (int(0..9))
[removedDecl] find b: (int(0..9), int(3..8), set of int(3..4))
[removedDecl] find c: (int(0..9),
                       set of int(3..4),
                       (set of int(3..4), (int(3..4), bool)))
[removedDecl] find c_tuple3: (set of int(3..4), (int(3..4), bool))
[removedDecl] find c_tuple3_tuple2: (int(3..4), bool)
[representation] find b_tuple3: set of int(3..4)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[representation] find c_tuple2: set of int(3..4)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[representation] find c_tuple3_tuple1: set of int(3..4)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[configuration] c_tuple2§region1#Set~Occurrence c_tuple3_tuple1§region3#Set~ExplicitVarSize b_tuple3§region2#Set~ExplicitVarSize
[addedDecl] find c_tuple3_tuple1_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, int(3..4))
[addedDecl] find b_tuple3_Set~ExplicitVarSize:
                    matrix indexed by [int(1..2)] of (bool, int(3..4))
[addedDecl] find c_tuple2_Set~Occurrence: matrix indexed by [int(3..4)] of bool
[refn] 0
[applied] c_tuple2§region1#Set~Occurrence = b_tuple3§region2#Set~ExplicitVarSize
          {rules/refns/horizontal/set-eq-better.rule}
              (forAll v__7 : int(3..4)
                   . v__7 in c_tuple2§region1#Set~Occurrence
                     <->
                     v__7 in b_tuple3§region2#Set~ExplicitVarSize)
              /\
              (forAll v__7 : int(3..4)
                   . v__7 in c_tuple2§region1#Set~Occurrence
                     <->
                     v__7 in b_tuple3§region2#Set~ExplicitVarSize)
[applied] v__7 in c_tuple2§region1#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              c_tuple2_Set~Occurrence§region1[v__7] = true
[applied] v__7 in b_tuple3§region2#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__8 in b_tuple3§region2#Set~ExplicitVarSize . v__8 = v__7)
[applied] (exists v__8 in b_tuple3§region2#Set~ExplicitVarSize . v__8 = v__7)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__9 : int(1..2) , b_tuple3_Set~ExplicitVarSize§region2[v__9, 1]
                   . b_tuple3_Set~ExplicitVarSize§region2[v__9, 2] = v__7)
[applied] v__7 in b_tuple3§region2#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__10 in b_tuple3§region2#Set~ExplicitVarSize . v__10 = v__7)
[applied] (exists v__10 in b_tuple3§region2#Set~ExplicitVarSize . v__10 = v__7)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__11 : int(1..2) , b_tuple3_Set~ExplicitVarSize§region2[v__11, 1]
                   . b_tuple3_Set~ExplicitVarSize§region2[v__11, 2] = v__7)
[applied] c_tuple3_tuple1§region3#Set~ExplicitVarSize = {3, 4}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              c_tuple3_tuple1§region3#Set~ExplicitVarSize subsetEq {3, 4}
              /\
              c_tuple3_tuple1§region3#Set~ExplicitVarSize supsetEq {3, 4}
[applied] c_tuple3_tuple1§region3#Set~ExplicitVarSize subsetEq {3, 4}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__12 in c_tuple3_tuple1§region3#Set~ExplicitVarSize . v__12 in {3, 4})
[applied] v__12 in {3, 4}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              3 = v__12 \/ 4 = v__12
[applied] (forAll v__12 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
               . 3 = v__12 \/ 4 = v__12)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__14 : int(1..2)
                   , c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__14, 1]
                   . 3 = c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__14, 2]
                     \/
                     4 = c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__14, 2])
[applied] c_tuple3_tuple1§region3#Set~ExplicitVarSize supsetEq {3, 4}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {3, 4} subsetEq c_tuple3_tuple1§region3#Set~ExplicitVarSize
[applied] {3, 4} subsetEq c_tuple3_tuple1§region3#Set~ExplicitVarSize
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              3 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
              /\
              4 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
[applied] 3 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__16 in c_tuple3_tuple1§region3#Set~ExplicitVarSize . v__16 = 3)
[applied] (exists v__16 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
               . v__16 = 3)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__17 : int(1..2)
                   , c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__17, 1]
                   . c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__17, 2] = 3)
[applied] 4 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__18 in c_tuple3_tuple1§region3#Set~ExplicitVarSize . v__18 = 4)
[applied] (exists v__18 in c_tuple3_tuple1§region3#Set~ExplicitVarSize
               . v__18 = 4)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__19 : int(1..2)
                   , c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__19, 1]
                   . c_tuple3_tuple1_Set~ExplicitVarSize§region3[v__19, 2] = 4)
[applied] c_tuple3_tuple1_Set~ExplicitVarSize§region3[1, 2]
          .<
          c_tuple3_tuple1_Set~ExplicitVarSize§region3[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              c_tuple3_tuple1_Set~ExplicitVarSize§region3[1, 2]
              <
              c_tuple3_tuple1_Set~ExplicitVarSize§region3[2, 2]
[applied] b_tuple3_Set~ExplicitVarSize§region2[1, 2]
          .<
          b_tuple3_Set~ExplicitVarSize§region2[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              b_tuple3_Set~ExplicitVarSize§region2[1, 2]
              <
              b_tuple3_Set~ExplicitVarSize§region2[2, 2]
[removeRefinedDecl] find b_tuple3: set of int(3..4)
[removeRefinedDecl] find c_tuple2: set of int(3..4)
[removeRefinedDecl] find c_tuple3_tuple1: set of int(3..4)
[removedDecl] find b_tuple3_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[matrixToTuple] b_tuple3_Set~ExplicitVarSize∑1
[removedDecl] find c_tuple3_tuple1_Set~ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[matrixToTuple] c_tuple3_tuple1_Set~ExplicitVarSize∑1
[repr] 1