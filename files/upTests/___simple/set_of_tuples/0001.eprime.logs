[useChannelling] True
[representation] find x: set (size 2) of (int(2, 3), int(4, 5), int(6, 7))
                 (#1)
                 Set~Explicit
[configuration] x§region1#Set~Explicit
[addedDecl] find x_Set~Explicit:
                    matrix indexed by [int(1..2)] of (int(2, 3), int(4, 5), int(6, 7))
[refn] 0
[applied] (2, 4, 6) in x§region1#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__2 in x§region1#Set~Explicit
                   . v__2[1] = 2 /\ (v__2[2] = 4 /\ v__2[3] = 6))
[applied] (exists v__2 in x§region1#Set~Explicit
               . v__2[1] = 2 /\ (v__2[2] = 4 /\ v__2[3] = 6))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__3 : int(1..2)
                   . x_Set~Explicit§region1[v__3, 1] = 2
                     /\
                     (x_Set~Explicit§region1[v__3, 2] = 4 /\ x_Set~Explicit§region1[v__3, 3] = 6))
[applied] x_Set~Explicit§region1[1, 1] .< x_Set~Explicit§region1[2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~Explicit§region1[1, 1] < x_Set~Explicit§region1[2, 1]
[applied] x_Set~Explicit§region1[1, 2] .< x_Set~Explicit§region1[2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~Explicit§region1[1, 2] < x_Set~Explicit§region1[2, 2]
[applied] x_Set~Explicit§region1[1, 3] .< x_Set~Explicit§region1[2, 3]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~Explicit§region1[1, 3] < x_Set~Explicit§region1[2, 3]
[removeRefinedDecl] find x: set (size 2) of (int(2, 3), int(4, 5), int(6, 7))
[removedDecl] find x_Set~Explicit:
                      matrix indexed by [int(1..2)] of (int(2, 3), int(4, 5), int(6, 7))
[matrixToTuple] x_Set~Explicit
[repr] 1