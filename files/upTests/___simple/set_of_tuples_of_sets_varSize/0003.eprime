language ESSENCE' 1.0

find x_SetExplicitVarSize_tuple1: matrix indexed by [int(1..48)] of bool
find x_SetExplicitVarSize_tuple2_tuple1_SetExplicit:
        matrix indexed by [int(1..48), int(1..2)] of int(2..4)
find x_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..48)] of int(4..7)
find x_SetExplicitVarSize_tuple2_tuple3_SetExplicit:
        matrix indexed by [int(1..48), int(1..1)] of int(6..9)
find x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence:
        matrix indexed by [int(1..48), int(6..9)] of bool
such that
    (sum v__0 : int(1..48) . x_SetExplicitVarSize_tuple1[v__0] * 1) = 2,
    (sum v__0 : int(1..48) . x_SetExplicitVarSize_tuple1[v__0]) >= 1,
    forAll v__0 : int(1..47)
        . x_SetExplicitVarSize_tuple1[v__0] /\ x_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          flatten(x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0, ..])
          <lex
          flatten(x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0 + 1, ..])
          \/
          (forAll v__1 : int(2..4)
               . (exists v__2 : int(1..2)
                      . x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0, v__2] = v__1)
                 <->
                 (exists v__2 : int(1..2)
                      . x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0 + 1, v__2] = v__1))
          /\
          (forAll v__1 : int(2..4)
               . (exists v__2 : int(1..2)
                      . x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0, v__2] = v__1)
                 <->
                 (exists v__2 : int(1..2)
                      . x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0 + 1, v__2] = v__1))
          /\
          (x_SetExplicitVarSize_tuple2_tuple2[v__0]
           <
           x_SetExplicitVarSize_tuple2_tuple2[v__0 + 1]
           \/
           x_SetExplicitVarSize_tuple2_tuple2[v__0]
           =
           x_SetExplicitVarSize_tuple2_tuple2[v__0 + 1]
           /\
           flatten(x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, ..])
           <lex
           flatten(x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0 + 1, ..])),
    forAll v__0 : int(1..47)
        . x_SetExplicitVarSize_tuple1[v__0] <= x_SetExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..48)
        . (forAll v__1 : int(6..9)
               . x_SetExplicitVarSize_tuple2_tuple3_SetExplicit[v__0, 1] = v__1
                 <->
                 x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, v__1] = true)
          /\
          (forAll v__1 : int(6..9)
               . x_SetExplicitVarSize_tuple2_tuple3_SetExplicit[v__0, 1] = v__1
                 <->
                 x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, v__1] = true),
    forAll v__0 : int(1..48)
        . x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0, 1]
          <
          x_SetExplicitVarSize_tuple2_tuple1_SetExplicit[v__0, 2],
    forAll v__0 : int(1..48)
        . (sum v__1 : int(6..9)
               . x_SetExplicitVarSize_tuple2_tuple3_SetOccurrence[v__0, v__1])
          =
          1
