MINION 3
# CSE_number = 10
# CSE_eliminated_expressions = 38
# CSE_total_size = 90
**VARIABLES**
DISCRETE x_SetExplicitVarSizeWithDefault_00000 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00001 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00002 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00003 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00004 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00005 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00006 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00007 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00008 #
{0..10}
DISCRETE x_SetExplicitVarSizeWithDefault_00009 #
{0..10}
BOOL aux0 #CSE: 3 occurrences of: (x_SetExplicitVarSizeWithDefault_00000 != 10)
BOOL aux1 #CSE: 3 occurrences of: (x_SetExplicitVarSizeWithDefault_00009 != 10)
BOOL aux2 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00004 != 10)
BOOL aux3 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00003 != 10)
BOOL aux4 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00002 != 10)
BOOL aux5 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00001 != 10)
BOOL aux6 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00008 != 10)
BOOL aux7 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00007 != 10)
BOOL aux8 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00006 != 10)
BOOL aux9 #CSE: 4 occurrences of: (x_SetExplicitVarSizeWithDefault_00005 != 10)
BOOL aux10 #(aux0 /\ aux5)
BOOL aux11 #(x_SetExplicitVarSizeWithDefault_00000<x_SetExplicitVarSizeWithDefault_00001)
BOOL aux12 #(aux5 /\ aux4)
BOOL aux13 #(x_SetExplicitVarSizeWithDefault_00001<x_SetExplicitVarSizeWithDefault_00002)
BOOL aux14 #(aux4 /\ aux3)
BOOL aux15 #(x_SetExplicitVarSizeWithDefault_00002<x_SetExplicitVarSizeWithDefault_00003)
BOOL aux16 #(aux3 /\ aux2)
BOOL aux17 #(x_SetExplicitVarSizeWithDefault_00003<x_SetExplicitVarSizeWithDefault_00004)
BOOL aux18 #(aux2 /\ aux9)
BOOL aux19 #(x_SetExplicitVarSizeWithDefault_00004<x_SetExplicitVarSizeWithDefault_00005)
BOOL aux20 #(aux9 /\ aux8)
BOOL aux21 #(x_SetExplicitVarSizeWithDefault_00005<x_SetExplicitVarSizeWithDefault_00006)
BOOL aux22 #(aux8 /\ aux7)
BOOL aux23 #(x_SetExplicitVarSizeWithDefault_00006<x_SetExplicitVarSizeWithDefault_00007)
BOOL aux24 #(aux7 /\ aux6)
BOOL aux25 #(x_SetExplicitVarSizeWithDefault_00007<x_SetExplicitVarSizeWithDefault_00008)
BOOL aux26 #(aux6 /\ aux1)
BOOL aux27 #(x_SetExplicitVarSizeWithDefault_00008<x_SetExplicitVarSizeWithDefault_00009)
BOOL aux28 #(4<x_SetExplicitVarSizeWithDefault_00000)
BOOL aux29 #(4<x_SetExplicitVarSizeWithDefault_00001)
BOOL aux30 #(4<x_SetExplicitVarSizeWithDefault_00002)
BOOL aux31 #(4<x_SetExplicitVarSizeWithDefault_00003)
BOOL aux32 #(4<x_SetExplicitVarSizeWithDefault_00004)
BOOL aux33 #(4<x_SetExplicitVarSizeWithDefault_00005)
BOOL aux34 #(4<x_SetExplicitVarSizeWithDefault_00006)
BOOL aux35 #(4<x_SetExplicitVarSizeWithDefault_00007)
BOOL aux36 #(4<x_SetExplicitVarSizeWithDefault_00008)
BOOL aux37 #(4<x_SetExplicitVarSizeWithDefault_00009)
**SEARCH**
PRINT[[x_SetExplicitVarSizeWithDefault_00000],[x_SetExplicitVarSizeWithDefault_00001],[x_SetExplicitVarSizeWithDefault_00002],[x_SetExplicitVarSizeWithDefault_00003],[x_SetExplicitVarSizeWithDefault_00004],[x_SetExplicitVarSizeWithDefault_00005],[x_SetExplicitVarSizeWithDefault_00006],[x_SetExplicitVarSizeWithDefault_00007],[x_SetExplicitVarSizeWithDefault_00008],[x_SetExplicitVarSizeWithDefault_00009]]
VARORDER STATIC [x_SetExplicitVarSizeWithDefault_00000,x_SetExplicitVarSizeWithDefault_00001,x_SetExplicitVarSizeWithDefault_00002,x_SetExplicitVarSizeWithDefault_00003,x_SetExplicitVarSizeWithDefault_00004,x_SetExplicitVarSizeWithDefault_00005,x_SetExplicitVarSizeWithDefault_00006,x_SetExplicitVarSizeWithDefault_00007,x_SetExplicitVarSizeWithDefault_00008,x_SetExplicitVarSizeWithDefault_00009]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37]
**CONSTRAINTS**
reify(watched-and({w-literal(aux0,1),w-literal(aux5,1)}), aux10)
reify(ineq(x_SetExplicitVarSizeWithDefault_00000, x_SetExplicitVarSizeWithDefault_00001, -1), aux11)
reify(watched-and({w-literal(aux5,1),w-literal(aux4,1)}), aux12)
reify(ineq(x_SetExplicitVarSizeWithDefault_00001, x_SetExplicitVarSizeWithDefault_00002, -1), aux13)
reify(watched-and({w-literal(aux4,1),w-literal(aux3,1)}), aux14)
reify(ineq(x_SetExplicitVarSizeWithDefault_00002, x_SetExplicitVarSizeWithDefault_00003, -1), aux15)
reify(watched-and({w-literal(aux3,1),w-literal(aux2,1)}), aux16)
reify(ineq(x_SetExplicitVarSizeWithDefault_00003, x_SetExplicitVarSizeWithDefault_00004, -1), aux17)
reify(watched-and({w-literal(aux2,1),w-literal(aux9,1)}), aux18)
reify(ineq(x_SetExplicitVarSizeWithDefault_00004, x_SetExplicitVarSizeWithDefault_00005, -1), aux19)
reify(watched-and({w-literal(aux9,1),w-literal(aux8,1)}), aux20)
reify(ineq(x_SetExplicitVarSizeWithDefault_00005, x_SetExplicitVarSizeWithDefault_00006, -1), aux21)
reify(watched-and({w-literal(aux8,1),w-literal(aux7,1)}), aux22)
reify(ineq(x_SetExplicitVarSizeWithDefault_00006, x_SetExplicitVarSizeWithDefault_00007, -1), aux23)
reify(watched-and({w-literal(aux7,1),w-literal(aux6,1)}), aux24)
reify(ineq(x_SetExplicitVarSizeWithDefault_00007, x_SetExplicitVarSizeWithDefault_00008, -1), aux25)
reify(watched-and({w-literal(aux6,1),w-literal(aux1,1)}), aux26)
reify(ineq(x_SetExplicitVarSizeWithDefault_00008, x_SetExplicitVarSizeWithDefault_00009, -1), aux27)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00000, -1), aux28)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00001, -1), aux29)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00002, -1), aux30)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00003, -1), aux31)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00004, -1), aux32)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00005, -1), aux33)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00006, -1), aux34)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00007, -1), aux35)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00008, -1), aux36)
reify(ineq(4, x_SetExplicitVarSizeWithDefault_00009, -1), aux37)
reify(diseq(x_SetExplicitVarSizeWithDefault_00000,10), aux0)
reify(diseq(x_SetExplicitVarSizeWithDefault_00009,10), aux1)
reify(diseq(x_SetExplicitVarSizeWithDefault_00004,10), aux2)
reify(diseq(x_SetExplicitVarSizeWithDefault_00003,10), aux3)
reify(diseq(x_SetExplicitVarSizeWithDefault_00002,10), aux4)
reify(diseq(x_SetExplicitVarSizeWithDefault_00001,10), aux5)
reify(diseq(x_SetExplicitVarSizeWithDefault_00008,10), aux6)
reify(diseq(x_SetExplicitVarSizeWithDefault_00007,10), aux7)
reify(diseq(x_SetExplicitVarSizeWithDefault_00006,10), aux8)
reify(diseq(x_SetExplicitVarSizeWithDefault_00005,10), aux9)
sumgeq([aux0,aux5,aux4,aux3,aux2,aux9,aux8,aux7,aux6,aux1],2)
ineq(aux10, aux11, 0)
ineq(aux12, aux13, 0)
ineq(aux14, aux15, 0)
ineq(aux16, aux17, 0)
ineq(aux18, aux19, 0)
ineq(aux20, aux21, 0)
ineq(aux22, aux23, 0)
ineq(aux24, aux25, 0)
ineq(aux26, aux27, 0)
ineq(x_SetExplicitVarSizeWithDefault_00000, x_SetExplicitVarSizeWithDefault_00001, 0)
ineq(x_SetExplicitVarSizeWithDefault_00001, x_SetExplicitVarSizeWithDefault_00002, 0)
ineq(x_SetExplicitVarSizeWithDefault_00002, x_SetExplicitVarSizeWithDefault_00003, 0)
ineq(x_SetExplicitVarSizeWithDefault_00003, x_SetExplicitVarSizeWithDefault_00004, 0)
ineq(x_SetExplicitVarSizeWithDefault_00004, x_SetExplicitVarSizeWithDefault_00005, 0)
ineq(x_SetExplicitVarSizeWithDefault_00005, x_SetExplicitVarSizeWithDefault_00006, 0)
ineq(x_SetExplicitVarSizeWithDefault_00006, x_SetExplicitVarSizeWithDefault_00007, 0)
ineq(x_SetExplicitVarSizeWithDefault_00007, x_SetExplicitVarSizeWithDefault_00008, 0)
ineq(x_SetExplicitVarSizeWithDefault_00008, x_SetExplicitVarSizeWithDefault_00009, 0)
ineq(aux0, aux28, 0)
ineq(aux5, aux29, 0)
ineq(aux4, aux30, 0)
ineq(aux3, aux31, 0)
ineq(aux2, aux32, 0)
ineq(aux9, aux33, 0)
ineq(aux8, aux34, 0)
ineq(aux7, aux35, 0)
ineq(aux6, aux36, 0)
ineq(aux1, aux37, 0)
**EOF**
