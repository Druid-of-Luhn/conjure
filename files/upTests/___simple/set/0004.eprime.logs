[useChannelling] True
[representation] find x: set (size 5) of int(4..9)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find y: set (size 3) of int(3..7)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] y§region2#Set~Occurrence x§region3#Set~Explicit x§region1#Set~Occurrence
[addedDecl] find x_Set~Explicit: matrix indexed by [int(1..5)] of int(4..9)
[addedDecl] find y_Set~Occurrence: matrix indexed by [int(3..7)] of bool
[addedDecl] find x_Set~Occurrence: matrix indexed by [int(4..9)] of bool
[refn] 0
[applied] 4 in x§region1#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              x_Set~Occurrence§region1[4] = true
[applied] y§region2#Set~Occurrence subsetEq x§region3#Set~Explicit
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__5 in y§region2#Set~Occurrence . v__5 in x§region3#Set~Explicit)
[applied] v__5 in x§region3#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__6 in x§region3#Set~Explicit . v__6 = v__5)
[applied] (exists v__6 in x§region3#Set~Explicit . v__6 = v__5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__7 : int(1..5) . x_Set~Explicit§region3[v__7] = v__5)
[applied] (forAll v__5 in y§region2#Set~Occurrence
               . (exists v__7 : int(1..5) . x_Set~Explicit§region3[v__7] = v__5))
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__8 : int(3..7) , y_Set~Occurrence§region2[v__8]
                   . (exists v__7 : int(1..5) . x_Set~Explicit§region3[v__7] = v__8))
[applied] x#Set~Explicit = x#Set~Occurrence
          {rules/refns/horizontal/set-eq-better.rule}
              (forAll v__9 : int(4..9) . v__9 in x#Set~Explicit <-> v__9 in x#Set~Occurrence)
              /\
              (forAll v__9 : int(4..9) . v__9 in x#Set~Explicit <-> v__9 in x#Set~Occurrence)
[applied] v__9 in x#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__10 in x#Set~Explicit . v__10 = v__9)
[applied] (exists v__10 in x#Set~Explicit . v__10 = v__9)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__11 : int(1..5) . x_Set~Explicit[v__11] = v__9)
[applied] v__9 in x#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              x_Set~Occurrence[v__9] = true
[applied] v__9 in x#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__12 in x#Set~Explicit . v__12 = v__9)
[applied] (exists v__12 in x#Set~Explicit . v__12 = v__9)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__13 : int(1..5) . x_Set~Explicit[v__13] = v__9)
[applied] x_Set~Explicit§region3[v__1] .< x_Set~Explicit§region3[v__1 + 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~Explicit§region3[v__1] < x_Set~Explicit§region3[v__1 + 1]
[removeRefinedDecl] find x: set (size 5) of int(4..9)
[removeRefinedDecl] find y: set (size 3) of int(3..7)
[repr] 1