[representation] find x: set (size 5) of int(4..9) (#2) Explicit, Occurrence
[representation] find y: set (size 3) of int(3..7) (#2) Explicit, Occurrence
[configuration] x§region1#Explicit x§region3#Explicit y§region2#Explicit
[addedDecl] find x_Explicit: matrix indexed by [int(1..5)] of int(4..9)
[addedDecl] find y_Explicit: matrix indexed by [int(1..3)] of int(3..7)
[applied] 4 in x§region1#Explicit
          {rules/refns/set-in-to-quantified.rule}
              (exists v__2 in x§region1#Explicit . v__2 = 4)
[applied] (exists v__2 in x§region1#Explicit . v__2 = 4)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__4 : int(1..5) . x_Explicit§region1[v__4] = 4)
[applied] y§region2#Explicit subsetEq x§region3#Explicit
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__5 in y§region2#Explicit . v__5 in x§region3#Explicit)
[applied] v__5 in x§region3#Explicit
          {rules/refns/set-in-to-quantified.rule}
              (exists v__6 in x§region3#Explicit . v__6 = v__5)
[applied] (exists v__6 in x§region3#Explicit . v__6 = v__5)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__7 : int(1..5) . x_Explicit§region3[v__7] = v__5)
[applied] (forAll v__5 in y§region2#Explicit
               . (exists v__7 : int(1..5) . x_Explicit§region3[v__7] = v__5))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__8 : int(1..3)
                   . (exists v__7 : int(1..5)
                          . x_Explicit§region3[v__7] = y_Explicit§region2[v__8]))
[removedDecl] find y: set (size 3) of int(3..7)
[removedDecl] find x: set (size 5) of int(4..9)