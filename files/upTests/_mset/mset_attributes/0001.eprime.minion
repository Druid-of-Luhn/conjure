MINION 3
# CSE_number = 7
# CSE_eliminated_expressions = 19
# CSE_total_size = 21
**VARIABLES**
DISCRETE x_MSetOccurrence_00000 #
{0..4}
DISCRETE x_MSetOccurrence_00001 #
{0..4}
DISCRETE x_MSetOccurrence_00002 #
{0..4}
DISCRETE x_MSetOccurrence_00003 #
{0..4}
DISCRETE x_MSetOccurrence_00004 #
{0..4}
DISCRETE x_MSetOccurrence_00005 #
{0..4}
DISCRETE x_MSetOccurrence_00006 #
{0..4}
BOOL aux0 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00004)
BOOL aux1 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00000)
BOOL aux2 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00001)
BOOL aux3 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00002)
BOOL aux4 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00003)
BOOL aux5 #CSE: 2 occurrences of: (0<x_MSetOccurrence_00005)
BOOL aux6 #CSE: 2 occurrences of: (0<x_MSetOccurrence_00006)
BOOL aux7 #(2<=x_MSetOccurrence_00000)
BOOL aux8 #(2<=x_MSetOccurrence_00001)
BOOL aux9 #(2<=x_MSetOccurrence_00002)
BOOL aux10 #(2<=x_MSetOccurrence_00003)
BOOL aux11 #(2<=x_MSetOccurrence_00004)
BOOL aux12 #(2<=x_MSetOccurrence_00005)
BOOL aux13 #(2<=x_MSetOccurrence_00006)
**SEARCH**
PRINT[[x_MSetOccurrence_00000],[x_MSetOccurrence_00001],[x_MSetOccurrence_00002],[x_MSetOccurrence_00003],[x_MSetOccurrence_00004],[x_MSetOccurrence_00005],[x_MSetOccurrence_00006]]
VARORDER STATIC [x_MSetOccurrence_00000,x_MSetOccurrence_00001,x_MSetOccurrence_00002,x_MSetOccurrence_00003,x_MSetOccurrence_00004,x_MSetOccurrence_00005,x_MSetOccurrence_00006]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13]
**CONSTRAINTS**
reify(ineq(2, x_MSetOccurrence_00000, 0), aux7)
reify(ineq(2, x_MSetOccurrence_00001, 0), aux8)
reify(ineq(2, x_MSetOccurrence_00002, 0), aux9)
reify(ineq(2, x_MSetOccurrence_00003, 0), aux10)
reify(ineq(2, x_MSetOccurrence_00004, 0), aux11)
reify(ineq(2, x_MSetOccurrence_00005, 0), aux12)
reify(ineq(2, x_MSetOccurrence_00006, 0), aux13)
reify(ineq(0, x_MSetOccurrence_00004, -1), aux0)
reify(ineq(0, x_MSetOccurrence_00000, -1), aux1)
reify(ineq(0, x_MSetOccurrence_00001, -1), aux2)
reify(ineq(0, x_MSetOccurrence_00002, -1), aux3)
reify(ineq(0, x_MSetOccurrence_00003, -1), aux4)
reify(ineq(0, x_MSetOccurrence_00005, -1), aux5)
reify(ineq(0, x_MSetOccurrence_00006, -1), aux6)
sumgeq([aux1,aux2,aux3,aux4,aux0,aux5,aux6],6)
eq(aux1,0)
eq(aux2,0)
eq(aux3,0)
eq(aux4,0)
eq(aux0,0)
ineq(aux1, aux7, 0)
ineq(aux2, aux8, 0)
ineq(aux3, aux9, 0)
ineq(aux4, aux10, 0)
ineq(aux0, aux11, 0)
ineq(aux5, aux12, 0)
ineq(aux6, aux13, 0)
**EOF**
