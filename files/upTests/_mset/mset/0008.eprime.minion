MINION 3
# CSE_number = 13
# CSE_eliminated_expressions = 36
# CSE_total_size = 55
**VARIABLES**
DISCRETE x_MSetOccurrence_00000 #
{0..5}
DISCRETE x_MSetOccurrence_00001 #
{0..5}
DISCRETE x_MSetOccurrence_00002 #
{0..5}
DISCRETE x_MSetOccurrence_00003 #
{0..5}
DISCRETE x_MSetOccurrence_00004 #
{0..5}
DISCRETE x_MSetOccurrence_00005 #
{0..5}
DISCRETE y_MSetOccurrence_00000 #
{0..3}
DISCRETE y_MSetOccurrence_00001 #
{0..3}
DISCRETE y_MSetOccurrence_00002 #
{0..3}
DISCRETE y_MSetOccurrence_00003 #
{0..3}
DISCRETE y_MSetOccurrence_00004 #
{0..3}
BOOL aux0 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00004)<=(0<x_MSetOccurrence_00003))
BOOL aux1 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00003)<=(0<x_MSetOccurrence_00002))
BOOL aux2 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00002)<=(0<x_MSetOccurrence_00001))
BOOL aux3 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00001)<=(0<x_MSetOccurrence_00000))
BOOL aux4 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00003)
BOOL aux5 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00002)
BOOL aux6 #CSE: 3 occurrences of: (0<x_MSetOccurrence_00001)
BOOL aux7 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00004)
BOOL aux8 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00001)
BOOL aux9 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00002)
BOOL aux10 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00003)
BOOL aux11 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00000)
BOOL aux12 #(0<x_MSetOccurrence_00004)
BOOL aux13 #(0<x_MSetOccurrence_00005)
BOOL aux14 #(aux11<=0)
**SEARCH**
PRINT[[x_MSetOccurrence_00000],[x_MSetOccurrence_00001],[x_MSetOccurrence_00002],[x_MSetOccurrence_00003],[x_MSetOccurrence_00004],[x_MSetOccurrence_00005],[y_MSetOccurrence_00000],[y_MSetOccurrence_00001],[y_MSetOccurrence_00002],[y_MSetOccurrence_00003],[y_MSetOccurrence_00004]]
VARORDER STATIC [x_MSetOccurrence_00000,x_MSetOccurrence_00001,x_MSetOccurrence_00002,x_MSetOccurrence_00003,x_MSetOccurrence_00004,x_MSetOccurrence_00005,y_MSetOccurrence_00000,y_MSetOccurrence_00001,y_MSetOccurrence_00002,y_MSetOccurrence_00003,y_MSetOccurrence_00004]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14]
**CONSTRAINTS**
reify(ineq(0, x_MSetOccurrence_00004, -1), aux12)
reify(ineq(0, x_MSetOccurrence_00005, -1), aux13)
reify(ineq(aux11, 0, 0), aux14)
reify(ineq(0, x_MSetOccurrence_00002, -1), aux5)
ineq(aux7, aux0, 0)
ineq(aux6, aux2, 0)
ineq(aux4, aux0, 0)
reify(ineq(0, y_MSetOccurrence_00003, -1), aux10)
reify(ineq(0, y_MSetOccurrence_00002, -1), aux9)
reify(ineq(0, y_MSetOccurrence_00004, -1), aux7)
reify(ineq(0, x_MSetOccurrence_00001, -1), aux6)
reify(ineq(0, x_MSetOccurrence_00003, -1), aux4)
ineq(0, x_MSetOccurrence_00000, -1)
ineq(aux8, aux3, 0)
ineq(aux11, aux14, 0)
ineq(aux10, aux1, 0)
ineq(aux9, aux2, 0)
reify(ineq(aux7, aux4, 0), aux0)
ineq(aux5, aux1, 0)
reify(ineq(aux10, aux5, 0), aux1)
reify(ineq(0, y_MSetOccurrence_00000, -1), aux11)
reify(ineq(0, y_MSetOccurrence_00001, -1), aux8)
w-literal(aux3,1)
reify(ineq(aux9, aux6, 0), aux2)
sumleq([aux11,aux8,aux9,aux10,aux7],3)
sumgeq([aux11,aux8,aux9,aux10,aux7],3)
sumleq([1,aux6,aux5,aux4,aux12,aux13],5)
sumgeq([1,aux6,aux5,aux4,aux12,aux13],5)
**EOF**
