MINION 3
# CSE_number = 91
# CSE_eliminated_expressions = 268
# CSE_total_size = 487
**VARIABLES**
DISCRETE x_MSetOccurrence_00000 #
{0..5}
DISCRETE x_MSetOccurrence_00001 #
{0..5}
DISCRETE x_MSetOccurrence_00002 #
{0..5}
DISCRETE x_MSetOccurrence_00003 #
{0..5}
DISCRETE x_MSetOccurrence_00004 #
{0..5}
DISCRETE x_MSetOccurrence_00005 #
{0..5}
DISCRETE x_MSetExplicit_00000 #
{4..9}
DISCRETE x_MSetExplicit_00001 #
{4..9}
DISCRETE x_MSetExplicit_00002 #
{4..9}
DISCRETE x_MSetExplicit_00003 #
{4..9}
DISCRETE x_MSetExplicit_00004 #
{4..9}
DISCRETE y_MSetOccurrence_00000 #
{0..3}
DISCRETE y_MSetOccurrence_00001 #
{0..3}
DISCRETE y_MSetOccurrence_00002 #
{0..3}
DISCRETE y_MSetOccurrence_00003 #
{0..3}
DISCRETE y_MSetOccurrence_00004 #
{0..3}
DISCRETE aux0 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=5) + (x_MSetExplicit_00001=5) + (x_MSetExplicit_00002=5) + (x_MSetExplicit_00003=5) + (x_MSetExplicit_00004=5))
{0..5}
DISCRETE aux1 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=6) + (x_MSetExplicit_00001=6) + (x_MSetExplicit_00002=6) + (x_MSetExplicit_00003=6) + (x_MSetExplicit_00004=6))
{0..5}
DISCRETE aux2 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=7) + (x_MSetExplicit_00001=7) + (x_MSetExplicit_00002=7) + (x_MSetExplicit_00003=7) + (x_MSetExplicit_00004=7))
{0..5}
DISCRETE aux3 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=8) + (x_MSetExplicit_00001=8) + (x_MSetExplicit_00002=8) + (x_MSetExplicit_00003=8) + (x_MSetExplicit_00004=8))
{0..5}
DISCRETE aux4 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=4) + (x_MSetExplicit_00001=4) + (x_MSetExplicit_00002=4) + (x_MSetExplicit_00003=4) + (x_MSetExplicit_00004=4))
{0..5}
DISCRETE aux5 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=9) + (x_MSetExplicit_00001=9) + (x_MSetExplicit_00002=9) + (x_MSetExplicit_00003=9) + (x_MSetExplicit_00004=9))
{0..5}
BOOL aux6 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=4)*(0<x_MSetOccurrence_00000))
BOOL aux7 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=5)*(0<x_MSetOccurrence_00001))
BOOL aux8 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=6)*(0<x_MSetOccurrence_00002))
BOOL aux9 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=7)*(0<x_MSetOccurrence_00003))
BOOL aux10 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=8)*(0<x_MSetOccurrence_00004))
BOOL aux11 #CSE: 2 occurrences of: ((x_MSetExplicit_00004=9)*(0<x_MSetOccurrence_00005))
BOOL aux12 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=6)*(0<x_MSetOccurrence_00002))
BOOL aux13 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=7)*(0<x_MSetOccurrence_00003))
BOOL aux14 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=4)*(0<x_MSetOccurrence_00000))
BOOL aux15 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=5)*(0<x_MSetOccurrence_00001))
BOOL aux16 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=8)*(0<x_MSetOccurrence_00004))
BOOL aux17 #CSE: 2 occurrences of: ((x_MSetExplicit_00002=9)*(0<x_MSetOccurrence_00005))
BOOL aux18 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=9)*(0<x_MSetOccurrence_00005))
BOOL aux19 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=8)*(0<x_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=7)*(0<x_MSetOccurrence_00003))
BOOL aux21 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=6)*(0<x_MSetOccurrence_00002))
BOOL aux22 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=5)*(0<x_MSetOccurrence_00001))
BOOL aux23 #CSE: 2 occurrences of: ((x_MSetExplicit_00003=4)*(0<x_MSetOccurrence_00000))
BOOL aux24 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=8)*(0<x_MSetOccurrence_00004))
BOOL aux25 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=9)*(0<x_MSetOccurrence_00005))
BOOL aux26 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=4)*(0<x_MSetOccurrence_00000))
BOOL aux27 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=5)*(0<x_MSetOccurrence_00001))
BOOL aux28 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=6)*(0<x_MSetOccurrence_00002))
BOOL aux29 #CSE: 2 occurrences of: ((x_MSetExplicit_00000=7)*(0<x_MSetOccurrence_00003))
BOOL aux30 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=5)*(0<x_MSetOccurrence_00001))
BOOL aux31 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=4)*(0<x_MSetOccurrence_00000))
BOOL aux32 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=7)*(0<x_MSetOccurrence_00003))
BOOL aux33 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=6)*(0<x_MSetOccurrence_00002))
BOOL aux34 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=9)*(0<x_MSetOccurrence_00005))
BOOL aux35 #CSE: 2 occurrences of: ((x_MSetExplicit_00001=8)*(0<x_MSetOccurrence_00004))
BOOL aux36 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00004)<=(0<x_MSetOccurrence_00003))
BOOL aux37 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00003)<=(0<x_MSetOccurrence_00002))
BOOL aux38 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00002)<=(0<x_MSetOccurrence_00001))
BOOL aux39 #CSE: 2 occurrences of: ((0<y_MSetOccurrence_00001)<=(0<x_MSetOccurrence_00000))
BOOL aux40 #CSE: 12 occurrences of: (0<x_MSetOccurrence_00002)
BOOL aux41 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00004)
BOOL aux42 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00002)
BOOL aux43 #CSE: 4 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00003)
BOOL aux44 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00003)
BOOL aux45 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00004)
BOOL aux46 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00001)
BOOL aux47 #CSE: 4 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00002)
BOOL aux48 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00004)
BOOL aux49 #CSE: 4 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00003)
BOOL aux50 #CSE: 4 occurrences of: (x_MSetExplicit_00003=x_MSetExplicit_00004)
BOOL aux51 #CSE: 12 occurrences of: (0<x_MSetOccurrence_00001)
BOOL aux52 #CSE: 12 occurrences of: (0<x_MSetOccurrence_00003)
BOOL aux53 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00004)
BOOL aux54 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00001)
BOOL aux55 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00002)
BOOL aux56 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00003)
BOOL aux57 #CSE: 10 occurrences of: (0<x_MSetOccurrence_00005)
BOOL aux58 #CSE: 10 occurrences of: (0<x_MSetOccurrence_00004)
BOOL aux59 #CSE: 3 occurrences of: (x_MSetExplicit_00001=4)
BOOL aux60 #CSE: 3 occurrences of: (x_MSetExplicit_00002=4)
BOOL aux61 #CSE: 3 occurrences of: (x_MSetExplicit_00000=4)
BOOL aux62 #CSE: 3 occurrences of: (0<y_MSetOccurrence_00000)
BOOL aux63 #CSE: 3 occurrences of: (x_MSetExplicit_00004=4)
BOOL aux64 #CSE: 3 occurrences of: (x_MSetExplicit_00003=4)
BOOL aux65 #CSE: 12 occurrences of: (0<x_MSetOccurrence_00000)
BOOL aux66 #CSE: 2 occurrences of: (x_MSetExplicit_00001=5)
BOOL aux67 #CSE: 2 occurrences of: (x_MSetExplicit_00000=6)
BOOL aux68 #CSE: 2 occurrences of: (x_MSetExplicit_00000=5)
BOOL aux69 #CSE: 2 occurrences of: (x_MSetExplicit_00000=9)
BOOL aux70 #CSE: 2 occurrences of: (x_MSetExplicit_00000=8)
BOOL aux71 #CSE: 2 occurrences of: (x_MSetExplicit_00000=7)
BOOL aux72 #CSE: 2 occurrences of: (x_MSetExplicit_00002=8)
BOOL aux73 #CSE: 2 occurrences of: (x_MSetExplicit_00002=7)
BOOL aux74 #CSE: 2 occurrences of: (x_MSetExplicit_00002=6)
BOOL aux75 #CSE: 2 occurrences of: (x_MSetExplicit_00002=5)
BOOL aux76 #CSE: 2 occurrences of: (x_MSetExplicit_00001=9)
BOOL aux77 #CSE: 2 occurrences of: (x_MSetExplicit_00001=8)
BOOL aux78 #CSE: 2 occurrences of: (x_MSetExplicit_00001=7)
BOOL aux79 #CSE: 2 occurrences of: (x_MSetExplicit_00001=6)
BOOL aux80 #CSE: 2 occurrences of: (x_MSetExplicit_00003=6)
BOOL aux81 #CSE: 2 occurrences of: (x_MSetExplicit_00003=5)
BOOL aux82 #CSE: 2 occurrences of: (x_MSetExplicit_00003=9)
BOOL aux83 #CSE: 2 occurrences of: (x_MSetExplicit_00003=8)
BOOL aux84 #CSE: 2 occurrences of: (x_MSetExplicit_00003=7)
BOOL aux85 #CSE: 2 occurrences of: (x_MSetExplicit_00002=9)
BOOL aux86 #CSE: 2 occurrences of: (x_MSetExplicit_00004=9)
BOOL aux87 #CSE: 2 occurrences of: (x_MSetExplicit_00004=8)
BOOL aux88 #CSE: 2 occurrences of: (x_MSetExplicit_00004=7)
BOOL aux89 #CSE: 2 occurrences of: (x_MSetExplicit_00004=6)
BOOL aux90 #CSE: 2 occurrences of: (x_MSetExplicit_00004=5)
BOOL aux91 #(aux62<=0)
BOOL aux92 #(aux4<=aux65)
BOOL aux93 #(aux0<=aux51)
BOOL aux94 #(aux1<=aux40)
BOOL aux95 #(aux2<=aux52)
BOOL aux96 #(aux3<=aux58)
BOOL aux97 #(aux5<=aux57)
BOOL aux98 #(aux65<=aux4)
BOOL aux99 #(aux51<=aux0)
BOOL aux100 #(aux40<=aux1)
BOOL aux101 #(aux52<=aux2)
BOOL aux102 #(aux58<=aux3)
BOOL aux103 #(aux57<=aux5)
**SEARCH**
PRINT[[x_MSetOccurrence_00000],[x_MSetOccurrence_00001],[x_MSetOccurrence_00002],[x_MSetOccurrence_00003],[x_MSetOccurrence_00004],[x_MSetOccurrence_00005],[x_MSetExplicit_00000],[x_MSetExplicit_00001],[x_MSetExplicit_00002],[x_MSetExplicit_00003],[x_MSetExplicit_00004],[y_MSetOccurrence_00000],[y_MSetOccurrence_00001],[y_MSetOccurrence_00002],[y_MSetOccurrence_00003],[y_MSetOccurrence_00004]]
VARORDER STATIC [x_MSetOccurrence_00000,x_MSetOccurrence_00001,x_MSetOccurrence_00002,x_MSetOccurrence_00003,x_MSetOccurrence_00004,x_MSetOccurrence_00005,x_MSetExplicit_00000,x_MSetExplicit_00001,x_MSetExplicit_00002,x_MSetExplicit_00003,x_MSetExplicit_00004,y_MSetOccurrence_00000,y_MSetOccurrence_00001,y_MSetOccurrence_00002,y_MSetOccurrence_00003,y_MSetOccurrence_00004]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103]
**CONSTRAINTS**
reify(ineq(aux62, 0, 0), aux91)
reify(ineq(aux4, aux65, 0), aux92)
reify(ineq(aux0, aux51, 0), aux93)
reify(ineq(aux1, aux40, 0), aux94)
reify(ineq(aux2, aux52, 0), aux95)
reify(ineq(aux3, aux58, 0), aux96)
reify(ineq(aux5, aux57, 0), aux97)
reify(ineq(aux65, aux4, 0), aux98)
reify(ineq(aux51, aux0, 0), aux99)
reify(ineq(aux40, aux1, 0), aux100)
reify(ineq(aux52, aux2, 0), aux101)
reify(ineq(aux58, aux3, 0), aux102)
reify(ineq(aux57, aux5, 0), aux103)
product(aux63, aux65, aux6)
product(aux90, aux51, aux7)
product(aux89, aux40, aux8)
product(aux88, aux52, aux9)
product(aux87, aux58, aux10)
product(aux86, aux57, aux11)
product(aux74, aux40, aux12)
product(aux73, aux52, aux13)
product(aux60, aux65, aux14)
product(aux75, aux51, aux15)
product(aux72, aux58, aux16)
product(aux85, aux57, aux17)
product(aux82, aux57, aux18)
product(aux83, aux58, aux19)
product(aux84, aux52, aux20)
product(aux80, aux40, aux21)
product(aux81, aux51, aux22)
product(aux64, aux65, aux23)
product(aux70, aux58, aux24)
product(aux69, aux57, aux25)
product(aux61, aux65, aux26)
product(aux68, aux51, aux27)
product(aux67, aux40, aux28)
product(aux71, aux52, aux29)
product(aux66, aux51, aux30)
product(aux59, aux65, aux31)
product(aux78, aux52, aux32)
product(aux79, aux40, aux33)
product(aux76, aux57, aux34)
product(aux77, aux58, aux35)
reify(ineq(aux53, aux52, 0), aux36)
reify(ineq(aux56, aux40, 0), aux37)
reify(ineq(aux55, aux51, 0), aux38)
reify(ineq(aux54, aux65, 0), aux39)
reify(ineq(0, x_MSetOccurrence_00002, -1), aux40)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00004), aux41)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00002), aux42)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00003), aux43)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00003), aux44)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00004), aux45)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00001), aux46)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00002), aux47)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00004), aux48)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00003), aux49)
reify(eq(x_MSetExplicit_00003,x_MSetExplicit_00004), aux50)
reify(ineq(0, x_MSetOccurrence_00001, -1), aux51)
reify(ineq(0, x_MSetOccurrence_00003, -1), aux52)
reify(ineq(0, y_MSetOccurrence_00004, -1), aux53)
reify(ineq(0, y_MSetOccurrence_00001, -1), aux54)
reify(ineq(0, y_MSetOccurrence_00002, -1), aux55)
reify(ineq(0, y_MSetOccurrence_00003, -1), aux56)
reify(ineq(0, x_MSetOccurrence_00005, -1), aux57)
reify(ineq(0, x_MSetOccurrence_00004, -1), aux58)
reify(w-literal(x_MSetExplicit_00001,4), aux59)
reify(w-literal(x_MSetExplicit_00002,4), aux60)
reify(w-literal(x_MSetExplicit_00000,4), aux61)
reify(ineq(0, y_MSetOccurrence_00000, -1), aux62)
reify(w-literal(x_MSetExplicit_00004,4), aux63)
reify(w-literal(x_MSetExplicit_00003,4), aux64)
reify(ineq(0, x_MSetOccurrence_00000, -1), aux65)
reify(w-literal(x_MSetExplicit_00001,5), aux66)
reify(w-literal(x_MSetExplicit_00000,6), aux67)
reify(w-literal(x_MSetExplicit_00000,5), aux68)
reify(w-literal(x_MSetExplicit_00000,9), aux69)
reify(w-literal(x_MSetExplicit_00000,8), aux70)
reify(w-literal(x_MSetExplicit_00000,7), aux71)
reify(w-literal(x_MSetExplicit_00002,8), aux72)
reify(w-literal(x_MSetExplicit_00002,7), aux73)
reify(w-literal(x_MSetExplicit_00002,6), aux74)
reify(w-literal(x_MSetExplicit_00002,5), aux75)
reify(w-literal(x_MSetExplicit_00001,9), aux76)
reify(w-literal(x_MSetExplicit_00001,8), aux77)
reify(w-literal(x_MSetExplicit_00001,7), aux78)
reify(w-literal(x_MSetExplicit_00001,6), aux79)
reify(w-literal(x_MSetExplicit_00003,6), aux80)
reify(w-literal(x_MSetExplicit_00003,5), aux81)
reify(w-literal(x_MSetExplicit_00003,9), aux82)
reify(w-literal(x_MSetExplicit_00003,8), aux83)
reify(w-literal(x_MSetExplicit_00003,7), aux84)
reify(w-literal(x_MSetExplicit_00002,9), aux85)
reify(w-literal(x_MSetExplicit_00004,9), aux86)
reify(w-literal(x_MSetExplicit_00004,8), aux87)
reify(w-literal(x_MSetExplicit_00004,7), aux88)
reify(w-literal(x_MSetExplicit_00004,6), aux89)
reify(w-literal(x_MSetExplicit_00004,5), aux90)
watched-or({w-literal(aux61,1),w-literal(aux59,1),w-literal(aux60,1),w-literal(aux64,1),w-literal(aux63,1)})
ineq(x_MSetExplicit_00000, x_MSetExplicit_00001, 0)
ineq(x_MSetExplicit_00001, x_MSetExplicit_00002, 0)
ineq(x_MSetExplicit_00002, x_MSetExplicit_00003, 0)
ineq(x_MSetExplicit_00003, x_MSetExplicit_00004, 0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux46,aux47,aux44,aux45,aux26,aux27,aux28,aux29,aux24,aux25],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux46,aux42,aux43,aux41,aux31,aux30,aux33,aux32,aux35,aux34],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux47,aux42,aux49,aux48,aux14,aux15,aux12,aux13,aux16,aux17],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux44,aux43,aux49,aux50,aux23,aux22,aux21,aux20,aux19,aux18],0)
weightedsumleq([1,1,1,1,1,-1,-1,-1,-1,-1,-1],[1,aux45,aux41,aux48,aux50,aux6,aux7,aux8,aux9,aux10,aux11],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux46,aux47,aux44,aux45,aux26,aux27,aux28,aux29,aux24,aux25],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux46,aux42,aux43,aux41,aux31,aux30,aux33,aux32,aux35,aux34],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux47,aux42,aux49,aux48,aux14,aux15,aux12,aux13,aux16,aux17],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux44,aux43,aux49,aux50,aux23,aux22,aux21,aux20,aux19,aux18],0)
weightedsumleq([1,-1,-1,-1,-1,1,1,1,1,1,1],[-1,aux45,aux41,aux48,aux50,aux6,aux7,aux8,aux9,aux10,aux11],0)
ineq(aux62, aux91, 0)
ineq(aux54, aux39, 0)
ineq(aux55, aux38, 0)
ineq(aux56, aux37, 0)
ineq(aux53, aux36, 0)
ineq(aux65, aux92, 0)
ineq(aux51, aux93, 0)
ineq(aux40, aux94, 0)
ineq(aux52, aux95, 0)
ineq(aux58, aux96, 0)
ineq(aux57, aux97, 0)
ineq(aux65, aux39, 0)
ineq(aux51, aux38, 0)
ineq(aux40, aux37, 0)
ineq(aux52, aux36, 0)
ineq(aux65, aux98, 0)
ineq(aux51, aux99, 0)
ineq(aux40, aux100, 0)
ineq(aux52, aux101, 0)
ineq(aux58, aux102, 0)
ineq(aux57, aux103, 0)
sumleq([aux68,aux66,aux75,aux81,aux90],aux0)
sumgeq([aux68,aux66,aux75,aux81,aux90],aux0)
sumleq([aux67,aux79,aux74,aux80,aux89],aux1)
sumgeq([aux67,aux79,aux74,aux80,aux89],aux1)
sumleq([aux71,aux78,aux73,aux84,aux88],aux2)
sumgeq([aux71,aux78,aux73,aux84,aux88],aux2)
sumleq([aux70,aux77,aux72,aux83,aux87],aux3)
sumgeq([aux70,aux77,aux72,aux83,aux87],aux3)
sumleq([aux61,aux59,aux60,aux64,aux63],aux4)
sumgeq([aux61,aux59,aux60,aux64,aux63],aux4)
sumleq([aux69,aux76,aux85,aux82,aux86],aux5)
sumgeq([aux69,aux76,aux85,aux82,aux86],aux5)
sumleq([aux62,aux54,aux55,aux56,aux53],3)
sumgeq([aux62,aux54,aux55,aux56,aux53],3)
sumleq([aux65,aux51,aux40,aux52,aux58,aux57],5)
sumgeq([aux65,aux51,aux40,aux52,aux58,aux57],5)
**EOF**
