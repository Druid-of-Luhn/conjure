MINION 3
# CSE_number = 28
# CSE_eliminated_expressions = 56
# CSE_total_size = 84
**VARIABLES**
DISCRETE x_MSetExplicit_00000 #
{4..9}
DISCRETE x_MSetExplicit_00001 #
{4..9}
DISCRETE x_MSetExplicit_00002 #
{4..9}
DISCRETE x_MSetExplicit_00003 #
{4..9}
DISCRETE x_MSetExplicit_00004 #
{4..9}
DISCRETE y_MSetExplicit_00000 #
{3..7}
DISCRETE y_MSetExplicit_00001 #
{3..7}
DISCRETE y_MSetExplicit_00002 #
{3..7}
BOOL aux0 #CSE: 2 occurrences of: (x_MSetExplicit_00003=x_MSetExplicit_00004)
BOOL aux1 #CSE: 2 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00002)
BOOL aux2 #CSE: 2 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00004)
BOOL aux3 #CSE: 2 occurrences of: (x_MSetExplicit_00001=x_MSetExplicit_00003)
BOOL aux4 #CSE: 2 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00003)
BOOL aux5 #CSE: 2 occurrences of: (x_MSetExplicit_00002=x_MSetExplicit_00004)
BOOL aux6 #CSE: 2 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00001)
BOOL aux7 #CSE: 2 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00002)
BOOL aux8 #CSE: 2 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00003)
BOOL aux9 #CSE: 2 occurrences of: (x_MSetExplicit_00000=x_MSetExplicit_00004)
BOOL aux10 #CSE: 2 occurrences of: (x_MSetExplicit_00004=y_MSetExplicit_00002)
BOOL aux11 #CSE: 2 occurrences of: (x_MSetExplicit_00004=y_MSetExplicit_00001)
BOOL aux12 #CSE: 2 occurrences of: (x_MSetExplicit_00004=y_MSetExplicit_00000)
BOOL aux13 #CSE: 2 occurrences of: (x_MSetExplicit_00000=y_MSetExplicit_00002)
BOOL aux14 #CSE: 2 occurrences of: (x_MSetExplicit_00000=y_MSetExplicit_00001)
BOOL aux15 #CSE: 2 occurrences of: (x_MSetExplicit_00000=y_MSetExplicit_00000)
BOOL aux16 #CSE: 2 occurrences of: (x_MSetExplicit_00001=y_MSetExplicit_00000)
BOOL aux17 #CSE: 2 occurrences of: (x_MSetExplicit_00001=y_MSetExplicit_00001)
BOOL aux18 #CSE: 2 occurrences of: (x_MSetExplicit_00001=y_MSetExplicit_00002)
BOOL aux19 #CSE: 2 occurrences of: (x_MSetExplicit_00002=y_MSetExplicit_00002)
BOOL aux20 #CSE: 2 occurrences of: (x_MSetExplicit_00002=y_MSetExplicit_00001)
BOOL aux21 #CSE: 2 occurrences of: (x_MSetExplicit_00002=y_MSetExplicit_00000)
BOOL aux22 #CSE: 2 occurrences of: (x_MSetExplicit_00003=y_MSetExplicit_00002)
BOOL aux23 #CSE: 2 occurrences of: (x_MSetExplicit_00003=y_MSetExplicit_00000)
BOOL aux24 #CSE: 2 occurrences of: (x_MSetExplicit_00003=y_MSetExplicit_00001)
BOOL aux25 #CSE: 2 occurrences of: (y_MSetExplicit_00001=y_MSetExplicit_00002)
BOOL aux26 #CSE: 2 occurrences of: (y_MSetExplicit_00000=y_MSetExplicit_00002)
BOOL aux27 #CSE: 2 occurrences of: (y_MSetExplicit_00000=y_MSetExplicit_00001)
**SEARCH**
PRINT[[x_MSetExplicit_00000],[x_MSetExplicit_00001],[x_MSetExplicit_00002],[x_MSetExplicit_00003],[x_MSetExplicit_00004],[y_MSetExplicit_00000],[y_MSetExplicit_00001],[y_MSetExplicit_00002]]
VARORDER STATIC [x_MSetExplicit_00000,x_MSetExplicit_00001,x_MSetExplicit_00002,x_MSetExplicit_00003,x_MSetExplicit_00004,y_MSetExplicit_00000,y_MSetExplicit_00001,y_MSetExplicit_00002]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27]
**CONSTRAINTS**
reify(eq(x_MSetExplicit_00003,x_MSetExplicit_00004), aux0)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00002), aux1)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00004), aux2)
reify(eq(x_MSetExplicit_00001,x_MSetExplicit_00003), aux3)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00003), aux4)
reify(eq(x_MSetExplicit_00002,x_MSetExplicit_00004), aux5)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00001), aux6)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00002), aux7)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00003), aux8)
reify(eq(x_MSetExplicit_00000,x_MSetExplicit_00004), aux9)
reify(eq(x_MSetExplicit_00004,y_MSetExplicit_00002), aux10)
reify(eq(x_MSetExplicit_00004,y_MSetExplicit_00001), aux11)
reify(eq(x_MSetExplicit_00004,y_MSetExplicit_00000), aux12)
reify(eq(x_MSetExplicit_00000,y_MSetExplicit_00002), aux13)
reify(eq(x_MSetExplicit_00000,y_MSetExplicit_00001), aux14)
reify(eq(x_MSetExplicit_00000,y_MSetExplicit_00000), aux15)
reify(eq(x_MSetExplicit_00001,y_MSetExplicit_00000), aux16)
reify(eq(x_MSetExplicit_00001,y_MSetExplicit_00001), aux17)
reify(eq(x_MSetExplicit_00001,y_MSetExplicit_00002), aux18)
reify(eq(x_MSetExplicit_00002,y_MSetExplicit_00002), aux19)
reify(eq(x_MSetExplicit_00002,y_MSetExplicit_00001), aux20)
reify(eq(x_MSetExplicit_00002,y_MSetExplicit_00000), aux21)
reify(eq(x_MSetExplicit_00003,y_MSetExplicit_00002), aux22)
reify(eq(x_MSetExplicit_00003,y_MSetExplicit_00000), aux23)
reify(eq(x_MSetExplicit_00003,y_MSetExplicit_00001), aux24)
reify(eq(y_MSetExplicit_00001,y_MSetExplicit_00002), aux25)
reify(eq(y_MSetExplicit_00000,y_MSetExplicit_00002), aux26)
reify(eq(y_MSetExplicit_00000,y_MSetExplicit_00001), aux27)
watched-or({w-literal(x_MSetExplicit_00000,4),w-literal(x_MSetExplicit_00001,4),w-literal(x_MSetExplicit_00002,4),w-literal(x_MSetExplicit_00003,4),w-literal(x_MSetExplicit_00004,4)})
ineq(y_MSetExplicit_00000, y_MSetExplicit_00001, 0)
ineq(y_MSetExplicit_00001, y_MSetExplicit_00002, 0)
weightedsumleq([1,-1,-1,-1,-1,-1,1,1],[1,aux15,aux16,aux21,aux23,aux12,aux27,aux26],0)
weightedsumleq([1,-1,-1,-1,-1,-1,1,1],[1,aux14,aux17,aux20,aux24,aux11,aux27,aux25],0)
weightedsumleq([1,-1,-1,-1,-1,-1,1,1],[1,aux13,aux18,aux19,aux22,aux10,aux26,aux25],0)
ineq(x_MSetExplicit_00000, x_MSetExplicit_00001, 0)
ineq(x_MSetExplicit_00001, x_MSetExplicit_00002, 0)
ineq(x_MSetExplicit_00002, x_MSetExplicit_00003, 0)
ineq(x_MSetExplicit_00003, x_MSetExplicit_00004, 0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1],[-1,aux15,aux14,aux13,aux6,aux7,aux8,aux9],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1],[-1,aux16,aux17,aux18,aux6,aux1,aux3,aux2],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1],[-1,aux21,aux20,aux19,aux7,aux1,aux4,aux5],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1],[-1,aux23,aux24,aux22,aux8,aux3,aux4,aux0],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1],[-1,aux12,aux11,aux10,aux9,aux2,aux5,aux0],0)
**EOF**
