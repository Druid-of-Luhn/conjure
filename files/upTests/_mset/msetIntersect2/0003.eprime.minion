MINION 3
# CSE_number = 78
# CSE_eliminated_expressions = 276
# CSE_total_size = 364
**VARIABLES**
DISCRETE a_MSetExplicit_00000 #
{3..7}
DISCRETE a_MSetExplicit_00001 #
{3..7}
DISCRETE a_MSetExplicit_00002 #
{3..7}
DISCRETE a_MSetExplicit_00003 #
{3..7}
DISCRETE b_MSetExplicit_00000 #
{3..7}
DISCRETE b_MSetExplicit_00001 #
{3..7}
DISCRETE b_MSetExplicit_00002 #
{3..7}
DISCRETE b_MSetExplicit_00003 #
{3..7}
DISCRETE b_MSetOccurrence_00000 #
{0..4}
DISCRETE b_MSetOccurrence_00001 #
{0..4}
DISCRETE b_MSetOccurrence_00002 #
{0..4}
DISCRETE b_MSetOccurrence_00003 #
{0..4}
DISCRETE b_MSetOccurrence_00004 #
{0..4}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3) + (b_MSetExplicit_00001=3) + (b_MSetExplicit_00002=3) + (b_MSetExplicit_00003=3))
{0..4}
DISCRETE aux1 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6) + (b_MSetExplicit_00001=6) + (b_MSetExplicit_00002=6) + (b_MSetExplicit_00003=6))
{0..4}
DISCRETE aux2 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7) + (b_MSetExplicit_00001=7) + (b_MSetExplicit_00002=7) + (b_MSetExplicit_00003=7))
{0..4}
DISCRETE aux3 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4) + (b_MSetExplicit_00001=4) + (b_MSetExplicit_00002=4) + (b_MSetExplicit_00003=4))
{0..4}
DISCRETE aux4 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5) + (b_MSetExplicit_00001=5) + (b_MSetExplicit_00002=5) + (b_MSetExplicit_00003=5))
{0..4}
BOOL aux5 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6)*(0<b_MSetOccurrence_00003))
BOOL aux6 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5)*(0<b_MSetOccurrence_00002))
BOOL aux7 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4)*(0<b_MSetOccurrence_00001))
BOOL aux8 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3)*(0<b_MSetOccurrence_00000))
BOOL aux9 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=3)*(0<b_MSetOccurrence_00000))
BOOL aux10 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=6)*(0<b_MSetOccurrence_00003))
BOOL aux11 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=7)*(0<b_MSetOccurrence_00004))
BOOL aux12 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=4)*(0<b_MSetOccurrence_00001))
BOOL aux13 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=5)*(0<b_MSetOccurrence_00002))
BOOL aux14 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7)*(0<b_MSetOccurrence_00004))
BOOL aux15 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=3)*(0<b_MSetOccurrence_00000))
BOOL aux16 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=4)*(0<b_MSetOccurrence_00001))
BOOL aux17 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=5)*(0<b_MSetOccurrence_00002))
BOOL aux18 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=6)*(0<b_MSetOccurrence_00003))
BOOL aux19 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=7)*(0<b_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=3)*(0<b_MSetOccurrence_00000))
BOOL aux21 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=5)*(0<b_MSetOccurrence_00002))
BOOL aux22 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=4)*(0<b_MSetOccurrence_00001))
BOOL aux23 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=7)*(0<b_MSetOccurrence_00004))
BOOL aux24 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=6)*(0<b_MSetOccurrence_00003))
BOOL aux25 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00001)
BOOL aux26 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00000)
BOOL aux27 #CSE: 2 occurrences of: (b_MSetExplicit_00002=5)
BOOL aux28 #CSE: 2 occurrences of: (b_MSetExplicit_00002=4)
BOOL aux29 #CSE: 2 occurrences of: (b_MSetExplicit_00002=3)
BOOL aux30 #CSE: 2 occurrences of: (b_MSetExplicit_00002=7)
BOOL aux31 #CSE: 2 occurrences of: (b_MSetExplicit_00002=6)
BOOL aux32 #CSE: 2 occurrences of: (b_MSetExplicit_00003=3)
BOOL aux33 #CSE: 2 occurrences of: (b_MSetExplicit_00003=5)
BOOL aux34 #CSE: 2 occurrences of: (b_MSetExplicit_00003=4)
BOOL aux35 #CSE: 2 occurrences of: (b_MSetExplicit_00003=7)
BOOL aux36 #CSE: 2 occurrences of: (b_MSetExplicit_00003=6)
BOOL aux37 #CSE: 2 occurrences of: (b_MSetExplicit_00000=5)
BOOL aux38 #CSE: 2 occurrences of: (b_MSetExplicit_00000=4)
BOOL aux39 #CSE: 2 occurrences of: (b_MSetExplicit_00000=7)
BOOL aux40 #CSE: 2 occurrences of: (b_MSetExplicit_00000=6)
BOOL aux41 #CSE: 2 occurrences of: (b_MSetExplicit_00000=3)
BOOL aux42 #CSE: 2 occurrences of: (b_MSetExplicit_00001=7)
BOOL aux43 #CSE: 2 occurrences of: (b_MSetExplicit_00001=4)
BOOL aux44 #CSE: 2 occurrences of: (b_MSetExplicit_00001=3)
BOOL aux45 #CSE: 2 occurrences of: (b_MSetExplicit_00001=6)
BOOL aux46 #CSE: 2 occurrences of: (b_MSetExplicit_00001=5)
BOOL aux47 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00001)
BOOL aux48 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00003)
BOOL aux49 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00003)
BOOL aux50 #CSE: 8 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00002)
BOOL aux51 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00004)
BOOL aux52 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux53 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux54 #CSE: 4 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux55 #CSE: 4 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux56 #CSE: 4 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux57 #CSE: 4 occurrences of: (a_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux58 #CSE: 8 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00003)
BOOL aux59 #CSE: 8 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00002)
BOOL aux60 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00002)
BOOL aux61 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00000)
BOOL aux62 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00001)
BOOL aux63 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux64 #CSE: 4 occurrences of: (b_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux65 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00000)
BOOL aux66 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00001)
BOOL aux67 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00002)
BOOL aux68 #CSE: 4 occurrences of: (b_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux69 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00000)
BOOL aux70 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux71 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux72 #CSE: 4 occurrences of: (b_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux73 #CSE: 8 occurrences of: (b_MSetExplicit_00002=b_MSetExplicit_00003)
BOOL aux74 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00000)
BOOL aux75 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00001)
BOOL aux76 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00002)
BOOL aux77 #CSE: 4 occurrences of: (b_MSetExplicit_00003=a_MSetExplicit_00003)
BOOL aux78 #(a_MSetExplicit_00000=3)
BOOL aux79 #(a_MSetExplicit_00001=3)
BOOL aux80 #(a_MSetExplicit_00002=3)
BOOL aux81 #(a_MSetExplicit_00003=3)
DISCRETE aux82 #(aux78 + aux79 + aux80 + aux81)
{0..4}
BOOL aux83 #min(aux26, aux82)
BOOL aux84 #(a_MSetExplicit_00000=4)
BOOL aux85 #(a_MSetExplicit_00001=4)
BOOL aux86 #(a_MSetExplicit_00002=4)
BOOL aux87 #(a_MSetExplicit_00003=4)
DISCRETE aux88 #(aux84 + aux85 + aux86 + aux87)
{0..4}
BOOL aux89 #min(aux47, aux88)
BOOL aux90 #(a_MSetExplicit_00000=5)
BOOL aux91 #(a_MSetExplicit_00001=5)
BOOL aux92 #(a_MSetExplicit_00002=5)
BOOL aux93 #(a_MSetExplicit_00003=5)
DISCRETE aux94 #(aux90 + aux91 + aux92 + aux93)
{0..4}
BOOL aux95 #min(aux60, aux94)
BOOL aux96 #(a_MSetExplicit_00000=6)
BOOL aux97 #(a_MSetExplicit_00001=6)
BOOL aux98 #(a_MSetExplicit_00002=6)
BOOL aux99 #(a_MSetExplicit_00003=6)
DISCRETE aux100 #(aux96 + aux97 + aux98 + aux99)
{0..4}
BOOL aux101 #min(aux49, aux100)
BOOL aux102 #(a_MSetExplicit_00000=7)
BOOL aux103 #(a_MSetExplicit_00001=7)
BOOL aux104 #(a_MSetExplicit_00002=7)
BOOL aux105 #(a_MSetExplicit_00003=7)
DISCRETE aux106 #(aux102 + aux103 + aux104 + aux105)
{0..4}
BOOL aux107 #min(aux51, aux106)
BOOL aux108 #(((-1-1*aux52-1*aux56-1*aux57 + aux72 + aux64 + aux68 + aux77)<=0) /\ ((1 + aux53 + aux55 + aux56-1*aux70-1*aux62-1*aux66-1*aux75)<=0) /\ ((-1-1*aux25-1*aux50-1*aux48 + aux69 + aux70 + aux71 + aux72)<=0) /\ ((-1-1*aux53-1*aux54-1*aux52 + aux69 + aux61 + aux65 + aux74)<=0) /\ ((1 + aux48 + aux58 + aux73-1*aux74-1*aux75-1*aux76-1*aux77)<=0) /\ ((1 + aux52 + aux56 + aux57-1*aux72-1*aux64-1*aux68-1*aux77)<=0) /\ ((-1-1*aux50-1*aux59-1*aux73 + aux65 + aux66 + aux67 + aux68)<=0) /\ ((1 + aux25 + aux50 + aux48-1*aux69-1*aux70-1*aux71-1*aux72)<=0) /\ ((-1-1*aux54-1*aux55-1*aux57 + aux71 + aux63 + aux67 + aux76)<=0) /\ ((1 + aux53 + aux54 + aux52-1*aux69-1*aux61-1*aux65-1*aux74)<=0) /\ ((1 + aux50 + aux59 + aux73-1*aux65-1*aux66-1*aux67-1*aux68)<=0) /\ ((1 + aux54 + aux55 + aux57-1*aux71-1*aux63-1*aux67-1*aux76)<=0) /\ ((-1-1*aux25-1*aux59-1*aux58 + aux61 + aux62 + aux63 + aux64)<=0) /\ ((-1-1*aux53-1*aux55-1*aux56 + aux70 + aux62 + aux66 + aux75)<=0) /\ ((-1-1*aux48-1*aux58-1*aux73 + aux74 + aux75 + aux76 + aux77)<=0) /\ ((1 + aux25 + aux59 + aux58-1*aux61-1*aux62-1*aux63-1*aux64)<=0))
BOOL aux109 #(aux26<=aux0)
BOOL aux110 #(aux47<=aux3)
BOOL aux111 #(aux60<=aux4)
BOOL aux112 #(aux49<=aux1)
BOOL aux113 #(aux51<=aux2)
BOOL aux114 #(aux0<=aux26)
BOOL aux115 #(aux3<=aux47)
BOOL aux116 #(aux4<=aux60)
BOOL aux117 #(aux1<=aux49)
BOOL aux118 #(aux2<=aux51)
**SEARCH**
PRINT[[a_MSetExplicit_00000],[a_MSetExplicit_00001],[a_MSetExplicit_00002],[a_MSetExplicit_00003],[b_MSetExplicit_00000],[b_MSetExplicit_00001],[b_MSetExplicit_00002],[b_MSetExplicit_00003],[b_MSetOccurrence_00000],[b_MSetOccurrence_00001],[b_MSetOccurrence_00002],[b_MSetOccurrence_00003],[b_MSetOccurrence_00004],[c]]
VARORDER STATIC [a_MSetExplicit_00000,a_MSetExplicit_00001,a_MSetExplicit_00002,a_MSetExplicit_00003,b_MSetExplicit_00000,b_MSetExplicit_00001,b_MSetExplicit_00002,b_MSetExplicit_00003,b_MSetOccurrence_00000,b_MSetOccurrence_00001,b_MSetOccurrence_00002,b_MSetOccurrence_00003,b_MSetOccurrence_00004,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118]
**CONSTRAINTS**
reify(w-literal(a_MSetExplicit_00000,3), aux78)
reify(w-literal(a_MSetExplicit_00001,3), aux79)
reify(w-literal(a_MSetExplicit_00002,3), aux80)
reify(w-literal(a_MSetExplicit_00003,3), aux81)
min([aux26,aux82],aux83)
reify(w-literal(a_MSetExplicit_00000,4), aux84)
reify(w-literal(a_MSetExplicit_00001,4), aux85)
reify(w-literal(a_MSetExplicit_00002,4), aux86)
reify(w-literal(a_MSetExplicit_00003,4), aux87)
min([aux47,aux88],aux89)
reify(w-literal(a_MSetExplicit_00000,5), aux90)
reify(w-literal(a_MSetExplicit_00001,5), aux91)
reify(w-literal(a_MSetExplicit_00002,5), aux92)
reify(w-literal(a_MSetExplicit_00003,5), aux93)
min([aux60,aux94],aux95)
reify(w-literal(a_MSetExplicit_00000,6), aux96)
reify(w-literal(a_MSetExplicit_00001,6), aux97)
reify(w-literal(a_MSetExplicit_00002,6), aux98)
reify(w-literal(a_MSetExplicit_00003,6), aux99)
min([aux49,aux100],aux101)
reify(w-literal(a_MSetExplicit_00000,7), aux102)
reify(w-literal(a_MSetExplicit_00001,7), aux103)
reify(w-literal(a_MSetExplicit_00002,7), aux104)
reify(w-literal(a_MSetExplicit_00003,7), aux105)
min([aux51,aux106],aux107)
reify(watched-and({weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux52,aux56,aux57,aux72,aux64,aux68,aux77],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux53,aux55,aux56,aux70,aux62,aux66,aux75],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux25,aux50,aux48,aux69,aux70,aux71,aux72],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux53,aux54,aux52,aux69,aux61,aux65,aux74],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux48,aux58,aux73,aux74,aux75,aux76,aux77],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux52,aux56,aux57,aux72,aux64,aux68,aux77],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux50,aux59,aux73,aux65,aux66,aux67,aux68],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux25,aux50,aux48,aux69,aux70,aux71,aux72],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux54,aux55,aux57,aux71,aux63,aux67,aux76],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux53,aux54,aux52,aux69,aux61,aux65,aux74],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux50,aux59,aux73,aux65,aux66,aux67,aux68],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux54,aux55,aux57,aux71,aux63,aux67,aux76],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux25,aux59,aux58,aux61,aux62,aux63,aux64],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux53,aux55,aux56,aux70,aux62,aux66,aux75],0),weightedsumleq([1,-1,-1,-1,1,1,1,1],[-1,aux48,aux58,aux73,aux74,aux75,aux76,aux77],0),weightedsumleq([1,1,1,1,-1,-1,-1,-1],[1,aux25,aux59,aux58,aux61,aux62,aux63,aux64],0)}), aux108)
reify(ineq(aux26, aux0, 0), aux109)
reify(ineq(aux47, aux3, 0), aux110)
reify(ineq(aux60, aux4, 0), aux111)
reify(ineq(aux49, aux1, 0), aux112)
reify(ineq(aux51, aux2, 0), aux113)
reify(ineq(aux0, aux26, 0), aux114)
reify(ineq(aux3, aux47, 0), aux115)
reify(ineq(aux4, aux60, 0), aux116)
reify(ineq(aux1, aux49, 0), aux117)
reify(ineq(aux2, aux51, 0), aux118)
product(aux40, aux49, aux5)
product(aux37, aux60, aux6)
product(aux38, aux47, aux7)
product(aux41, aux26, aux8)
product(aux32, aux26, aux9)
product(aux36, aux49, aux10)
product(aux35, aux51, aux11)
product(aux34, aux47, aux12)
product(aux33, aux60, aux13)
product(aux39, aux51, aux14)
product(aux44, aux26, aux15)
product(aux43, aux47, aux16)
product(aux46, aux60, aux17)
product(aux45, aux49, aux18)
product(aux42, aux51, aux19)
product(aux29, aux26, aux20)
product(aux27, aux60, aux21)
product(aux28, aux47, aux22)
product(aux30, aux51, aux23)
product(aux31, aux49, aux24)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00001), aux25)
reify(ineq(0, b_MSetOccurrence_00000, -1), aux26)
reify(w-literal(b_MSetExplicit_00002,5), aux27)
reify(w-literal(b_MSetExplicit_00002,4), aux28)
reify(w-literal(b_MSetExplicit_00002,3), aux29)
reify(w-literal(b_MSetExplicit_00002,7), aux30)
reify(w-literal(b_MSetExplicit_00002,6), aux31)
reify(w-literal(b_MSetExplicit_00003,3), aux32)
reify(w-literal(b_MSetExplicit_00003,5), aux33)
reify(w-literal(b_MSetExplicit_00003,4), aux34)
reify(w-literal(b_MSetExplicit_00003,7), aux35)
reify(w-literal(b_MSetExplicit_00003,6), aux36)
reify(w-literal(b_MSetExplicit_00000,5), aux37)
reify(w-literal(b_MSetExplicit_00000,4), aux38)
reify(w-literal(b_MSetExplicit_00000,7), aux39)
reify(w-literal(b_MSetExplicit_00000,6), aux40)
reify(w-literal(b_MSetExplicit_00000,3), aux41)
reify(w-literal(b_MSetExplicit_00001,7), aux42)
reify(w-literal(b_MSetExplicit_00001,4), aux43)
reify(w-literal(b_MSetExplicit_00001,3), aux44)
reify(w-literal(b_MSetExplicit_00001,6), aux45)
reify(w-literal(b_MSetExplicit_00001,5), aux46)
reify(ineq(0, b_MSetOccurrence_00001, -1), aux47)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00003), aux48)
reify(ineq(0, b_MSetOccurrence_00003, -1), aux49)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00002), aux50)
reify(ineq(0, b_MSetOccurrence_00004, -1), aux51)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00003), aux52)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00001), aux53)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00002), aux54)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00002), aux55)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00003), aux56)
reify(eq(a_MSetExplicit_00002,a_MSetExplicit_00003), aux57)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00003), aux58)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00002), aux59)
reify(ineq(0, b_MSetOccurrence_00002, -1), aux60)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00000), aux61)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00001), aux62)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00002), aux63)
reify(eq(b_MSetExplicit_00001,a_MSetExplicit_00003), aux64)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00000), aux65)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00001), aux66)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00002), aux67)
reify(eq(b_MSetExplicit_00002,a_MSetExplicit_00003), aux68)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00000), aux69)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00001), aux70)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00002), aux71)
reify(eq(b_MSetExplicit_00000,a_MSetExplicit_00003), aux72)
reify(eq(b_MSetExplicit_00002,b_MSetExplicit_00003), aux73)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00000), aux74)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00001), aux75)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00002), aux76)
reify(eq(b_MSetExplicit_00003,a_MSetExplicit_00003), aux77)
eq(aux108,0)
ineq(aux26, aux109, 0)
ineq(aux47, aux110, 0)
ineq(aux60, aux111, 0)
ineq(aux49, aux112, 0)
ineq(aux51, aux113, 0)
ineq(aux26, aux114, 0)
ineq(aux47, aux115, 0)
ineq(aux60, aux116, 0)
ineq(aux49, aux117, 0)
ineq(aux51, aux118, 0)
ineq(a_MSetExplicit_00000, a_MSetExplicit_00001, 0)
ineq(a_MSetExplicit_00001, a_MSetExplicit_00002, 0)
ineq(a_MSetExplicit_00002, a_MSetExplicit_00003, 0)
ineq(b_MSetExplicit_00000, b_MSetExplicit_00001, 0)
ineq(b_MSetExplicit_00001, b_MSetExplicit_00002, 0)
ineq(b_MSetExplicit_00002, b_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux25,aux50,aux48,aux8,aux7,aux6,aux5,aux14],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux25,aux59,aux58,aux15,aux16,aux17,aux18,aux19],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux50,aux59,aux73,aux20,aux22,aux21,aux24,aux23],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux48,aux58,aux73,aux9,aux12,aux13,aux10,aux11],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux25,aux50,aux48,aux8,aux7,aux6,aux5,aux14],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux25,aux59,aux58,aux15,aux16,aux17,aux18,aux19],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux50,aux59,aux73,aux20,aux22,aux21,aux24,aux23],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux48,aux58,aux73,aux9,aux12,aux13,aux10,aux11],0)
sumleq([aux78,aux79,aux80,aux81],aux82)
sumgeq([aux78,aux79,aux80,aux81],aux82)
sumleq([aux84,aux85,aux86,aux87],aux88)
sumgeq([aux84,aux85,aux86,aux87],aux88)
sumleq([aux90,aux91,aux92,aux93],aux94)
sumgeq([aux90,aux91,aux92,aux93],aux94)
sumleq([aux96,aux97,aux98,aux99],aux100)
sumgeq([aux96,aux97,aux98,aux99],aux100)
sumleq([aux102,aux103,aux104,aux105],aux106)
sumgeq([aux102,aux103,aux104,aux105],aux106)
sumleq([aux41,aux44,aux29,aux32],aux0)
sumgeq([aux41,aux44,aux29,aux32],aux0)
sumleq([aux40,aux45,aux31,aux36],aux1)
sumgeq([aux40,aux45,aux31,aux36],aux1)
sumleq([aux39,aux42,aux30,aux35],aux2)
sumgeq([aux39,aux42,aux30,aux35],aux2)
sumleq([aux38,aux43,aux28,aux34],aux3)
sumgeq([aux38,aux43,aux28,aux34],aux3)
sumleq([aux37,aux46,aux27,aux33],aux4)
sumgeq([aux37,aux46,aux27,aux33],aux4)
sumleq([aux26,aux47,aux60,aux49,aux51],4)
sumgeq([aux26,aux47,aux60,aux49,aux51],4)
sumleq([aux83,aux89,aux95,aux101,aux107],c)
sumgeq([aux83,aux89,aux95,aux101,aux107],c)
**EOF**
