MINION 3
# CSE_number = 81
# CSE_eliminated_expressions = 308
# CSE_total_size = 453
**VARIABLES**
DISCRETE a_MSetExplicit_00000 #
{3..7}
DISCRETE a_MSetExplicit_00001 #
{3..7}
DISCRETE a_MSetExplicit_00002 #
{3..7}
DISCRETE a_MSetExplicit_00003 #
{3..7}
DISCRETE a_MSetOccurrence_00000 #
{0..4}
DISCRETE a_MSetOccurrence_00001 #
{0..4}
DISCRETE a_MSetOccurrence_00002 #
{0..4}
DISCRETE a_MSetOccurrence_00003 #
{0..4}
DISCRETE a_MSetOccurrence_00004 #
{0..4}
DISCRETE b_MSetOccurrence_00000 #
{0..4}
DISCRETE b_MSetOccurrence_00001 #
{0..4}
DISCRETE b_MSetOccurrence_00002 #
{0..4}
DISCRETE b_MSetOccurrence_00003 #
{0..4}
DISCRETE b_MSetOccurrence_00004 #
{0..4}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=7) + (a_MSetExplicit_00001=7) + (a_MSetExplicit_00002=7) + (a_MSetExplicit_00003=7))
{0..4}
DISCRETE aux1 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=6) + (a_MSetExplicit_00001=6) + (a_MSetExplicit_00002=6) + (a_MSetExplicit_00003=6))
{0..4}
DISCRETE aux2 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=5) + (a_MSetExplicit_00001=5) + (a_MSetExplicit_00002=5) + (a_MSetExplicit_00003=5))
{0..4}
DISCRETE aux3 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=3) + (a_MSetExplicit_00001=3) + (a_MSetExplicit_00002=3) + (a_MSetExplicit_00003=3))
{0..4}
DISCRETE aux4 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=4) + (a_MSetExplicit_00001=4) + (a_MSetExplicit_00002=4) + (a_MSetExplicit_00003=4))
{0..4}
BOOL aux5 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<b_MSetOccurrence_00000))
BOOL aux6 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<b_MSetOccurrence_00001))
BOOL aux7 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<b_MSetOccurrence_00004))
BOOL aux8 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<b_MSetOccurrence_00002))
BOOL aux9 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<b_MSetOccurrence_00003))
BOOL aux10 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<b_MSetOccurrence_00003))
BOOL aux11 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<b_MSetOccurrence_00002))
BOOL aux12 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<b_MSetOccurrence_00001))
BOOL aux13 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<b_MSetOccurrence_00000))
BOOL aux14 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<b_MSetOccurrence_00004))
BOOL aux15 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<b_MSetOccurrence_00001))
BOOL aux16 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<b_MSetOccurrence_00000))
BOOL aux17 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<b_MSetOccurrence_00003))
BOOL aux18 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<b_MSetOccurrence_00002))
BOOL aux19 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<b_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<b_MSetOccurrence_00002))
BOOL aux21 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<b_MSetOccurrence_00003))
BOOL aux22 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<b_MSetOccurrence_00004))
BOOL aux23 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<b_MSetOccurrence_00000))
BOOL aux24 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<b_MSetOccurrence_00001))
BOOL aux25 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux26 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux27 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux28 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux29 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux30 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux31 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux32 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux33 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux34 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux35 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux36 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux37 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux38 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux39 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux40 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux41 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux42 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux43 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux44 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux45 #CSE: 3 occurrences of: (a_MSetExplicit_00003=6)
BOOL aux46 #CSE: 3 occurrences of: (a_MSetExplicit_00000=7)
BOOL aux47 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux48 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00001)
BOOL aux49 #CSE: 3 occurrences of: (a_MSetExplicit_00001=7)
BOOL aux50 #CSE: 3 occurrences of: (a_MSetExplicit_00003=3)
BOOL aux51 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00000)
BOOL aux52 #CSE: 3 occurrences of: (a_MSetExplicit_00000=4)
BOOL aux53 #CSE: 3 occurrences of: (a_MSetExplicit_00002=5)
BOOL aux54 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00001)
BOOL aux55 #CSE: 3 occurrences of: (a_MSetExplicit_00001=4)
BOOL aux56 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux57 #CSE: 3 occurrences of: (a_MSetExplicit_00003=5)
BOOL aux58 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00003)
BOOL aux59 #CSE: 3 occurrences of: (a_MSetExplicit_00000=6)
BOOL aux60 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00003)
BOOL aux61 #CSE: 3 occurrences of: (a_MSetExplicit_00002=7)
BOOL aux62 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00002)
BOOL aux63 #CSE: 3 occurrences of: (a_MSetExplicit_00002=4)
BOOL aux64 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00004)
BOOL aux65 #CSE: 3 occurrences of: (a_MSetExplicit_00001=6)
BOOL aux66 #CSE: 3 occurrences of: (a_MSetExplicit_00003=7)
BOOL aux67 #CSE: 3 occurrences of: (a_MSetExplicit_00000=3)
BOOL aux68 #CSE: 8 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux69 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00000)
BOOL aux70 #CSE: 3 occurrences of: (a_MSetExplicit_00001=3)
BOOL aux71 #CSE: 8 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux72 #CSE: 3 occurrences of: (a_MSetExplicit_00003=4)
BOOL aux73 #CSE: 3 occurrences of: (a_MSetExplicit_00000=5)
BOOL aux74 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00004)
BOOL aux75 #CSE: 3 occurrences of: (a_MSetExplicit_00002=6)
BOOL aux76 #CSE: 10 occurrences of: (0<b_MSetOccurrence_00002)
BOOL aux77 #CSE: 3 occurrences of: (a_MSetExplicit_00002=3)
BOOL aux78 #CSE: 3 occurrences of: (a_MSetExplicit_00001=5)
BOOL aux79 #CSE: 8 occurrences of: (a_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux80 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux81 #min(aux69, aux51)
BOOL aux82 #min(aux48, aux54)
BOOL aux83 #min(aux62, aux76)
BOOL aux84 #min(aux60, aux58)
BOOL aux85 #min(aux74, aux64)
BOOL aux86 #(aux51<=aux3)
BOOL aux87 #(aux54<=aux4)
BOOL aux88 #(aux76<=aux2)
BOOL aux89 #(aux58<=aux1)
BOOL aux90 #(aux64<=aux0)
BOOL aux91 #(aux3<=aux51)
BOOL aux92 #(aux4<=aux54)
BOOL aux93 #(aux2<=aux76)
BOOL aux94 #(aux1<=aux58)
BOOL aux95 #(aux0<=aux64)
BOOL aux96 #(((aux16 + aux15 + aux18 + aux17 + aux19-1-1*aux56-1*aux80-1*aux47)<=0) /\ ((-1*aux16-1*aux15-1*aux18-1*aux17-1*aux19 + 1 + aux56 + aux80 + aux47)<=0) /\ ((aux13 + aux12 + aux11 + aux10 + aux14-1-1*aux80-1*aux68-1*aux79)<=0) /\ ((-1*aux13-1*aux12-1*aux11-1*aux10-1*aux14 + 1 + aux80 + aux68 + aux79)<=0) /\ (aux51 -> aux86) /\ (aux54 -> aux87) /\ (aux76 -> aux88) /\ (aux58 -> aux89) /\ (aux64 -> aux90) /\ ((aux5 + aux6 + aux8 + aux9 + aux7-1-1*aux56-1*aux68-1*aux71)<=0) /\ ((-1*aux5-1*aux6-1*aux8-1*aux9-1*aux7 + 1 + aux56 + aux68 + aux71)<=0) /\ ((aux23 + aux24 + aux20 + aux21 + aux22-1-1*aux47-1*aux71-1*aux79)<=0) /\ (aux51 -> aux91) /\ (aux54 -> aux92) /\ (aux76 -> aux93) /\ (aux58 -> aux94) /\ (aux64 -> aux95) /\ ((-1*aux23-1*aux24-1*aux20-1*aux21-1*aux22 + 1 + aux47 + aux71 + aux79)<=0))
BOOL aux97 #(aux69<=aux3)
BOOL aux98 #(aux48<=aux4)
BOOL aux99 #(aux62<=aux2)
BOOL aux100 #(aux60<=aux1)
BOOL aux101 #(aux74<=aux0)
BOOL aux102 #(aux3<=aux69)
BOOL aux103 #(aux4<=aux48)
BOOL aux104 #(aux2<=aux62)
BOOL aux105 #(aux1<=aux60)
BOOL aux106 #(aux0<=aux74)
**SEARCH**
PRINT[[a_MSetExplicit_00000],[a_MSetExplicit_00001],[a_MSetExplicit_00002],[a_MSetExplicit_00003],[a_MSetOccurrence_00000],[a_MSetOccurrence_00001],[a_MSetOccurrence_00002],[a_MSetOccurrence_00003],[a_MSetOccurrence_00004],[b_MSetOccurrence_00000],[b_MSetOccurrence_00001],[b_MSetOccurrence_00002],[b_MSetOccurrence_00003],[b_MSetOccurrence_00004],[c]]
VARORDER STATIC [a_MSetExplicit_00000,a_MSetExplicit_00001,a_MSetExplicit_00002,a_MSetExplicit_00003,a_MSetOccurrence_00000,a_MSetOccurrence_00001,a_MSetOccurrence_00002,a_MSetOccurrence_00003,a_MSetOccurrence_00004,b_MSetOccurrence_00000,b_MSetOccurrence_00001,b_MSetOccurrence_00002,b_MSetOccurrence_00003,b_MSetOccurrence_00004,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106]
**CONSTRAINTS**
min([aux69,aux51],aux81)
min([aux48,aux54],aux82)
min([aux62,aux76],aux83)
min([aux60,aux58],aux84)
min([aux74,aux64],aux85)
reify(ineq(aux51, aux3, 0), aux86)
reify(ineq(aux54, aux4, 0), aux87)
reify(ineq(aux76, aux2, 0), aux88)
reify(ineq(aux58, aux1, 0), aux89)
reify(ineq(aux64, aux0, 0), aux90)
reify(ineq(aux3, aux51, 0), aux91)
reify(ineq(aux4, aux54, 0), aux92)
reify(ineq(aux2, aux76, 0), aux93)
reify(ineq(aux1, aux58, 0), aux94)
reify(ineq(aux0, aux64, 0), aux95)
reify(watched-and({weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux16,aux15,aux18,aux17,aux19,-1,aux56,aux80,aux47],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux16,aux15,aux18,aux17,aux19,1,aux56,aux80,aux47],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux13,aux12,aux11,aux10,aux14,-1,aux80,aux68,aux79],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux13,aux12,aux11,aux10,aux14,1,aux80,aux68,aux79],0),ineq(aux51, aux86, 0),ineq(aux54, aux87, 0),ineq(aux76, aux88, 0),ineq(aux58, aux89, 0),ineq(aux64, aux90, 0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux5,aux6,aux8,aux9,aux7,-1,aux56,aux68,aux71],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux5,aux6,aux8,aux9,aux7,1,aux56,aux68,aux71],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux23,aux24,aux20,aux21,aux22,-1,aux47,aux71,aux79],0),ineq(aux51, aux91, 0),ineq(aux54, aux92, 0),ineq(aux76, aux93, 0),ineq(aux58, aux94, 0),ineq(aux64, aux95, 0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux23,aux24,aux20,aux21,aux22,1,aux47,aux71,aux79],0)}), aux96)
reify(ineq(aux69, aux3, 0), aux97)
reify(ineq(aux48, aux4, 0), aux98)
reify(ineq(aux62, aux2, 0), aux99)
reify(ineq(aux60, aux1, 0), aux100)
reify(ineq(aux74, aux0, 0), aux101)
reify(ineq(aux3, aux69, 0), aux102)
reify(ineq(aux4, aux48, 0), aux103)
reify(ineq(aux2, aux62, 0), aux104)
reify(ineq(aux1, aux60, 0), aux105)
reify(ineq(aux0, aux74, 0), aux106)
product(aux70, aux51, aux5)
product(aux55, aux54, aux6)
product(aux49, aux64, aux7)
product(aux78, aux76, aux8)
product(aux65, aux58, aux9)
product(aux75, aux58, aux10)
product(aux53, aux76, aux11)
product(aux63, aux54, aux12)
product(aux77, aux51, aux13)
product(aux61, aux64, aux14)
product(aux52, aux54, aux15)
product(aux67, aux51, aux16)
product(aux59, aux58, aux17)
product(aux73, aux76, aux18)
product(aux46, aux64, aux19)
product(aux57, aux76, aux20)
product(aux45, aux58, aux21)
product(aux66, aux64, aux22)
product(aux50, aux51, aux23)
product(aux72, aux54, aux24)
product(aux50, aux69, aux25)
product(aux57, aux62, aux26)
product(aux72, aux48, aux27)
product(aux66, aux74, aux28)
product(aux45, aux60, aux29)
product(aux77, aux69, aux30)
product(aux63, aux48, aux31)
product(aux53, aux62, aux32)
product(aux75, aux60, aux33)
product(aux61, aux74, aux34)
product(aux78, aux62, aux35)
product(aux55, aux48, aux36)
product(aux70, aux69, aux37)
product(aux49, aux74, aux38)
product(aux65, aux60, aux39)
product(aux67, aux69, aux40)
product(aux59, aux60, aux41)
product(aux46, aux74, aux42)
product(aux52, aux48, aux43)
product(aux73, aux62, aux44)
reify(w-literal(a_MSetExplicit_00003,6), aux45)
reify(w-literal(a_MSetExplicit_00000,7), aux46)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00003), aux47)
reify(ineq(0, a_MSetOccurrence_00001, -1), aux48)
reify(w-literal(a_MSetExplicit_00001,7), aux49)
reify(w-literal(a_MSetExplicit_00003,3), aux50)
reify(ineq(0, b_MSetOccurrence_00000, -1), aux51)
reify(w-literal(a_MSetExplicit_00000,4), aux52)
reify(w-literal(a_MSetExplicit_00002,5), aux53)
reify(ineq(0, b_MSetOccurrence_00001, -1), aux54)
reify(w-literal(a_MSetExplicit_00001,4), aux55)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00001), aux56)
reify(w-literal(a_MSetExplicit_00003,5), aux57)
reify(ineq(0, b_MSetOccurrence_00003, -1), aux58)
reify(w-literal(a_MSetExplicit_00000,6), aux59)
reify(ineq(0, a_MSetOccurrence_00003, -1), aux60)
reify(w-literal(a_MSetExplicit_00002,7), aux61)
reify(ineq(0, a_MSetOccurrence_00002, -1), aux62)
reify(w-literal(a_MSetExplicit_00002,4), aux63)
reify(ineq(0, b_MSetOccurrence_00004, -1), aux64)
reify(w-literal(a_MSetExplicit_00001,6), aux65)
reify(w-literal(a_MSetExplicit_00003,7), aux66)
reify(w-literal(a_MSetExplicit_00000,3), aux67)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00002), aux68)
reify(ineq(0, a_MSetOccurrence_00000, -1), aux69)
reify(w-literal(a_MSetExplicit_00001,3), aux70)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00003), aux71)
reify(w-literal(a_MSetExplicit_00003,4), aux72)
reify(w-literal(a_MSetExplicit_00000,5), aux73)
reify(ineq(0, a_MSetOccurrence_00004, -1), aux74)
reify(w-literal(a_MSetExplicit_00002,6), aux75)
reify(ineq(0, b_MSetOccurrence_00002, -1), aux76)
reify(w-literal(a_MSetExplicit_00002,3), aux77)
reify(w-literal(a_MSetExplicit_00001,5), aux78)
reify(eq(a_MSetExplicit_00002,a_MSetExplicit_00003), aux79)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00002), aux80)
eq(aux96,0)
ineq(aux69, aux97, 0)
ineq(aux48, aux98, 0)
ineq(aux62, aux99, 0)
ineq(aux60, aux100, 0)
ineq(aux74, aux101, 0)
ineq(aux69, aux102, 0)
ineq(aux48, aux103, 0)
ineq(aux62, aux104, 0)
ineq(aux60, aux105, 0)
ineq(aux74, aux106, 0)
ineq(a_MSetExplicit_00000, a_MSetExplicit_00001, 0)
ineq(a_MSetExplicit_00001, a_MSetExplicit_00002, 0)
ineq(a_MSetExplicit_00002, a_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux56,aux80,aux47,aux40,aux43,aux44,aux41,aux42],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux56,aux68,aux71,aux37,aux36,aux35,aux39,aux38],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux80,aux68,aux79,aux30,aux31,aux32,aux33,aux34],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux47,aux71,aux79,aux25,aux27,aux26,aux29,aux28],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux56,aux80,aux47,aux40,aux43,aux44,aux41,aux42],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux56,aux68,aux71,aux37,aux36,aux35,aux39,aux38],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux80,aux68,aux79,aux30,aux31,aux32,aux33,aux34],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux47,aux71,aux79,aux25,aux27,aux26,aux29,aux28],0)
sumleq([aux46,aux49,aux61,aux66],aux0)
sumgeq([aux46,aux49,aux61,aux66],aux0)
sumleq([aux59,aux65,aux75,aux45],aux1)
sumgeq([aux59,aux65,aux75,aux45],aux1)
sumleq([aux73,aux78,aux53,aux57],aux2)
sumgeq([aux73,aux78,aux53,aux57],aux2)
sumleq([aux67,aux70,aux77,aux50],aux3)
sumgeq([aux67,aux70,aux77,aux50],aux3)
sumleq([aux52,aux55,aux63,aux72],aux4)
sumgeq([aux52,aux55,aux63,aux72],aux4)
sumleq([aux69,aux48,aux62,aux60,aux74],4)
sumgeq([aux69,aux48,aux62,aux60,aux74],4)
sumleq([aux51,aux54,aux76,aux58,aux64],4)
sumgeq([aux51,aux54,aux76,aux58,aux64],4)
sumleq([aux81,aux82,aux83,aux84,aux85],c)
sumgeq([aux81,aux82,aux83,aux84,aux85],c)
**EOF**
