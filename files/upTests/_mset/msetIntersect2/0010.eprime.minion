MINION 3
# CSE_number = 132
# CSE_eliminated_expressions = 462
# CSE_total_size = 736
**VARIABLES**
DISCRETE a_MSetExplicit_00000 #
{3..7}
DISCRETE a_MSetExplicit_00001 #
{3..7}
DISCRETE a_MSetExplicit_00002 #
{3..7}
DISCRETE a_MSetExplicit_00003 #
{3..7}
DISCRETE a_MSetOccurrence_00000 #
{0..4}
DISCRETE a_MSetOccurrence_00001 #
{0..4}
DISCRETE a_MSetOccurrence_00002 #
{0..4}
DISCRETE a_MSetOccurrence_00003 #
{0..4}
DISCRETE a_MSetOccurrence_00004 #
{0..4}
DISCRETE b_MSetOccurrence_00000 #
{0..4}
DISCRETE b_MSetOccurrence_00001 #
{0..4}
DISCRETE b_MSetOccurrence_00002 #
{0..4}
DISCRETE b_MSetOccurrence_00003 #
{0..4}
DISCRETE b_MSetOccurrence_00004 #
{0..4}
DISCRETE b_MSetExplicit_00000 #
{3..7}
DISCRETE b_MSetExplicit_00001 #
{3..7}
DISCRETE b_MSetExplicit_00002 #
{3..7}
DISCRETE b_MSetExplicit_00003 #
{3..7}
DISCRETE c #
{3..7}
DISCRETE aux0 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=7) + (a_MSetExplicit_00001=7) + (a_MSetExplicit_00002=7) + (a_MSetExplicit_00003=7))
{0..4}
DISCRETE aux1 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=6) + (a_MSetExplicit_00001=6) + (a_MSetExplicit_00002=6) + (a_MSetExplicit_00003=6))
{0..4}
DISCRETE aux2 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=3) + (b_MSetExplicit_00001=3) + (b_MSetExplicit_00002=3) + (b_MSetExplicit_00003=3))
{0..4}
DISCRETE aux3 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=7) + (b_MSetExplicit_00001=7) + (b_MSetExplicit_00002=7) + (b_MSetExplicit_00003=7))
{0..4}
DISCRETE aux4 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=4) + (b_MSetExplicit_00001=4) + (b_MSetExplicit_00002=4) + (b_MSetExplicit_00003=4))
{0..4}
DISCRETE aux5 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=5) + (b_MSetExplicit_00001=5) + (b_MSetExplicit_00002=5) + (b_MSetExplicit_00003=5))
{0..4}
DISCRETE aux6 #CSE: 3 occurrences of: ((b_MSetExplicit_00000=6) + (b_MSetExplicit_00001=6) + (b_MSetExplicit_00002=6) + (b_MSetExplicit_00003=6))
{0..4}
DISCRETE aux7 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=5) + (a_MSetExplicit_00001=5) + (a_MSetExplicit_00002=5) + (a_MSetExplicit_00003=5))
{0..4}
DISCRETE aux8 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=3) + (a_MSetExplicit_00001=3) + (a_MSetExplicit_00002=3) + (a_MSetExplicit_00003=3))
{0..4}
DISCRETE aux9 #CSE: 4 occurrences of: ((a_MSetExplicit_00000=4) + (a_MSetExplicit_00001=4) + (a_MSetExplicit_00002=4) + (a_MSetExplicit_00003=4))
{0..4}
BOOL aux10 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=6)*(0<b_MSetOccurrence_00003))
BOOL aux11 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=5)*(0<b_MSetOccurrence_00002))
BOOL aux12 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=4)*(0<b_MSetOccurrence_00001))
BOOL aux13 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=3)*(0<b_MSetOccurrence_00000))
BOOL aux14 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=3)*(0<b_MSetOccurrence_00000))
BOOL aux15 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=6)*(0<b_MSetOccurrence_00003))
BOOL aux16 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=7)*(0<b_MSetOccurrence_00004))
BOOL aux17 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=4)*(0<b_MSetOccurrence_00001))
BOOL aux18 #CSE: 2 occurrences of: ((b_MSetExplicit_00003=5)*(0<b_MSetOccurrence_00002))
BOOL aux19 #CSE: 2 occurrences of: ((b_MSetExplicit_00000=7)*(0<b_MSetOccurrence_00004))
BOOL aux20 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=3)*(0<b_MSetOccurrence_00000))
BOOL aux21 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=4)*(0<b_MSetOccurrence_00001))
BOOL aux22 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=5)*(0<b_MSetOccurrence_00002))
BOOL aux23 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=6)*(0<b_MSetOccurrence_00003))
BOOL aux24 #CSE: 2 occurrences of: ((b_MSetExplicit_00001=7)*(0<b_MSetOccurrence_00004))
BOOL aux25 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=3)*(0<b_MSetOccurrence_00000))
BOOL aux26 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=5)*(0<b_MSetOccurrence_00002))
BOOL aux27 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=4)*(0<b_MSetOccurrence_00001))
BOOL aux28 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=7)*(0<b_MSetOccurrence_00004))
BOOL aux29 #CSE: 2 occurrences of: ((b_MSetExplicit_00002=6)*(0<b_MSetOccurrence_00003))
BOOL aux30 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<b_MSetOccurrence_00000))
BOOL aux31 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<b_MSetOccurrence_00001))
BOOL aux32 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<b_MSetOccurrence_00004))
BOOL aux33 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<b_MSetOccurrence_00002))
BOOL aux34 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<b_MSetOccurrence_00003))
BOOL aux35 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<b_MSetOccurrence_00003))
BOOL aux36 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<b_MSetOccurrence_00002))
BOOL aux37 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<b_MSetOccurrence_00001))
BOOL aux38 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<b_MSetOccurrence_00000))
BOOL aux39 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<b_MSetOccurrence_00004))
BOOL aux40 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<b_MSetOccurrence_00001))
BOOL aux41 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<b_MSetOccurrence_00000))
BOOL aux42 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<b_MSetOccurrence_00003))
BOOL aux43 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<b_MSetOccurrence_00002))
BOOL aux44 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<b_MSetOccurrence_00004))
BOOL aux45 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<b_MSetOccurrence_00002))
BOOL aux46 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<b_MSetOccurrence_00003))
BOOL aux47 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<b_MSetOccurrence_00004))
BOOL aux48 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<b_MSetOccurrence_00000))
BOOL aux49 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<b_MSetOccurrence_00001))
BOOL aux50 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=3)*(0<a_MSetOccurrence_00000))
BOOL aux51 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=5)*(0<a_MSetOccurrence_00002))
BOOL aux52 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=4)*(0<a_MSetOccurrence_00001))
BOOL aux53 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=7)*(0<a_MSetOccurrence_00004))
BOOL aux54 #CSE: 2 occurrences of: ((a_MSetExplicit_00003=6)*(0<a_MSetOccurrence_00003))
BOOL aux55 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=3)*(0<a_MSetOccurrence_00000))
BOOL aux56 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=4)*(0<a_MSetOccurrence_00001))
BOOL aux57 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=5)*(0<a_MSetOccurrence_00002))
BOOL aux58 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=6)*(0<a_MSetOccurrence_00003))
BOOL aux59 #CSE: 2 occurrences of: ((a_MSetExplicit_00002=7)*(0<a_MSetOccurrence_00004))
BOOL aux60 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=5)*(0<a_MSetOccurrence_00002))
BOOL aux61 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=4)*(0<a_MSetOccurrence_00001))
BOOL aux62 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=3)*(0<a_MSetOccurrence_00000))
BOOL aux63 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=7)*(0<a_MSetOccurrence_00004))
BOOL aux64 #CSE: 2 occurrences of: ((a_MSetExplicit_00001=6)*(0<a_MSetOccurrence_00003))
BOOL aux65 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=3)*(0<a_MSetOccurrence_00000))
BOOL aux66 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=6)*(0<a_MSetOccurrence_00003))
BOOL aux67 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=7)*(0<a_MSetOccurrence_00004))
BOOL aux68 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=4)*(0<a_MSetOccurrence_00001))
BOOL aux69 #CSE: 2 occurrences of: ((a_MSetExplicit_00000=5)*(0<a_MSetOccurrence_00002))
BOOL aux70 #CSE: 3 occurrences of: (a_MSetExplicit_00003=6)
BOOL aux71 #CSE: 3 occurrences of: (a_MSetExplicit_00000=7)
BOOL aux72 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00003)
BOOL aux73 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00001)
BOOL aux74 #CSE: 3 occurrences of: (a_MSetExplicit_00001=7)
BOOL aux75 #CSE: 3 occurrences of: (a_MSetExplicit_00003=3)
BOOL aux76 #CSE: 3 occurrences of: (a_MSetExplicit_00000=4)
BOOL aux77 #CSE: 3 occurrences of: (a_MSetExplicit_00002=5)
BOOL aux78 #CSE: 3 occurrences of: (a_MSetExplicit_00001=4)
BOOL aux79 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00001)
BOOL aux80 #CSE: 4 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00003)
BOOL aux81 #CSE: 4 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00002)
BOOL aux82 #CSE: 4 occurrences of: (b_MSetExplicit_00000=b_MSetExplicit_00001)
BOOL aux83 #CSE: 4 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00003)
BOOL aux84 #CSE: 4 occurrences of: (b_MSetExplicit_00001=b_MSetExplicit_00002)
BOOL aux85 #CSE: 4 occurrences of: (b_MSetExplicit_00002=b_MSetExplicit_00003)
BOOL aux86 #CSE: 17 occurrences of: (0<b_MSetOccurrence_00004)
BOOL aux87 #CSE: 17 occurrences of: (0<b_MSetOccurrence_00003)
BOOL aux88 #CSE: 17 occurrences of: (0<b_MSetOccurrence_00002)
BOOL aux89 #CSE: 17 occurrences of: (0<b_MSetOccurrence_00001)
BOOL aux90 #CSE: 3 occurrences of: (a_MSetExplicit_00003=5)
BOOL aux91 #CSE: 3 occurrences of: (a_MSetExplicit_00000=6)
BOOL aux92 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00003)
BOOL aux93 #CSE: 17 occurrences of: (0<b_MSetOccurrence_00000)
BOOL aux94 #CSE: 3 occurrences of: (a_MSetExplicit_00002=7)
BOOL aux95 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00002)
BOOL aux96 #CSE: 3 occurrences of: (a_MSetExplicit_00002=4)
BOOL aux97 #CSE: 3 occurrences of: (a_MSetExplicit_00001=6)
BOOL aux98 #CSE: 3 occurrences of: (a_MSetExplicit_00003=7)
BOOL aux99 #CSE: 3 occurrences of: (a_MSetExplicit_00000=3)
BOOL aux100 #CSE: 8 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00002)
BOOL aux101 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00000)
BOOL aux102 #CSE: 3 occurrences of: (a_MSetExplicit_00001=3)
BOOL aux103 #CSE: 8 occurrences of: (a_MSetExplicit_00001=a_MSetExplicit_00003)
BOOL aux104 #CSE: 3 occurrences of: (a_MSetExplicit_00003=4)
BOOL aux105 #CSE: 3 occurrences of: (a_MSetExplicit_00000=5)
BOOL aux106 #CSE: 10 occurrences of: (0<a_MSetOccurrence_00004)
BOOL aux107 #CSE: 3 occurrences of: (a_MSetExplicit_00002=6)
BOOL aux108 #CSE: 3 occurrences of: (a_MSetExplicit_00002=3)
BOOL aux109 #CSE: 3 occurrences of: (a_MSetExplicit_00001=5)
BOOL aux110 #CSE: 2 occurrences of: (b_MSetExplicit_00003=7)
BOOL aux111 #CSE: 2 occurrences of: (b_MSetExplicit_00003=5)
BOOL aux112 #CSE: 2 occurrences of: (b_MSetExplicit_00003=6)
BOOL aux113 #CSE: 2 occurrences of: (b_MSetExplicit_00003=3)
BOOL aux114 #CSE: 2 occurrences of: (b_MSetExplicit_00003=4)
BOOL aux115 #CSE: 2 occurrences of: (b_MSetExplicit_00002=5)
BOOL aux116 #CSE: 2 occurrences of: (b_MSetExplicit_00002=7)
BOOL aux117 #CSE: 2 occurrences of: (b_MSetExplicit_00002=6)
BOOL aux118 #CSE: 2 occurrences of: (b_MSetExplicit_00002=3)
BOOL aux119 #CSE: 2 occurrences of: (b_MSetExplicit_00002=4)
BOOL aux120 #CSE: 8 occurrences of: (a_MSetExplicit_00002=a_MSetExplicit_00003)
BOOL aux121 #CSE: 2 occurrences of: (b_MSetExplicit_00001=6)
BOOL aux122 #CSE: 2 occurrences of: (b_MSetExplicit_00001=7)
BOOL aux123 #CSE: 2 occurrences of: (b_MSetExplicit_00001=3)
BOOL aux124 #CSE: 2 occurrences of: (b_MSetExplicit_00001=5)
BOOL aux125 #CSE: 2 occurrences of: (b_MSetExplicit_00001=4)
BOOL aux126 #CSE: 2 occurrences of: (b_MSetExplicit_00000=6)
BOOL aux127 #CSE: 2 occurrences of: (b_MSetExplicit_00000=7)
BOOL aux128 #CSE: 2 occurrences of: (b_MSetExplicit_00000=4)
BOOL aux129 #CSE: 2 occurrences of: (b_MSetExplicit_00000=5)
BOOL aux130 #CSE: 2 occurrences of: (b_MSetExplicit_00000=3)
BOOL aux131 #CSE: 8 occurrences of: (a_MSetExplicit_00000=a_MSetExplicit_00002)
BOOL aux132 #min(aux101, aux2)
BOOL aux133 #min(aux73, aux4)
BOOL aux134 #min(aux95, aux5)
BOOL aux135 #min(aux92, aux6)
BOOL aux136 #min(aux106, aux3)
BOOL aux137 #(aux93<=aux8)
BOOL aux138 #(aux89<=aux9)
BOOL aux139 #(aux88<=aux7)
BOOL aux140 #(aux87<=aux1)
BOOL aux141 #(aux86<=aux0)
BOOL aux142 #(aux8<=aux93)
BOOL aux143 #(aux9<=aux89)
BOOL aux144 #(aux7<=aux88)
BOOL aux145 #(aux1<=aux87)
BOOL aux146 #(aux0<=aux86)
BOOL aux147 #(((aux41 + aux40 + aux43 + aux42 + aux44-1-1*aux79-1*aux131-1*aux72)<=0) /\ ((-1*aux41-1*aux40-1*aux43-1*aux42-1*aux44 + 1 + aux79 + aux131 + aux72)<=0) /\ ((aux38 + aux37 + aux36 + aux35 + aux39-1-1*aux131-1*aux100-1*aux120)<=0) /\ ((-1*aux38-1*aux37-1*aux36-1*aux35-1*aux39 + 1 + aux131 + aux100 + aux120)<=0) /\ (aux93 -> aux137) /\ (aux89 -> aux138) /\ (aux88 -> aux139) /\ (aux87 -> aux140) /\ (aux86 -> aux141) /\ ((aux30 + aux31 + aux33 + aux34 + aux32-1-1*aux79-1*aux100-1*aux103)<=0) /\ ((-1*aux30-1*aux31-1*aux33-1*aux34-1*aux32 + 1 + aux79 + aux100 + aux103)<=0) /\ ((aux48 + aux49 + aux45 + aux46 + aux47-1-1*aux72-1*aux103-1*aux120)<=0) /\ (aux93 -> aux142) /\ (aux89 -> aux143) /\ (aux88 -> aux144) /\ (aux87 -> aux145) /\ (aux86 -> aux146) /\ ((-1*aux48-1*aux49-1*aux45-1*aux46-1*aux47 + 1 + aux72 + aux103 + aux120)<=0))
BOOL aux148 #(aux101<=aux8)
BOOL aux149 #(aux73<=aux9)
BOOL aux150 #(aux95<=aux7)
BOOL aux151 #(aux92<=aux1)
BOOL aux152 #(aux106<=aux0)
BOOL aux153 #(aux8<=aux101)
BOOL aux154 #(aux9<=aux73)
BOOL aux155 #(aux7<=aux95)
BOOL aux156 #(aux1<=aux92)
BOOL aux157 #(aux0<=aux106)
BOOL aux158 #(aux93<=aux2)
BOOL aux159 #(aux89<=aux4)
BOOL aux160 #(aux88<=aux5)
BOOL aux161 #(aux87<=aux6)
BOOL aux162 #(aux86<=aux3)
BOOL aux163 #(aux2<=aux93)
BOOL aux164 #(aux4<=aux89)
BOOL aux165 #(aux5<=aux88)
BOOL aux166 #(aux6<=aux87)
BOOL aux167 #(aux3<=aux86)
**SEARCH**
PRINT[[a_MSetExplicit_00000],[a_MSetExplicit_00001],[a_MSetExplicit_00002],[a_MSetExplicit_00003],[a_MSetOccurrence_00000],[a_MSetOccurrence_00001],[a_MSetOccurrence_00002],[a_MSetOccurrence_00003],[a_MSetOccurrence_00004],[b_MSetOccurrence_00000],[b_MSetOccurrence_00001],[b_MSetOccurrence_00002],[b_MSetOccurrence_00003],[b_MSetOccurrence_00004],[b_MSetExplicit_00000],[b_MSetExplicit_00001],[b_MSetExplicit_00002],[b_MSetExplicit_00003],[c]]
VARORDER STATIC [a_MSetExplicit_00000,a_MSetExplicit_00001,a_MSetExplicit_00002,a_MSetExplicit_00003,a_MSetOccurrence_00000,a_MSetOccurrence_00001,a_MSetOccurrence_00002,a_MSetOccurrence_00003,a_MSetOccurrence_00004,b_MSetOccurrence_00000,b_MSetOccurrence_00001,b_MSetOccurrence_00002,b_MSetOccurrence_00003,b_MSetOccurrence_00004,b_MSetExplicit_00000,b_MSetExplicit_00001,b_MSetExplicit_00002,b_MSetExplicit_00003,c]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167]
**CONSTRAINTS**
min([aux101,aux2],aux132)
min([aux73,aux4],aux133)
min([aux95,aux5],aux134)
min([aux92,aux6],aux135)
min([aux106,aux3],aux136)
reify(ineq(aux93, aux8, 0), aux137)
reify(ineq(aux89, aux9, 0), aux138)
reify(ineq(aux88, aux7, 0), aux139)
reify(ineq(aux87, aux1, 0), aux140)
reify(ineq(aux86, aux0, 0), aux141)
reify(ineq(aux8, aux93, 0), aux142)
reify(ineq(aux9, aux89, 0), aux143)
reify(ineq(aux7, aux88, 0), aux144)
reify(ineq(aux1, aux87, 0), aux145)
reify(ineq(aux0, aux86, 0), aux146)
reify(watched-and({weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux41,aux40,aux43,aux42,aux44,-1,aux79,aux131,aux72],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux41,aux40,aux43,aux42,aux44,1,aux79,aux131,aux72],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux38,aux37,aux36,aux35,aux39,-1,aux131,aux100,aux120],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux38,aux37,aux36,aux35,aux39,1,aux131,aux100,aux120],0),ineq(aux93, aux137, 0),ineq(aux89, aux138, 0),ineq(aux88, aux139, 0),ineq(aux87, aux140, 0),ineq(aux86, aux141, 0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux30,aux31,aux33,aux34,aux32,-1,aux79,aux100,aux103],0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux30,aux31,aux33,aux34,aux32,1,aux79,aux100,aux103],0),weightedsumleq([1,1,1,1,1,1,-1,-1,-1],[aux48,aux49,aux45,aux46,aux47,-1,aux72,aux103,aux120],0),ineq(aux93, aux142, 0),ineq(aux89, aux143, 0),ineq(aux88, aux144, 0),ineq(aux87, aux145, 0),ineq(aux86, aux146, 0),weightedsumleq([-1,-1,-1,-1,-1,1,1,1,1],[aux48,aux49,aux45,aux46,aux47,1,aux72,aux103,aux120],0)}), aux147)
reify(ineq(aux101, aux8, 0), aux148)
reify(ineq(aux73, aux9, 0), aux149)
reify(ineq(aux95, aux7, 0), aux150)
reify(ineq(aux92, aux1, 0), aux151)
reify(ineq(aux106, aux0, 0), aux152)
reify(ineq(aux8, aux101, 0), aux153)
reify(ineq(aux9, aux73, 0), aux154)
reify(ineq(aux7, aux95, 0), aux155)
reify(ineq(aux1, aux92, 0), aux156)
reify(ineq(aux0, aux106, 0), aux157)
reify(ineq(aux93, aux2, 0), aux158)
reify(ineq(aux89, aux4, 0), aux159)
reify(ineq(aux88, aux5, 0), aux160)
reify(ineq(aux87, aux6, 0), aux161)
reify(ineq(aux86, aux3, 0), aux162)
reify(ineq(aux2, aux93, 0), aux163)
reify(ineq(aux4, aux89, 0), aux164)
reify(ineq(aux5, aux88, 0), aux165)
reify(ineq(aux6, aux87, 0), aux166)
reify(ineq(aux3, aux86, 0), aux167)
product(aux126, aux87, aux10)
product(aux129, aux88, aux11)
product(aux128, aux89, aux12)
product(aux130, aux93, aux13)
product(aux113, aux93, aux14)
product(aux112, aux87, aux15)
product(aux110, aux86, aux16)
product(aux114, aux89, aux17)
product(aux111, aux88, aux18)
product(aux127, aux86, aux19)
product(aux123, aux93, aux20)
product(aux125, aux89, aux21)
product(aux124, aux88, aux22)
product(aux121, aux87, aux23)
product(aux122, aux86, aux24)
product(aux118, aux93, aux25)
product(aux115, aux88, aux26)
product(aux119, aux89, aux27)
product(aux116, aux86, aux28)
product(aux117, aux87, aux29)
product(aux102, aux93, aux30)
product(aux78, aux89, aux31)
product(aux74, aux86, aux32)
product(aux109, aux88, aux33)
product(aux97, aux87, aux34)
product(aux107, aux87, aux35)
product(aux77, aux88, aux36)
product(aux96, aux89, aux37)
product(aux108, aux93, aux38)
product(aux94, aux86, aux39)
product(aux76, aux89, aux40)
product(aux99, aux93, aux41)
product(aux91, aux87, aux42)
product(aux105, aux88, aux43)
product(aux71, aux86, aux44)
product(aux90, aux88, aux45)
product(aux70, aux87, aux46)
product(aux98, aux86, aux47)
product(aux75, aux93, aux48)
product(aux104, aux89, aux49)
product(aux75, aux101, aux50)
product(aux90, aux95, aux51)
product(aux104, aux73, aux52)
product(aux98, aux106, aux53)
product(aux70, aux92, aux54)
product(aux108, aux101, aux55)
product(aux96, aux73, aux56)
product(aux77, aux95, aux57)
product(aux107, aux92, aux58)
product(aux94, aux106, aux59)
product(aux109, aux95, aux60)
product(aux78, aux73, aux61)
product(aux102, aux101, aux62)
product(aux74, aux106, aux63)
product(aux97, aux92, aux64)
product(aux99, aux101, aux65)
product(aux91, aux92, aux66)
product(aux71, aux106, aux67)
product(aux76, aux73, aux68)
product(aux105, aux95, aux69)
reify(w-literal(a_MSetExplicit_00003,6), aux70)
reify(w-literal(a_MSetExplicit_00000,7), aux71)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00003), aux72)
reify(ineq(0, a_MSetOccurrence_00001, -1), aux73)
reify(w-literal(a_MSetExplicit_00001,7), aux74)
reify(w-literal(a_MSetExplicit_00003,3), aux75)
reify(w-literal(a_MSetExplicit_00000,4), aux76)
reify(w-literal(a_MSetExplicit_00002,5), aux77)
reify(w-literal(a_MSetExplicit_00001,4), aux78)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00001), aux79)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00003), aux80)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00002), aux81)
reify(eq(b_MSetExplicit_00000,b_MSetExplicit_00001), aux82)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00003), aux83)
reify(eq(b_MSetExplicit_00001,b_MSetExplicit_00002), aux84)
reify(eq(b_MSetExplicit_00002,b_MSetExplicit_00003), aux85)
reify(ineq(0, b_MSetOccurrence_00004, -1), aux86)
reify(ineq(0, b_MSetOccurrence_00003, -1), aux87)
reify(ineq(0, b_MSetOccurrence_00002, -1), aux88)
reify(ineq(0, b_MSetOccurrence_00001, -1), aux89)
reify(w-literal(a_MSetExplicit_00003,5), aux90)
reify(w-literal(a_MSetExplicit_00000,6), aux91)
reify(ineq(0, a_MSetOccurrence_00003, -1), aux92)
reify(ineq(0, b_MSetOccurrence_00000, -1), aux93)
reify(w-literal(a_MSetExplicit_00002,7), aux94)
reify(ineq(0, a_MSetOccurrence_00002, -1), aux95)
reify(w-literal(a_MSetExplicit_00002,4), aux96)
reify(w-literal(a_MSetExplicit_00001,6), aux97)
reify(w-literal(a_MSetExplicit_00003,7), aux98)
reify(w-literal(a_MSetExplicit_00000,3), aux99)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00002), aux100)
reify(ineq(0, a_MSetOccurrence_00000, -1), aux101)
reify(w-literal(a_MSetExplicit_00001,3), aux102)
reify(eq(a_MSetExplicit_00001,a_MSetExplicit_00003), aux103)
reify(w-literal(a_MSetExplicit_00003,4), aux104)
reify(w-literal(a_MSetExplicit_00000,5), aux105)
reify(ineq(0, a_MSetOccurrence_00004, -1), aux106)
reify(w-literal(a_MSetExplicit_00002,6), aux107)
reify(w-literal(a_MSetExplicit_00002,3), aux108)
reify(w-literal(a_MSetExplicit_00001,5), aux109)
reify(w-literal(b_MSetExplicit_00003,7), aux110)
reify(w-literal(b_MSetExplicit_00003,5), aux111)
reify(w-literal(b_MSetExplicit_00003,6), aux112)
reify(w-literal(b_MSetExplicit_00003,3), aux113)
reify(w-literal(b_MSetExplicit_00003,4), aux114)
reify(w-literal(b_MSetExplicit_00002,5), aux115)
reify(w-literal(b_MSetExplicit_00002,7), aux116)
reify(w-literal(b_MSetExplicit_00002,6), aux117)
reify(w-literal(b_MSetExplicit_00002,3), aux118)
reify(w-literal(b_MSetExplicit_00002,4), aux119)
reify(eq(a_MSetExplicit_00002,a_MSetExplicit_00003), aux120)
reify(w-literal(b_MSetExplicit_00001,6), aux121)
reify(w-literal(b_MSetExplicit_00001,7), aux122)
reify(w-literal(b_MSetExplicit_00001,3), aux123)
reify(w-literal(b_MSetExplicit_00001,5), aux124)
reify(w-literal(b_MSetExplicit_00001,4), aux125)
reify(w-literal(b_MSetExplicit_00000,6), aux126)
reify(w-literal(b_MSetExplicit_00000,7), aux127)
reify(w-literal(b_MSetExplicit_00000,4), aux128)
reify(w-literal(b_MSetExplicit_00000,5), aux129)
reify(w-literal(b_MSetExplicit_00000,3), aux130)
reify(eq(a_MSetExplicit_00000,a_MSetExplicit_00002), aux131)
eq(aux147,0)
ineq(aux101, aux148, 0)
ineq(aux73, aux149, 0)
ineq(aux95, aux150, 0)
ineq(aux92, aux151, 0)
ineq(aux106, aux152, 0)
ineq(aux101, aux153, 0)
ineq(aux73, aux154, 0)
ineq(aux95, aux155, 0)
ineq(aux92, aux156, 0)
ineq(aux106, aux157, 0)
ineq(aux93, aux158, 0)
ineq(aux89, aux159, 0)
ineq(aux88, aux160, 0)
ineq(aux87, aux161, 0)
ineq(aux86, aux162, 0)
ineq(aux93, aux163, 0)
ineq(aux89, aux164, 0)
ineq(aux88, aux165, 0)
ineq(aux87, aux166, 0)
ineq(aux86, aux167, 0)
ineq(a_MSetExplicit_00000, a_MSetExplicit_00001, 0)
ineq(a_MSetExplicit_00001, a_MSetExplicit_00002, 0)
ineq(a_MSetExplicit_00002, a_MSetExplicit_00003, 0)
ineq(b_MSetExplicit_00000, b_MSetExplicit_00001, 0)
ineq(b_MSetExplicit_00001, b_MSetExplicit_00002, 0)
ineq(b_MSetExplicit_00002, b_MSetExplicit_00003, 0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux79,aux131,aux72,aux65,aux68,aux69,aux66,aux67],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux79,aux100,aux103,aux62,aux61,aux60,aux64,aux63],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux131,aux100,aux120,aux55,aux56,aux57,aux58,aux59],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux72,aux103,aux120,aux50,aux52,aux51,aux54,aux53],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux82,aux81,aux80,aux13,aux12,aux11,aux10,aux19],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux82,aux84,aux83,aux20,aux21,aux22,aux23,aux24],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux81,aux84,aux85,aux25,aux27,aux26,aux29,aux28],0)
weightedsumleq([1,-1,-1,-1,1,1,1,1,1],[-1,aux80,aux83,aux85,aux14,aux17,aux18,aux15,aux16],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux79,aux131,aux72,aux65,aux68,aux69,aux66,aux67],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux79,aux100,aux103,aux62,aux61,aux60,aux64,aux63],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux131,aux100,aux120,aux55,aux56,aux57,aux58,aux59],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux72,aux103,aux120,aux50,aux52,aux51,aux54,aux53],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux82,aux81,aux80,aux13,aux12,aux11,aux10,aux19],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux82,aux84,aux83,aux20,aux21,aux22,aux23,aux24],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux81,aux84,aux85,aux25,aux27,aux26,aux29,aux28],0)
weightedsumleq([1,1,1,1,-1,-1,-1,-1,-1],[1,aux80,aux83,aux85,aux14,aux17,aux18,aux15,aux16],0)
sumleq([aux71,aux74,aux94,aux98],aux0)
sumgeq([aux71,aux74,aux94,aux98],aux0)
sumleq([aux91,aux97,aux107,aux70],aux1)
sumgeq([aux91,aux97,aux107,aux70],aux1)
sumleq([aux130,aux123,aux118,aux113],aux2)
sumgeq([aux130,aux123,aux118,aux113],aux2)
sumleq([aux127,aux122,aux116,aux110],aux3)
sumgeq([aux127,aux122,aux116,aux110],aux3)
sumleq([aux128,aux125,aux119,aux114],aux4)
sumgeq([aux128,aux125,aux119,aux114],aux4)
sumleq([aux129,aux124,aux115,aux111],aux5)
sumgeq([aux129,aux124,aux115,aux111],aux5)
sumleq([aux126,aux121,aux117,aux112],aux6)
sumgeq([aux126,aux121,aux117,aux112],aux6)
sumleq([aux105,aux109,aux77,aux90],aux7)
sumgeq([aux105,aux109,aux77,aux90],aux7)
sumleq([aux99,aux102,aux108,aux75],aux8)
sumgeq([aux99,aux102,aux108,aux75],aux8)
sumleq([aux76,aux78,aux96,aux104],aux9)
sumgeq([aux76,aux78,aux96,aux104],aux9)
sumleq([aux101,aux73,aux95,aux92,aux106],4)
sumgeq([aux101,aux73,aux95,aux92,aux106],4)
sumleq([aux93,aux89,aux88,aux87,aux86],4)
sumgeq([aux93,aux89,aux88,aux87,aux86],4)
sumleq([aux132,aux133,aux134,aux135,aux136],c)
sumgeq([aux132,aux133,aux134,aux135,aux136],c)
**EOF**
