[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1..2)] of (set (size 1) of int(5),
                                                        set (size 1) of int(9),
                                                        set (size 1) of int(6),
                                                        set (size 1) of int(5))
[matrixToTuple] pain∑1
[representation] find pain_tuple1:
                         matrix indexed by [int(1..2)] of set (size 1) of int(5)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple2:
                         matrix indexed by [int(1..2)] of set (size 1) of int(9)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple3:
                         matrix indexed by [int(1..2)] of set (size 1) of int(6)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple4:
                         matrix indexed by [int(1..2)] of set (size 1) of int(5)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] pain_tuple1§region1#Set~Explicit pain_tuple4§region4#Set~Explicit pain_tuple2§region2#Set~Explicit pain_tuple3§region3#Set~Explicit
[addedDecl] find pain_tuple4_Set~Explicit:
                    matrix indexed by [int(1..2), int(1..1)] of int(5)
[addedDecl] find pain_tuple3_Set~Explicit:
                    matrix indexed by [int(1..2), int(1..1)] of int(6)
[addedDecl] find pain_tuple2_Set~Explicit:
                    matrix indexed by [int(1..2), int(1..1)] of int(9)
[addedDecl] find pain_tuple1_Set~Explicit:
                    matrix indexed by [int(1..2), int(1..1)] of int(5)
[refn] 0
[applied] pain_tuple1§region1#Set~Explicit[1] = {5}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1§region1#Set~Explicit[1] subsetEq {5}
              /\
              pain_tuple1§region1#Set~Explicit[1] supsetEq {5}
[applied] pain_tuple1§region1#Set~Explicit[1] subsetEq {5}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__25 in pain_tuple1§region1#Set~Explicit[1] . v__25 in {5})
[applied] v__25 in {5}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__25
[applied] (forAll v__25 in pain_tuple1§region1#Set~Explicit[1] . 5 = v__25)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              5 = pain_tuple1_Set~Explicit§region1[1, 1]
[applied] pain_tuple1§region1#Set~Explicit[1] supsetEq {5}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple1§region1#Set~Explicit[1]
[applied] {5} subsetEq pain_tuple1§region1#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              5 in pain_tuple1§region1#Set~Explicit[1]
[applied] 5 in pain_tuple1§region1#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__29 in pain_tuple1§region1#Set~Explicit[1] . v__29 = 5)
[applied] (exists v__29 in pain_tuple1§region1#Set~Explicit[1] . v__29 = 5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_Set~Explicit§region1[1, 1] = 5
[applied] pain_tuple2§region2#Set~Explicit[1] = {9}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region2#Set~Explicit[1] subsetEq {9}
              /\
              pain_tuple2§region2#Set~Explicit[1] supsetEq {9}
[applied] pain_tuple2§region2#Set~Explicit[1] subsetEq {9}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__31 in pain_tuple2§region2#Set~Explicit[1] . v__31 in {9})
[applied] v__31 in {9}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              9 = v__31
[applied] (forAll v__31 in pain_tuple2§region2#Set~Explicit[1] . 9 = v__31)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              9 = pain_tuple2_Set~Explicit§region2[1, 1]
[applied] pain_tuple2§region2#Set~Explicit[1] supsetEq {9}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple2§region2#Set~Explicit[1]
[applied] {9} subsetEq pain_tuple2§region2#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              9 in pain_tuple2§region2#Set~Explicit[1]
[applied] 9 in pain_tuple2§region2#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__35 in pain_tuple2§region2#Set~Explicit[1] . v__35 = 9)
[applied] (exists v__35 in pain_tuple2§region2#Set~Explicit[1] . v__35 = 9)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple2_Set~Explicit§region2[1, 1] = 9
[applied] pain_tuple3§region3#Set~Explicit[1] = {6}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple3§region3#Set~Explicit[1] subsetEq {6}
              /\
              pain_tuple3§region3#Set~Explicit[1] supsetEq {6}
[applied] pain_tuple3§region3#Set~Explicit[1] subsetEq {6}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__37 in pain_tuple3§region3#Set~Explicit[1] . v__37 in {6})
[applied] v__37 in {6}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              6 = v__37
[applied] (forAll v__37 in pain_tuple3§region3#Set~Explicit[1] . 6 = v__37)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              6 = pain_tuple3_Set~Explicit§region3[1, 1]
[applied] pain_tuple3§region3#Set~Explicit[1] supsetEq {6}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {6} subsetEq pain_tuple3§region3#Set~Explicit[1]
[applied] {6} subsetEq pain_tuple3§region3#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              6 in pain_tuple3§region3#Set~Explicit[1]
[applied] 6 in pain_tuple3§region3#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__41 in pain_tuple3§region3#Set~Explicit[1] . v__41 = 6)
[applied] (exists v__41 in pain_tuple3§region3#Set~Explicit[1] . v__41 = 6)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple3_Set~Explicit§region3[1, 1] = 6
[applied] pain_tuple4§region4#Set~Explicit[1] = {5}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple4§region4#Set~Explicit[1] subsetEq {5}
              /\
              pain_tuple4§region4#Set~Explicit[1] supsetEq {5}
[applied] pain_tuple4§region4#Set~Explicit[1] subsetEq {5}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__43 in pain_tuple4§region4#Set~Explicit[1] . v__43 in {5})
[applied] v__43 in {5}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__43
[applied] (forAll v__43 in pain_tuple4§region4#Set~Explicit[1] . 5 = v__43)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              5 = pain_tuple4_Set~Explicit§region4[1, 1]
[applied] pain_tuple4§region4#Set~Explicit[1] supsetEq {5}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple4§region4#Set~Explicit[1]
[applied] {5} subsetEq pain_tuple4§region4#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              5 in pain_tuple4§region4#Set~Explicit[1]
[applied] 5 in pain_tuple4§region4#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__47 in pain_tuple4§region4#Set~Explicit[1] . v__47 = 5)
[applied] (exists v__47 in pain_tuple4§region4#Set~Explicit[1] . v__47 = 5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple4_Set~Explicit§region4[1, 1] = 5
[removeRefinedDecl] find pain_tuple1:
                            matrix indexed by [int(1..2)] of set (size 1) of int(5)
[removeRefinedDecl] find pain_tuple2:
                            matrix indexed by [int(1..2)] of set (size 1) of int(9)
[removeRefinedDecl] find pain_tuple3:
                            matrix indexed by [int(1..2)] of set (size 1) of int(6)
[removeRefinedDecl] find pain_tuple4:
                            matrix indexed by [int(1..2)] of set (size 1) of int(5)
[repr] 1