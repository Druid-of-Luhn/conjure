language ESSENCE' 1.0

find pain_tuple1_Explicit: matrix indexed by [int(1..2), int(1..1)] of int(5)
find pain_tuple2_Explicit: matrix indexed by [int(1..2), int(1..1)] of int(9)
find pain_tuple3_Explicit: matrix indexed by [int(1..2), int(1..1)] of int(6)
find pain_tuple4_Explicit: matrix indexed by [int(1..2), int(1..1)] of int(5)
such that
    forAll v__3 : int(1..1) . 5 = pain_tuple1_Explicit[1, v__3],
    exists v__6 : int(1..1) . pain_tuple1_Explicit[1, v__6] = 5,
    forAll v__9 : int(1..1) . 9 = pain_tuple2_Explicit[1, v__9],
    exists v__12 : int(1..1) . pain_tuple2_Explicit[1, v__12] = 9,
    forAll v__15 : int(1..1) . 6 = pain_tuple3_Explicit[1, v__15],
    exists v__18 : int(1..1) . pain_tuple3_Explicit[1, v__18] = 6,
    forAll v__21 : int(1..1) . 5 = pain_tuple4_Explicit[1, v__21],
    exists v__24 : int(1..1) . pain_tuple4_Explicit[1, v__24] = 5,
    allDiff(pain_tuple4_Explicit[1, ..]),
    allDiff(pain_tuple4_Explicit[2, ..]),
    allDiff(pain_tuple3_Explicit[1, ..]),
    allDiff(pain_tuple3_Explicit[2, ..]),
    allDiff(pain_tuple2_Explicit[1, ..]),
    allDiff(pain_tuple2_Explicit[2, ..]),
    allDiff(pain_tuple1_Explicit[1, ..]),
    allDiff(pain_tuple1_Explicit[2, ..])
