language ESSENCE' 1.0

find x_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..2), int(1, 2), int(1..3)] of bool
find x_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..2), int(1, 2), int(1..3)] of int(6..8)
such that
    forAll v__19 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 1, v__19]
          ->
          6 = x_ExplicitVarSize_tuple2[1, 1, v__19],
    exists v__22 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 1, v__22]
          /\
          x_ExplicitVarSize_tuple2[1, 1, v__22] = 6,
    forAll v__25 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 2, v__25]
          ->
          7 = x_ExplicitVarSize_tuple2[1, 2, v__25],
    exists v__28 : int(1..3)
        . x_ExplicitVarSize_tuple1[1, 2, v__28]
          /\
          x_ExplicitVarSize_tuple2[1, 2, v__28] = 7,
    forAll v__31 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 1, v__31]
          ->
          7 = x_ExplicitVarSize_tuple2[2, 1, v__31]
          \/
          8 = x_ExplicitVarSize_tuple2[2, 1, v__31],
    exists v__34 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 1, v__34]
          /\
          x_ExplicitVarSize_tuple2[2, 1, v__34] = 7,
    exists v__36 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 1, v__36]
          /\
          x_ExplicitVarSize_tuple2[2, 1, v__36] = 8,
    forAll v__39 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 2, v__39]
          ->
          8 = x_ExplicitVarSize_tuple2[2, 2, v__39],
    exists v__42 : int(1..3)
        . x_ExplicitVarSize_tuple1[2, 2, v__42]
          /\
          x_ExplicitVarSize_tuple2[2, 2, v__42] = 8,
    forAll v__5 : int(1..2)
        . (forAll v__6 : int(1, 2)
               . (forAll v__3 : int(1..3)
                      . (forAll v__4 : int(1..3)
                             . v__3 < v__4 /\ x_ExplicitVarSize_tuple1[v__5, v__6, v__3]
                               /\
                               x_ExplicitVarSize_tuple1[v__5, v__6, v__4]
                               ->
                               x_ExplicitVarSize_tuple2[v__5, v__6, v__3]
                               <
                               x_ExplicitVarSize_tuple2[v__5, v__6, v__4]))
                 /\
                 (forAll v__3 : int(1..2)
                      . x_ExplicitVarSize_tuple1[v__5, v__6, v__3]
                        <=
                        x_ExplicitVarSize_tuple1[v__5, v__6, v__3 + 1])),
    forAll v__10 : int(1..2)
        . (forAll v__11 : int(1, 2)
               . (sum v__9 : int(1..3) . x_ExplicitVarSize_tuple1[v__10, v__11, v__9]) >= 1)
