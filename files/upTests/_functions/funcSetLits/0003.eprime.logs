[useChannelling] True
[representation] find f: function (total) int(1..3) --> set of int(1, 2)
                 (#2)
                 AsReln, Matrix1D
[configuration] f§region1#Matrix1D
[addedDecl] find f_Matrix1D: matrix indexed by [int(1..3)] of set of int(1, 2)
[refn] 0
[applied] f§region1#Matrix1D = function(3 --> {}, 2 --> {1}, 1 --> {2, 1})
          {rules/refns/horizontal/function-eq.rule}
              (forAll v__3 in defined(f§region1#Matrix1D)
                   . f§region1#Matrix1D(v__3) = function(3 --> {}, 2 --> {1}, 1 --> {2, 1})(v__3))
[applied] f§region1#Matrix1D(v__3)
          {rules/refns/vertical/function-matrix1d/function-matrix1d-image.rule}
              f_Matrix1D§region1[v__3]
[applied] f_Matrix1D§region1[v__3]
          =
          function(3 --> {}, 2 --> {1}, 1 --> {2, 1})(v__3)
          {rules/refns/horizontal/function-apply-eq-2.rule}
              (3 = v__3 -> {} = f_Matrix1D§region1[v__3])
              /\
              (2 = v__3 -> {1} = f_Matrix1D§region1[v__3])
              /\
              (1 = v__3 -> {2, 1} = f_Matrix1D§region1[v__3])
[applied] {} = f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              {} subsetEq f_Matrix1D§region1[v__3] /\ {} supsetEq f_Matrix1D§region1[v__3]
[applied] {} subsetEq f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              true
[applied] {} supsetEq f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              f_Matrix1D§region1[v__3] subsetEq {}
[applied] f_Matrix1D§region1[v__3] subsetEq {}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__6 in f_Matrix1D§region1[v__3] . v__6 in {})
[applied] v__6 in {}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              false
[simplified] true /\ (forAll v__6 in f_Matrix1D§region1[v__3] . false)
             ~~>
             (forAll v__6 in f_Matrix1D§region1[v__3] . false)
[applied] {1} = f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              {1} subsetEq f_Matrix1D§region1[v__3] /\ {1} supsetEq f_Matrix1D§region1[v__3]
[applied] {1} subsetEq f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              1 in f_Matrix1D§region1[v__3]
[applied] 1 in f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__9 in f_Matrix1D§region1[v__3] . v__9 = 1)
[applied] {1} supsetEq f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              f_Matrix1D§region1[v__3] subsetEq {1}
[applied] f_Matrix1D§region1[v__3] subsetEq {1}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__10 in f_Matrix1D§region1[v__3] . v__10 in {1})
[applied] v__10 in {1}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              1 = v__10
[applied] {2, 1} = f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              {2, 1} subsetEq f_Matrix1D§region1[v__3]
              /\
              {2, 1} supsetEq f_Matrix1D§region1[v__3]
[applied] {2, 1} subsetEq f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              2 in f_Matrix1D§region1[v__3] /\ 1 in f_Matrix1D§region1[v__3]
[applied] 2 in f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__13 in f_Matrix1D§region1[v__3] . v__13 = 2)
[applied] 1 in f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__14 in f_Matrix1D§region1[v__3] . v__14 = 1)
[applied] {2, 1} supsetEq f_Matrix1D§region1[v__3]
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              f_Matrix1D§region1[v__3] subsetEq {2, 1}
[applied] f_Matrix1D§region1[v__3] subsetEq {2, 1}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__15 in f_Matrix1D§region1[v__3] . v__15 in {2, 1})
[applied] v__15 in {2, 1}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              2 = v__15 \/ 1 = v__15
[applied] (forAll v__3 in defined(f§region1#Matrix1D)
               . (3 = v__3 -> (forAll v__6 in f_Matrix1D§region1[v__3] . false))
                 /\
                 (2 = v__3
                  ->
                  (exists v__9 in f_Matrix1D§region1[v__3] . v__9 = 1)
                  /\
                  (forAll v__10 in f_Matrix1D§region1[v__3] . 1 = v__10))
                 /\
                 (1 = v__3
                  ->
                  (exists v__13 in f_Matrix1D§region1[v__3] . v__13 = 2)
                  /\
                  (exists v__14 in f_Matrix1D§region1[v__3] . v__14 = 1)
                  /\
                  (forAll v__15 in f_Matrix1D§region1[v__3] . 2 = v__15 \/ 1 = v__15)))
          {rules/refns/horizontal/function-defined-quantified.rule}
              (forAll v__17 in toSet(f§region1#Matrix1D)
                   . (3 = v__17[1] -> (forAll v__6 in f_Matrix1D§region1[v__17[1]] . false))
                     /\
                     (2 = v__17[1]
                      ->
                      (exists v__9 in f_Matrix1D§region1[v__17[1]] . v__9 = 1)
                      /\
                      (forAll v__10 in f_Matrix1D§region1[v__17[1]] . 1 = v__10))
                     /\
                     (1 = v__17[1]
                      ->
                      (exists v__13 in f_Matrix1D§region1[v__17[1]] . v__13 = 2)
                      /\
                      (exists v__14 in f_Matrix1D§region1[v__17[1]] . v__14 = 1)
                      /\
                      (forAll v__15 in f_Matrix1D§region1[v__17[1]] . 2 = v__15 \/ 1 = v__15)))
[applied] (forAll v__17 in toSet(f§region1#Matrix1D)
               . (3 = v__17[1] -> (forAll v__6 in f_Matrix1D§region1[v__17[1]] . false))
                 /\
                 (2 = v__17[1]
                  ->
                  (exists v__9 in f_Matrix1D§region1[v__17[1]] . v__9 = 1)
                  /\
                  (forAll v__10 in f_Matrix1D§region1[v__17[1]] . 1 = v__10))
                 /\
                 (1 = v__17[1]
                  ->
                  (exists v__13 in f_Matrix1D§region1[v__17[1]] . v__13 = 2)
                  /\
                  (exists v__14 in f_Matrix1D§region1[v__17[1]] . v__14 = 1)
                  /\
                  (forAll v__15 in f_Matrix1D§region1[v__17[1]] . 2 = v__15 \/ 1 = v__15)))
          {rules/refns/vertical/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__18 : int(1..3)
                   . (3 = v__18 -> (forAll v__6 in f_Matrix1D§region1[v__18] . false))
                     /\
                     (2 = v__18
                      ->
                      (exists v__9 in f_Matrix1D§region1[v__18] . v__9 = 1)
                      /\
                      (forAll v__10 in f_Matrix1D§region1[v__18] . 1 = v__10))
                     /\
                     (1 = v__18
                      ->
                      (exists v__13 in f_Matrix1D§region1[v__18] . v__13 = 2)
                      /\
                      (exists v__14 in f_Matrix1D§region1[v__18] . v__14 = 1)
                      /\
                      (forAll v__15 in f_Matrix1D§region1[v__18] . 2 = v__15 \/ 1 = v__15)))
[removeRefinedDecl] find f: function (total) int(1..3) --> set of int(1, 2)
[repr] 1
[representation] find f_Matrix1D:
                         matrix indexed by [int(1..3)] of set of int(1, 2)
                 (#2)
                 Set~ExplicitVarSize, Set~Occurrence
[configuration] f_Matrix1D§region1#Set~ExplicitVarSize
[addedDecl] find f_Matrix1D_Set~ExplicitVarSize:
                    matrix indexed by [int(1..3), int(1..2)] of (bool, int(1, 2))
[refn] 1
[applied] (forAll v__1 in f_Matrix1D§region1#Set~ExplicitVarSize[v__0] . false)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__22 : int(1..2)
                   , f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__22, 1]
                   . false)
[applied] (exists v__1 in f_Matrix1D§region1#Set~ExplicitVarSize[v__0]
               . v__1 = 1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__23 : int(1..2)
                   , f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__23, 1]
                   . f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__23, 2] = 1)
[applied] (forAll v__1 in f_Matrix1D§region1#Set~ExplicitVarSize[v__0]
               . 1 = v__1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__24 : int(1..2)
                   , f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__24, 1]
                   . 1 = f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__24, 2])
[applied] (exists v__1 in f_Matrix1D§region1#Set~ExplicitVarSize[v__0]
               . v__1 = 2)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__25 : int(1..2)
                   , f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__25, 1]
                   . f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__25, 2] = 2)
[applied] (exists v__1 in f_Matrix1D§region1#Set~ExplicitVarSize[v__0]
               . v__1 = 1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (exists v__26 : int(1..2)
                   , f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__26, 1]
                   . f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__26, 2] = 1)
[applied] (forAll v__1 in f_Matrix1D§region1#Set~ExplicitVarSize[v__0]
               . 2 = v__1 \/ 1 = v__1)
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (forAll v__27 : int(1..2)
                   , f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__27, 1]
                   . 2 = f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__27, 2]
                     \/
                     1 = f_Matrix1D_Set~ExplicitVarSize§region1[v__0, v__27, 2])
[applied] f_Matrix1D_Set~ExplicitVarSize§region1[v__20, 1, 2]
          .<
          f_Matrix1D_Set~ExplicitVarSize§region1[v__20, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              f_Matrix1D_Set~ExplicitVarSize§region1[v__20, 1, 2]
              <
              f_Matrix1D_Set~ExplicitVarSize§region1[v__20, 2, 2]
[removeRefinedDecl] find f_Matrix1D:
                            matrix indexed by [int(1..3)] of set of int(1, 2)
[removedDecl] find f_Matrix1D_Set~ExplicitVarSize:
                      matrix indexed by [int(1..3), int(1..2)] of (bool, int(1, 2))
[matrixToTuple] f_Matrix1D_Set~ExplicitVarSize∑2
[repr] 2