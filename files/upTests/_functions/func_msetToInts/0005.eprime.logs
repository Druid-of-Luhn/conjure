[useChannelling] True
[representation] find f: function (total)
                             mset (size 2) of int(1..2) --> int(-1, 1)
                 (#1)
                 AsReln
[configuration] f§region1#AsReln
[addedDecl] find f_AsReln: relation of (mset (size 2) of int(1..2) * int(-1, 1))
[addedStructuralCons] (forAll v__1 : mset (size 2) of int(1..2)
                           . (sum v__2 in toSet(f_AsReln§region1) . v__1 = v__2[1]) = 1)
[refn] 0
[applied] v__1 = v__2[1]
          {rules/refns/horizontal/mset/eq-to-subsets.rule}
              v__1 subsetEq v__2[1] /\ v__1 supsetEq v__2[1]
[applied] v__1 subsetEq v__2[1]
          {rules/refns/horizontal/mset/subseteq-to-quantified.rule}
              (forAll v__3 in v__1 . freq(v__1, v__3) <= freq(v__2[1], v__3))
              /\
              (forAll v__3 in v__2[1] . freq(v__1, v__3) <= freq(v__2[1], v__3))
[applied] freq(v__1, v__3)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__4 in v__1 . toInt(v__4 = v__3))
[applied] freq(v__2[1], v__3)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__5 in v__2[1] . toInt(v__5 = v__3))
[applied] freq(v__1, v__3)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__6 in v__1 . toInt(v__6 = v__3))
[applied] freq(v__2[1], v__3)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__7 in v__2[1] . toInt(v__7 = v__3))
[applied] v__1 supsetEq v__2[1]
          {rules/refns/horizontal/mset/supseteq-to-subseteq.rule}
              v__2[1] subsetEq v__1
[applied] v__2[1] subsetEq v__1
          {rules/refns/horizontal/mset/subseteq-to-quantified.rule}
              (forAll v__8 in v__2[1] . freq(v__2[1], v__8) <= freq(v__1, v__8))
              /\
              (forAll v__8 in v__1 . freq(v__2[1], v__8) <= freq(v__1, v__8))
[applied] freq(v__2[1], v__8)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__9 in v__2[1] . toInt(v__9 = v__8))
[applied] freq(v__1, v__8)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__10 in v__1 . toInt(v__10 = v__8))
[applied] freq(v__2[1], v__8)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__11 in v__2[1] . toInt(v__11 = v__8))
[applied] freq(v__1, v__8)
          {rules/refns/horizontal/mset/freq-to-sum.rule}
              (sum v__12 in v__1 . toInt(v__12 = v__8))
[representation] mset (size 2) of int(1..2) (#2) MSet~Explicit, MSet~Occurrence
[applied] (forAll v__1 : mset (size 2) of int(1..2)
               . (sum v__2 in toSet(f_AsReln§region1)
                      . (forAll v__3 in v__1
                             . (sum v__4 in v__1 . toInt(v__4 = v__3))
                               <=
                               (sum v__5 in v__2[1] . toInt(v__5 = v__3)))
                        /\
                        (forAll v__3 in v__2[1]
                             . (sum v__6 in v__1 . toInt(v__6 = v__3))
                               <=
                               (sum v__7 in v__2[1] . toInt(v__7 = v__3)))
                        /\
                        ((forAll v__8 in v__2[1]
                              . (sum v__9 in v__2[1] . toInt(v__9 = v__8))
                                <=
                                (sum v__10 in v__1 . toInt(v__10 = v__8)))
                         /\
                         (forAll v__8 in v__1
                              . (sum v__11 in v__2[1] . toInt(v__11 = v__8))
                                <=
                                (sum v__12 in v__1 . toInt(v__12 = v__8)))))
                 =
                 1)
          {builtIn.abstractDomsInQuans}
              (forAll v__1_MSet~Explicit : matrix indexed by [int(1..2)] of int(1..2)
                   , v__1_MSet~Explicit§regionS[1] .<= v__1_MSet~Explicit§regionS[2]
                   . (sum v__2 in toSet(f_AsReln§region1)
                          . (forAll v__3 in v__1§regionS#MSet~Explicit
                                 . (sum v__4 in v__1§regionS#MSet~Explicit . toInt(v__4 = v__3))
                                   <=
                                   (sum v__5 in v__2[1] . toInt(v__5 = v__3)))
                            /\
                            (forAll v__3 in v__2[1]
                                 . (sum v__6 in v__1§regionS#MSet~Explicit . toInt(v__6 = v__3))
                                   <=
                                   (sum v__7 in v__2[1] . toInt(v__7 = v__3)))
                            /\
                            ((forAll v__8 in v__2[1]
                                  . (sum v__9 in v__2[1] . toInt(v__9 = v__8))
                                    <=
                                    (sum v__10 in v__1§regionS#MSet~Explicit . toInt(v__10 = v__8)))
                             /\
                             (forAll v__8 in v__1§regionS#MSet~Explicit
                                  . (sum v__11 in v__2[1] . toInt(v__11 = v__8))
                                    <=
                                    (sum v__12 in v__1§regionS#MSet~Explicit . toInt(v__12 = v__8)))))
                     =
                     1)
          {builtIn.abstractDomsInQuans}
              (forAll v__1_MSet~Occurrence : matrix indexed by [int(1..2)] of int(0..2)
                   , (sum v__14 : int(1..2) . v__1_MSet~Occurrence§regionS[v__14]) = 2
                   . (sum v__2 in toSet(f_AsReln§region1)
                          . (forAll v__3 in v__1§regionS#MSet~Occurrence
                                 . (sum v__4 in v__1§regionS#MSet~Occurrence . toInt(v__4 = v__3))
                                   <=
                                   (sum v__5 in v__2[1] . toInt(v__5 = v__3)))
                            /\
                            (forAll v__3 in v__2[1]
                                 . (sum v__6 in v__1§regionS#MSet~Occurrence . toInt(v__6 = v__3))
                                   <=
                                   (sum v__7 in v__2[1] . toInt(v__7 = v__3)))
                            /\
                            ((forAll v__8 in v__2[1]
                                  . (sum v__9 in v__2[1] . toInt(v__9 = v__8))
                                    <=
                                    (sum v__10 in v__1§regionS#MSet~Occurrence . toInt(v__10 = v__8)))
                             /\
                             (forAll v__8 in v__1§regionS#MSet~Occurrence
                                  . (sum v__11 in v__2[1] . toInt(v__11 = v__8))
                                    <=
                                    (sum v__12 in v__1§regionS#MSet~Occurrence . toInt(v__12 = v__8)))))
                     =
                     1)
[applied] (sum v__4 in v__1§regionS#MSet~Occurrence . toInt(v__4 = v__3))
          {rules/refns/vertical/MSet~Occurrence/sum.rule}
              (sum v__15 : int(1..2)
                   . toInt(v__15 = v__3) * v__1_MSet~Occurrence§regionS[v__15])
[applied] (forAll v__3 in v__1§regionS#MSet~Occurrence
               . (sum v__15 : int(1..2)
                      . toInt(v__15 = v__3) * v__1_MSet~Occurrence§regionS[v__15])
                 <=
                 (sum v__5 in v__2[1] . toInt(v__5 = v__3)))
          {rules/refns/vertical/MSet~Occurrence/forAll.rule}
              (forAll v__16 : int(1..2) , v__1_MSet~Occurrence§regionS[v__16] > 0
                   . (sum v__15 : int(1..2)
                          . toInt(v__15 = v__16) * v__1_MSet~Occurrence§regionS[v__15])
                     <=
                     (sum v__5 in v__2[1] . toInt(v__5 = v__16)))
[applied] (sum v__6 in v__1§regionS#MSet~Occurrence . toInt(v__6 = v__3))
          {rules/refns/vertical/MSet~Occurrence/sum.rule}
              (sum v__17 : int(1..2)
                   . toInt(v__17 = v__3) * v__1_MSet~Occurrence§regionS[v__17])
[applied] (sum v__10 in v__1§regionS#MSet~Occurrence . toInt(v__10 = v__8))
          {rules/refns/vertical/MSet~Occurrence/sum.rule}
              (sum v__18 : int(1..2)
                   . toInt(v__18 = v__8) * v__1_MSet~Occurrence§regionS[v__18])
[applied] (sum v__12 in v__1§regionS#MSet~Occurrence . toInt(v__12 = v__8))
          {rules/refns/vertical/MSet~Occurrence/sum.rule}
              (sum v__19 : int(1..2)
                   . toInt(v__19 = v__8) * v__1_MSet~Occurrence§regionS[v__19])
[applied] (forAll v__8 in v__1§regionS#MSet~Occurrence
               . (sum v__11 in v__2[1] . toInt(v__11 = v__8))
                 <=
                 (sum v__19 : int(1..2)
                      . toInt(v__19 = v__8) * v__1_MSet~Occurrence§regionS[v__19]))
          {rules/refns/vertical/MSet~Occurrence/forAll.rule}
              (forAll v__20 : int(1..2) , v__1_MSet~Occurrence§regionS[v__20] > 0
                   . (sum v__11 in v__2[1] . toInt(v__11 = v__20))
                     <=
                     (sum v__19 : int(1..2)
                          . toInt(v__19 = v__20) * v__1_MSet~Occurrence§regionS[v__19]))
[removeRefinedDecl] find f: function (total)
                                mset (size 2) of int(1..2) --> int(-1, 1)
[repr] 1
[representation] find f_AsReln:
                         relation of (mset (size 2) of int(1..2) * int(-1, 1))
                 (#1)
                 RelationAsSet
[configuration] f_AsReln§region1#RelationAsSet
[addedDecl] find f_AsReln_RelationAsSet:
                    set of (mset (size 2) of int(1..2), int(-1, 1))
[refn] 1
[applied] (sum v__1 in toSet(f_AsReln§region1#RelationAsSet)
               . (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                      . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                        <=
                        (sum v__3 in v__1[1] . toInt(v__3 = v__2)))
                 /\
                 (forAll v__2 in v__1[1]
                      . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                        <=
                        (sum v__3 in v__1[1] . toInt(v__3 = v__2)))
                 /\
                 ((forAll v__2 in v__1[1]
                       . (sum v__3 in v__1[1] . toInt(v__3 = v__2))
                         <=
                         (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))
                  /\
                  (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                       . (sum v__3 in v__1[1] . toInt(v__3 = v__2))
                         <=
                         (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))))
          {rules/refns/vertical/relation-RelationAsSet/relation-RelationAsSet-toSet.rule}
              (sum v__1 in f_AsReln_RelationAsSet§region1
                   . (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                          . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                            <=
                            (sum v__3 in v__1[1] . toInt(v__3 = v__2)))
                     /\
                     (forAll v__2 in v__1[1]
                          . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                            <=
                            (sum v__3 in v__1[1] . toInt(v__3 = v__2)))
                     /\
                     ((forAll v__2 in v__1[1]
                           . (sum v__3 in v__1[1] . toInt(v__3 = v__2))
                             <=
                             (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))
                      /\
                      (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                           . (sum v__3 in v__1[1] . toInt(v__3 = v__2))
                             <=
                             (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))))
[removeRefinedDecl] find f_AsReln:
                            relation of (mset (size 2) of int(1..2) * int(-1, 1))
[repr] 2
[representation] find f_AsReln_RelationAsSet:
                         set of (mset (size 2) of int(1..2), int(-1, 1))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] f_AsReln_RelationAsSet§region1#Set~ExplicitVarSize
[addedDecl] find f_AsReln_RelationAsSet_Set~ExplicitVarSize:
                    matrix indexed by [int(1..8)] of (bool,
                                                      (mset (size 2) of int(1..2), int(-1, 1)))
[addedStructuralCons] (forAll v__21 : int(1..7)
                           , f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21, 1]
                             /\
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21 + 1, 1]
                           . f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21, 2, 1]
                             .<
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21 + 1, 2, 1]
                             \/
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21, 2, 1]
                             =
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21 + 1, 2, 1]
                             /\
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21, 2, 2]
                             .<
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21 + 1, 2, 2])
                      /\
                      (forAll v__21 : int(1..7)
                           . f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21, 1]
                             >=
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__21 + 1, 1])
[refn] 2
[applied] (sum v__1 in f_AsReln_RelationAsSet§region1#Set~ExplicitVarSize
               . (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                      . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                        <=
                        (sum v__3 in v__1[1] . toInt(v__3 = v__2)))
                 /\
                 (forAll v__2 in v__1[1]
                      . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                        <=
                        (sum v__3 in v__1[1] . toInt(v__3 = v__2)))
                 /\
                 ((forAll v__2 in v__1[1]
                       . (sum v__3 in v__1[1] . toInt(v__3 = v__2))
                         <=
                         (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))
                  /\
                  (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                       . (sum v__3 in v__1[1] . toInt(v__3 = v__2))
                         <=
                         (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))))
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              (sum v__23 : int(1..8)
                   , f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 1]
                   . (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                          . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                            <=
                            (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 2, 1]
                                 . toInt(v__3 = v__2)))
                     /\
                     (forAll v__2 in f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 2, 1]
                          . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                            <=
                            (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 2, 1]
                                 . toInt(v__3 = v__2)))
                     /\
                     ((forAll v__2 in f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 2, 1]
                           . (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 2, 1]
                                  . toInt(v__3 = v__2))
                             <=
                             (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))
                      /\
                      (forAll v__2 : int(1..2) , v__0§regionS[v__2] > 0
                           . (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize§region1[v__23, 2, 1]
                                  . toInt(v__3 = v__2))
                             <=
                             (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))))
[removeRefinedDecl] find f_AsReln_RelationAsSet:
                            set of (mset (size 2) of int(1..2), int(-1, 1))
[removedDecl] find f_AsReln_RelationAsSet_Set~ExplicitVarSize:
                      matrix indexed by [int(1..8)] of (bool,
                                                        (mset (size 2) of int(1..2), int(-1, 1)))
[matrixToTuple] f_AsReln_RelationAsSet_Set~ExplicitVarSize∑1
[removedDecl] find f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..8)] of (mset (size 2) of int(1..2), int(-1, 1))
[matrixToTuple] f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2∑1
[repr] 3
[representation] find f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1:
                         matrix indexed by [int(1..8)] of mset (size 2) of int(1..2)
                 (#2)
                 MSet~Explicit, MSet~Occurrence
[configuration] f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit
[addedDecl] find f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit:
                    matrix indexed by [int(1..8), int(1..2)] of int(1..2)
[addedStructuralCons] (forAll v__25 : int(1..8)
                           . f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__25,
                                                                                                            1]
                             .<=
                             f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__25,
                                                                                                            2])
[refn] 3
[applied] (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit[v__1]
               . toInt(v__3 = v__2))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (sum v__30 : int(1..2)
                   . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                          v__30]
                           =
                           v__2))
[applied] (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit[v__1]
               . toInt(v__3 = v__2))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (sum v__31 : int(1..2)
                   . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                          v__31]
                           =
                           v__2))
[applied] (forAll v__2 in f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit[v__1]
               . (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3])
                 <=
                 (sum v__31 : int(1..2)
                      . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                             v__31]
                              =
                              v__2)))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (forAll v__32 : int(1..2)
                   . (sum v__3 : int(1..2)
                          . toInt(v__3
                                  =
                                  f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                                 v__32])
                            *
                            v__0§regionS[v__3])
                     <=
                     (sum v__31 : int(1..2)
                          . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                                 v__31]
                                  =
                                  f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                                 v__32])))
[applied] (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit[v__1]
               . toInt(v__3 = v__2))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (sum v__33 : int(1..2)
                   . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                          v__33]
                           =
                           v__2))
[applied] (forAll v__2 in f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit[v__1]
               . (sum v__33 : int(1..2)
                      . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                             v__33]
                              =
                              v__2))
                 <=
                 (sum v__3 : int(1..2) . toInt(v__3 = v__2) * v__0§regionS[v__3]))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (forAll v__34 : int(1..2)
                   . (sum v__33 : int(1..2)
                          . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                                 v__33]
                                  =
                                  f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                                 v__34]))
                     <=
                     (sum v__3 : int(1..2)
                          . toInt(v__3
                                  =
                                  f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                                 v__34])
                            *
                            v__0§regionS[v__3]))
[applied] (sum v__3 in f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1§region1#MSet~Explicit[v__1]
               . toInt(v__3 = v__2))
          {rules/refns/vertical/MSet~Explicit/quantified.rule}
              (sum v__35 : int(1..2)
                   . toInt(f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__1,
                                                                                                          v__35]
                           =
                           v__2))
[applied] f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__25,
                                                                                         1]
          .<=
          f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__25,
                                                                                         2]
          {rules/refns/horizontal/DotLeq-ints.rule}
              f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__25,
                                                                                             1]
              <=
              f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1_MSet~Explicit§region1[v__25,
                                                                                             2]
[removeRefinedDecl] find f_AsReln_RelationAsSet_Set~ExplicitVarSize_tuple2_tuple1:
                            matrix indexed by [int(1..8)] of mset (size 2) of int(1..2)
[repr] 4