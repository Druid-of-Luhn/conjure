[representation] find fs:
                         set (minSize 1) of function (total) int(1..2) --> int(-1, 1)
                 (#1)
                 ExplicitVarSize
[configuration] fs§region1#ExplicitVarSize
[addedDecl] find fs_ExplicitVarSize:
                    matrix indexed by [int(1..4)] of (bool,
                                                      function (total) int(1..2) --> int(-1, 1))
[applied] (forAll f in fs§region1#ExplicitVarSize . f(1) != -1)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__4 : int(1..4) , fs_ExplicitVarSize§region1[v__4, 1]
                   . fs_ExplicitVarSize§region1[v__4, 2](1) != -1)
[applied] fs_ExplicitVarSize§region1[v__1, 2]
          !=
          fs_ExplicitVarSize§region1[v__2, 2]
          {rules/refns/neq-to-eq.rule}
              !(fs_ExplicitVarSize§region1[v__1, 2] = fs_ExplicitVarSize§region1[v__2, 2])
[applied] fs_ExplicitVarSize§region1[v__1, 2]
          =
          fs_ExplicitVarSize§region1[v__2, 2]
          {rules/refns/function-eq.rule}
              (forAll v__5 in defined(fs_ExplicitVarSize§region1[v__1, 2])
                   . fs_ExplicitVarSize§region1[v__1, 2](v__5)
                     =
                     fs_ExplicitVarSize§region1[v__2, 2](v__5))
[applied] (forAll v__5 in defined(fs_ExplicitVarSize§region1[v__1, 2])
               . fs_ExplicitVarSize§region1[v__1, 2](v__5)
                 =
                 fs_ExplicitVarSize§region1[v__2, 2](v__5))
          {rules/refns/function-defined-quantified.rule}
              (forAll v__6 in toSet(fs_ExplicitVarSize§region1[v__1, 2])
                   . fs_ExplicitVarSize§region1[v__1, 2](v__6[1])
                     =
                     fs_ExplicitVarSize§region1[v__2, 2](v__6[1]))
[removedDecl] find fs_ExplicitVarSize:
                      matrix indexed by [int(1..4)] of (bool,
                                                        function (total) int(1..2) --> int(-1, 1))
[removedDecl] find fs:
                      set (minSize 1) of function (total) int(1..2) --> int(-1, 1)
[representation] find fs_ExplicitVarSize_tuple2:
                         matrix indexed by [int(1..4)] of function (total) int(1..2) --> int(-1, 1)
                 (#1)
                 Matrix1D
[configuration] fs_ExplicitVarSize_tuple2§region1#Matrix1D
[addedDecl] find fs_ExplicitVarSize_tuple2_Matrix1D:
                    matrix indexed by [int(1..4), int(1..2)] of int(-1, 1)
[applied] fs_ExplicitVarSize_tuple2§region1#Matrix1D[v__4](1)
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__4, 1]
[applied] fs_ExplicitVarSize_tuple2§region1#Matrix1D[v__1](v__6[1])
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__1, v__6[1]]
[applied] fs_ExplicitVarSize_tuple2§region1#Matrix1D[v__2](v__6[1])
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__2, v__6[1]]
[applied] (forAll v__6 in toSet(fs_ExplicitVarSize_tuple2§region1#Matrix1D[v__1])
               . fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__1, v__6[1]]
                 =
                 fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__2, v__6[1]])
          {rules/refns/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__10 : int(1..2)
                   . fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__1, v__10]
                     =
                     fs_ExplicitVarSize_tuple2_Matrix1D§region1[v__2, v__10])
[removedDecl] find fs_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..4)] of function (total) int(1..2) --> int(-1, 1)