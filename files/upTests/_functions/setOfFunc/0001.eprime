language ESSENCE' 1.0

find fs_SetExplicitVarSize_tuple1: matrix indexed by [int(1..4)] of bool
find fs_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2:
        matrix indexed by [int(1..4), int(1..2), int(-1, 1)] of bool
such that
    (sum v__0 : int(1..4) . fs_SetExplicitVarSize_tuple1[v__0]) >= 1,
    forAll v__0 : int(1..3)
        . fs_SetExplicitVarSize_tuple1[v__0] /\ fs_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          flatten(fs_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0, .., ..])
          <lex
          flatten(fs_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0 + 1,
                                                                         ..,
                                                                         ..]),
    forAll v__0 : int(1..3)
        . fs_SetExplicitVarSize_tuple1[v__0] <= fs_SetExplicitVarSize_tuple1[v__0 + 1],
    forAll v__0 : int(1..4)
        . fs_SetExplicitVarSize_tuple1[v__0]
          ->
          (sum v__1 : int(1..2)
               . (sum v__2 : int(-1, 1)
                      . (v__1 = 1
                         /\
                         fs_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0, v__1, v__2])
                        *
                        v__2))
          !=
          -1,
    forAll v__0 : int(1..4)
        . (forAll v__1 : int(1..2)
               . (sum v__2 : int(1..2)
                      . (sum v__3 : int(-1, 1)
                             . fs_SetExplicitVarSize_tuple2_AsReln_RelationIntMatrix2[v__0, v__2, v__3]
                               *
                               (v__1 = v__2)))
                 =
                 1)
