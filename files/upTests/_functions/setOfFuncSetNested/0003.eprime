language ESSENCE' 1.0

given a: int
given b: int
given c: int
given d: int
find fs_SetExplicit_Matrix1D_SetExplicit_SetExplicit:
        matrix indexed by [int(1..1), int(a..b), int(1..2), int(1..3)] of int(c..d)
such that
    forAll v__0 : int(a..b)
        . flatten(fs_SetExplicit_Matrix1D_SetExplicit_SetExplicit[1, v__0, 1, ..])
          <lex
          flatten(fs_SetExplicit_Matrix1D_SetExplicit_SetExplicit[1, v__0, 2, ..]),
    forAll v__0 : int(a..b)
        . (forAll v__1 : int(1..2)
               . (forAll v__2 : int(1..2)
                      . fs_SetExplicit_Matrix1D_SetExplicit_SetExplicit[1, v__0, v__1, v__2]
                        <
                        fs_SetExplicit_Matrix1D_SetExplicit_SetExplicit[1, v__0, v__1, v__2 + 1]))
