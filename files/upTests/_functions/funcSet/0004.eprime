language ESSENCE' 1.0

given a: int
given b: int
given c: int
given d: int
find f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple1:
        int(0..(b - a + 1) * (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2))))
find f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1:
        matrix indexed by [int(1..(b - a + 1)
                                  *
                                  (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2))))] of int(a..b)
find f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple2_SetOccurrence:
        matrix indexed by [int(1..(b - a + 1)
                                  *
                                  (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2)))),
                           int(c..d)] of bool
such that
    10
    >
    (sum v__0 : int(1..(b - a + 1)
                       *
                       (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2))))
         . (2 = f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1[v__0]
            /\
            v__0 <= f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple1)
           *
           (sum v__1 : int(c..d)
                . f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple2_SetOccurrence[v__0,
                                                                                                  v__1]
                  *
                  1)),
    forAll v__0 : int(a..b)
        . (sum v__1 : int(1..(b - a + 1)
                             *
                             (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2))))
               . (v__1 <= f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple1)
                 *
                 (v__0
                  =
                  f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1[v__1]))
          =
          1,
    forAll v__0 : int(1..(b - a + 1)
                         *
                         (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2))))
        . v__0 + 1 <= f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple1
          ->
          f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1[v__0]
          <
          f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1[v__0 + 1]
          \/
          f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1[v__0]
          =
          f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple1[v__0 + 1]
          /\
          flatten(f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple2_SetOccurrence[v__0
                                                                                                  +
                                                                                                  1,
                                                                                                  ..])
          <lex
          flatten(f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple2_SetOccurrence[v__0,
                                                                                                  ..]),
    forAll v__0 : int(1..(b - a + 1)
                         *
                         (factorial(d - c + 1) / (2 * factorial(d - c + 1 - 2))))
        . (sum v__1 : int(c..d)
               . f_AsReln_RelationAsSet_SetExplicitVarSizeWithMarker_tuple2_tuple2_SetOccurrence[v__0,
                                                                                                 v__1])
          =
          2
