[handleInfDom] given a: int
               ~~>
               given a: int(MININT..MAXINT)
[handleInfDom] given b: int
               ~~>
               given b: int(MININT..MAXINT)
[handleInfDom] given c: int
               ~~>
               given c: int(MININT..MAXINT)
[handleInfDom] given d: int
               ~~>
               given d: int(MININT..MAXINT)
[representation] find fs:
                         set (size 1) of
                             function (total)
                                 int(a..b) --> (int(1), set (size 2) of (int(10, 11), int(12, 13)), int(4))
                 (#1)
                 Explicit
[configuration] fs§region1#Explicit
[addedDecl] find fs_Explicit:
                    matrix indexed by [int(1..1)] of function (total)
                                                         int(a..b)
                                                             --> (int(1),
                                                                  set (size 2) of (int(10, 11), int(12, 13)),
                                                                  int(4))
[applied] |fs§region1#Explicit|
          {rules/refns/set-card.rule}
              (sum v__3 in fs§region1#Explicit . 1)
[applied] (sum v__3 in fs§region1#Explicit . 1)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              1
[simplified] 1 = 1
             ~~>
             true
[applied] fs_Explicit§region1[1] != fs_Explicit§region1[v__2]
          {rules/refns/neq-to-eq.rule}
              !(fs_Explicit§region1[1] = fs_Explicit§region1[v__2])
[applied] fs_Explicit§region1[1] = fs_Explicit§region1[v__2]
          {rules/refns/function-eq.rule}
              (forAll v__5 in defined(fs_Explicit§region1[1])
                   . fs_Explicit§region1[1](v__5)[1] = fs_Explicit§region1[v__2](v__5)[1]
                     /\
                     (fs_Explicit§region1[1](v__5)[2] = fs_Explicit§region1[v__2](v__5)[2]
                      /\
                      fs_Explicit§region1[1](v__5)[3] = fs_Explicit§region1[v__2](v__5)[3]))
[applied] fs_Explicit§region1[1](v__5)[2] = fs_Explicit§region1[v__2](v__5)[2]
          {rules/refns/set-eq-to-subsets.rule}
              fs_Explicit§region1[1](v__5)[2] subsetEq fs_Explicit§region1[v__2](v__5)[2]
              /\
              fs_Explicit§region1[1](v__5)[2] supsetEq fs_Explicit§region1[v__2](v__5)[2]
[applied] fs_Explicit§region1[1](v__5)[2]
          subsetEq
          fs_Explicit§region1[v__2](v__5)[2]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__6 in fs_Explicit§region1[1](v__5)[2]
                   . v__6 in fs_Explicit§region1[v__2](v__5)[2])
[applied] v__6 in fs_Explicit§region1[v__2](v__5)[2]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__7 in fs_Explicit§region1[v__2](v__5)[2]
                   . v__7[1] = v__6[1] /\ v__7[2] = v__6[2])
[applied] fs_Explicit§region1[1](v__5)[2]
          supsetEq
          fs_Explicit§region1[v__2](v__5)[2]
          {rules/refns/set-supseteq-to-subseteq.rule}
              fs_Explicit§region1[v__2](v__5)[2] subsetEq fs_Explicit§region1[1](v__5)[2]
[applied] fs_Explicit§region1[v__2](v__5)[2]
          subsetEq
          fs_Explicit§region1[1](v__5)[2]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__8 in fs_Explicit§region1[v__2](v__5)[2]
                   . v__8 in fs_Explicit§region1[1](v__5)[2])
[applied] v__8 in fs_Explicit§region1[1](v__5)[2]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__9 in fs_Explicit§region1[1](v__5)[2]
                   . v__9[1] = v__8[1] /\ v__9[2] = v__8[2])
[applied] (forAll v__5 in defined(fs_Explicit§region1[1])
               . fs_Explicit§region1[1](v__5)[1] = fs_Explicit§region1[v__2](v__5)[1]
                 /\
                 ((forAll v__6 in fs_Explicit§region1[1](v__5)[2]
                       . (exists v__7 in fs_Explicit§region1[v__2](v__5)[2]
                              . v__7[1] = v__6[1] /\ v__7[2] = v__6[2]))
                  /\
                  (forAll v__8 in fs_Explicit§region1[v__2](v__5)[2]
                       . (exists v__9 in fs_Explicit§region1[1](v__5)[2]
                              . v__9[1] = v__8[1] /\ v__9[2] = v__8[2]))
                  /\
                  fs_Explicit§region1[1](v__5)[3] = fs_Explicit§region1[v__2](v__5)[3]))
          {rules/refns/function-defined-quantified.rule}
              (forAll v__10 in toSet(fs_Explicit§region1[1])
                   . fs_Explicit§region1[1](v__10[1])[1] = fs_Explicit§region1[v__2](v__10[1])[1]
                     /\
                     ((forAll v__6 in fs_Explicit§region1[1](v__10[1])[2]
                           . (exists v__7 in fs_Explicit§region1[v__2](v__10[1])[2]
                                  . v__7[1] = v__6[1] /\ v__7[2] = v__6[2]))
                      /\
                      (forAll v__8 in fs_Explicit§region1[v__2](v__10[1])[2]
                           . (exists v__9 in fs_Explicit§region1[1](v__10[1])[2]
                                  . v__9[1] = v__8[1] /\ v__9[2] = v__8[2]))
                      /\
                      fs_Explicit§region1[1](v__10[1])[3] = fs_Explicit§region1[v__2](v__10[1])[3]))
[removedDecl] find fs:
                      set (size 1) of
                          function (total)
                              int(a..b) --> (int(1), set (size 2) of (int(10, 11), int(12, 13)), int(4))
[representation] find fs_Explicit:
                         matrix indexed by [int(1..1)] of function (total)
                                                              int(a..b)
                                                                  --> (int(1),
                                                                       set (size 2) of (int(10, 11), int(12, 13)),
                                                                       int(4))
                 (#1)
                 Matrix1D
[configuration] fs_Explicit§region1#Matrix1D
[addedDecl] find fs_Explicit_Matrix1D:
                    matrix indexed by [int(1..1), int(a..b)] of (int(1),
                                                                 set (size 2) of (int(10, 11), int(12, 13)),
                                                                 int(4))
[applied] fs_Explicit§region1#Matrix1D[1](v__10[1])
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              fs_Explicit_Matrix1D§region1[1, v__10[1]]
[applied] fs_Explicit§region1#Matrix1D[v__2](v__10[1])
          {rules/refns/function-matrix1d/function-matrix1d-image.rule}
              fs_Explicit_Matrix1D§region1[v__2, v__10[1]]
[applied] (forAll v__10 in toSet(fs_Explicit§region1#Matrix1D[1])
               . fs_Explicit_Matrix1D§region1[1, v__10[1], 1]
                 =
                 fs_Explicit_Matrix1D§region1[v__2, v__10[1], 1]
                 /\
                 ((forAll v__6 in fs_Explicit_Matrix1D§region1[1, v__10[1], 2]
                       . (exists v__7 in fs_Explicit_Matrix1D§region1[v__2, v__10[1], 2]
                              . v__7[1] = v__6[1] /\ v__7[2] = v__6[2]))
                  /\
                  (forAll v__8 in fs_Explicit_Matrix1D§region1[v__2, v__10[1], 2]
                       . (exists v__9 in fs_Explicit_Matrix1D§region1[1, v__10[1], 2]
                              . v__9[1] = v__8[1] /\ v__9[2] = v__8[2]))
                  /\
                  fs_Explicit_Matrix1D§region1[1, v__10[1], 3]
                  =
                  fs_Explicit_Matrix1D§region1[v__2, v__10[1], 3]))
          {rules/refns/function-matrix1d/function-toSet-quantified.rule}
              (forAll v__14 : int(a..b)
                   . fs_Explicit_Matrix1D§region1[1, v__14, 1]
                     =
                     fs_Explicit_Matrix1D§region1[v__2, v__14, 1]
                     /\
                     ((forAll v__6 in fs_Explicit_Matrix1D§region1[1, v__14, 2]
                           . (exists v__7 in fs_Explicit_Matrix1D§region1[v__2, v__14, 2]
                                  . v__7[1] = v__6[1] /\ v__7[2] = v__6[2]))
                      /\
                      (forAll v__8 in fs_Explicit_Matrix1D§region1[v__2, v__14, 2]
                           . (exists v__9 in fs_Explicit_Matrix1D§region1[1, v__14, 2]
                                  . v__9[1] = v__8[1] /\ v__9[2] = v__8[2]))
                      /\
                      fs_Explicit_Matrix1D§region1[1, v__14, 3]
                      =
                      fs_Explicit_Matrix1D§region1[v__2, v__14, 3]))
[removedDecl] find fs_Explicit_Matrix1D:
                      matrix indexed by [int(1..1), int(a..b)] of (int(1),
                                                                   set (size 2) of (int(10, 11), int(12, 13)),
                                                                   int(4))
[removedDecl] find fs_Explicit:
                      matrix indexed by [int(1..1)] of function (total)
                                                           int(a..b)
                                                               --> (int(1),
                                                                    set (size 2) of (int(10, 11), int(12, 13)),
                                                                    int(4))
[representation] find fs_Explicit_Matrix1D_tuple2:
                         matrix indexed by [int(1..1), int(a..b)] of set (size 2) of
                                                                         (int(10, 11), int(12, 13))
                 (#1)
                 Explicit
[configuration] fs_Explicit_Matrix1D_tuple2§region1#Explicit
[addedDecl] find fs_Explicit_Matrix1D_tuple2_Explicit:
                    matrix indexed by [int(1..1), int(a..b), int(1..2)] of (int(10, 11),
                                                                            int(12, 13))
[applied] (exists v__7 in fs_Explicit_Matrix1D_tuple2§region1#Explicit[v__2,
                                                                       v__14]
               . v__7[1] = v__6[1] /\ v__7[2] = v__6[2])
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__20 : int(1..2)
                   . fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__20, 1] = v__6[1]
                     /\
                     fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__20, 2] = v__6[2])
[applied] (forAll v__6 in fs_Explicit_Matrix1D_tuple2§region1#Explicit[1, v__14]
               . (exists v__20 : int(1..2)
                      . fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__20, 1] = v__6[1]
                        /\
                        fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__20, 2] = v__6[2]))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__21 : int(1..2)
                   . (exists v__20 : int(1..2)
                          . fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__20, 1]
                            =
                            fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__21, 1]
                            /\
                            fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__20, 2]
                            =
                            fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__21, 2]))
[applied] (exists v__9 in fs_Explicit_Matrix1D_tuple2§region1#Explicit[1, v__14]
               . v__9[1] = v__8[1] /\ v__9[2] = v__8[2])
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__22 : int(1..2)
                   . fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__22, 1] = v__8[1]
                     /\
                     fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__22, 2] = v__8[2])
[applied] (forAll v__8 in fs_Explicit_Matrix1D_tuple2§region1#Explicit[v__2,
                                                                       v__14]
               . (exists v__22 : int(1..2)
                      . fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__22, 1] = v__8[1]
                        /\
                        fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__22, 2] = v__8[2]))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__23 : int(1..2)
                   . (exists v__22 : int(1..2)
                          . fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__22, 1]
                            =
                            fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__23, 1]
                            /\
                            fs_Explicit_Matrix1D_tuple2_Explicit§region1[1, v__14, v__22, 2]
                            =
                            fs_Explicit_Matrix1D_tuple2_Explicit§region1[v__2, v__14, v__23, 2]))
[removedDecl] find fs_Explicit_Matrix1D_tuple2_Explicit:
                      matrix indexed by [int(1..1), int(a..b), int(1..2)] of (int(10, 11),
                                                                              int(12, 13))
[removedDecl] find fs_Explicit_Matrix1D_tuple2:
                      matrix indexed by [int(1..1), int(a..b)] of set (size 2) of
                                                                      (int(10, 11), int(12, 13))