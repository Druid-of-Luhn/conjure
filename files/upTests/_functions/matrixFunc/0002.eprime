language ESSENCE' 1.0

find pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple1:
        matrix indexed by [int(1), int(1..4)] of bool
find pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1), int(1..4)] of int(1..2)
find pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1), int(1..4)] of int(-1, 1)
such that
    forAll v__0 : int(1)
        . (forAll v__1 : int(1..3)
               . pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0, v__1]
                 /\
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0, v__1 + 1]
                 ->
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0, v__1]
                 <
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0, v__1 + 1]
                 \/
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0, v__1]
                 =
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0, v__1 + 1]
                 /\
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__0, v__1]
                 <
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple2[v__0, v__1 + 1])
          /\
          (forAll v__1 : int(1..3)
               . pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0, v__1]
                 >=
                 pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0, v__1 + 1]),
    forAll v__0 : int(1)
        . (forAll v__1 : int(1..2)
               . (sum v__2 : int(1..4)
                      . pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple1[v__0, v__2]
                        *
                        (v__1 = pain_AsReln_RelationAsSet_SetExplicitVarSize_tuple2_tuple1[v__0, v__2]))
                 =
                 1)
