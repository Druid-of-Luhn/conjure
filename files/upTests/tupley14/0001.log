[removedDecl] find pain:
                      matrix indexed by [int(1..2)] of ((int(1, 2), int(4, 5)),
                                                        set (size 1) of int(8, 9))
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1..2)] of (int(1, 2), int(4, 5))
[representation] find pain_tuple2:
                         matrix indexed by [int(1..2)] of set (size 1) of int(8, 9)
                 (#2)
                 Explicit, Occurrence
[configuration] pain_tuple2§region1#Explicit pain_tuple2§region2#Explicit
[addedDecl] (find pain_tuple2:
                     matrix indexed by [int(1..2)] of set (size 1) of int(8, 9),
             find pain_tuple2_Explicit:
                     matrix indexed by [int(1..2), int(1..1)] of int(8, 9))
[fullEvaluator empty range] (forAll v__2 : int(1..0)
                                 . pain_tuple2_Explicit§regionS[v__3, v__2]
                                   <
                                   pain_tuple2_Explicit§regionS[v__3, v__2 + 1])
[applied] pain_tuple2§region1#Explicit[1] = {8}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple2§region1#Explicit[1] subsetEq {8}
              /\
              pain_tuple2§region1#Explicit[1] supsetEq {8}
[applied] pain_tuple2§region1#Explicit[1] subsetEq {8}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__7 in pain_tuple2§region1#Explicit[1] . v__7 in {8})
[applied] v__7 in {8}
          {rules/refns/set-in-to-quantified.rule}
              8 = v__7
[simplified] 8
             ~~>
             8
[applied] (forAll v__7 in pain_tuple2§region1#Explicit[1] . 8 = v__7)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__9 : int(1..1) . 8 = pain_tuple2_Explicit§region1[1, v__9])
[applied] pain_tuple2§region1#Explicit[1] supsetEq {8}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {8} subsetEq pain_tuple2§region1#Explicit[1]
[applied] {8} subsetEq pain_tuple2§region1#Explicit[1]
          {rules/refns/set-subseteq-to-quantified.rule}
              8 in pain_tuple2§region1#Explicit[1]
[applied] 8 in pain_tuple2§region1#Explicit[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__11 in pain_tuple2§region1#Explicit[1] . v__11 = 8)
[applied] (exists v__11 in pain_tuple2§region1#Explicit[1] . v__11 = 8)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__12 : int(1..1) . pain_tuple2_Explicit§region1[1, v__12] = 8)
[applied] pain_tuple2§region2#Explicit[2] = {9}
          {rules/refns/set-eq-to-subsets.rule}
              pain_tuple2§region2#Explicit[2] subsetEq {9}
              /\
              pain_tuple2§region2#Explicit[2] supsetEq {9}
[applied] pain_tuple2§region2#Explicit[2] subsetEq {9}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__13 in pain_tuple2§region2#Explicit[2] . v__13 in {9})
[applied] v__13 in {9}
          {rules/refns/set-in-to-quantified.rule}
              9 = v__13
[simplified] 9
             ~~>
             9
[applied] (forAll v__13 in pain_tuple2§region2#Explicit[2] . 9 = v__13)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__15 : int(1..1) . 9 = pain_tuple2_Explicit§region2[2, v__15])
[applied] pain_tuple2§region2#Explicit[2] supsetEq {9}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {9} subsetEq pain_tuple2§region2#Explicit[2]
[applied] {9} subsetEq pain_tuple2§region2#Explicit[2]
          {rules/refns/set-subseteq-to-quantified.rule}
              9 in pain_tuple2§region2#Explicit[2]
[applied] 9 in pain_tuple2§region2#Explicit[2]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__17 in pain_tuple2§region2#Explicit[2] . v__17 = 9)
[applied] (exists v__17 in pain_tuple2§region2#Explicit[2] . v__17 = 9)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__18 : int(1..1) . pain_tuple2_Explicit§region2[2, v__18] = 9)
[removedDecl] find pain_tuple2:
                      matrix indexed by [int(1..2)] of set (size 1) of int(8, 9)
[addSlicing] pain_tuple2_Explicit[v__3] pain_tuple2_Explicit[v__3, ..]