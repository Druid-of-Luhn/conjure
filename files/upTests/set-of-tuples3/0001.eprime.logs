[useChannelling] True
[representation] find x: set (minSize 1) of tuple (set (size 2) of int(6, 7))
                 (#1)
                 Set~ExplicitVarSize
[configuration] x§region1#Set~ExplicitVarSize
[addedDecl] find x_Set~ExplicitVarSize:
                    matrix indexed by [int(1..1)] of (bool, tuple (set (size 2) of int(6, 7)))
[refn] 0
[applied] tuple ({6, 7}) in x§region1#Set~ExplicitVarSize
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__3 in x§region1#Set~ExplicitVarSize . v__3[1] = {6, 7})
[applied] v__3[1] = {6, 7}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              v__3[1] subsetEq {6, 7} /\ v__3[1] supsetEq {6, 7}
[applied] v__3[1] subsetEq {6, 7}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__4 in v__3[1] . v__4 in {6, 7})
[applied] v__4 in {6, 7}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              6 = v__4 \/ 7 = v__4
[applied] v__3[1] supsetEq {6, 7}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {6, 7} subsetEq v__3[1]
[applied] {6, 7} subsetEq v__3[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              6 in v__3[1] /\ 7 in v__3[1]
[applied] 6 in v__3[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__7 in v__3[1] . v__7 = 6)
[applied] 7 in v__3[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__8 in v__3[1] . v__8 = 7)
[applied] (exists v__3 in x§region1#Set~ExplicitVarSize
               . (forAll v__4 in v__3[1] . 6 = v__4 \/ 7 = v__4)
                 /\
                 ((exists v__7 in v__3[1] . v__7 = 6) /\ (exists v__8 in v__3[1] . v__8 = 7)))
          {rules/refns/vertical/Set~ExplicitVarSize/quantified.rule}
              x_Set~ExplicitVarSize§region1[1, 1]
              /\
              ((forAll v__4 in x_Set~ExplicitVarSize§region1[1, 2, 1] . 6 = v__4 \/ 7 = v__4)
               /\
               ((exists v__7 in x_Set~ExplicitVarSize§region1[1, 2, 1] . v__7 = 6)
                /\
                (exists v__8 in x_Set~ExplicitVarSize§region1[1, 2, 1] . v__8 = 7)))
[removeRefinedDecl] find x: set (minSize 1) of tuple (set (size 2) of int(6, 7))
[removedDecl] find x_Set~ExplicitVarSize:
                      matrix indexed by [int(1..1)] of (bool, tuple (set (size 2) of int(6, 7)))
[matrixToTuple] x_Set~ExplicitVarSize∑1
[removedDecl] find x_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..1)] of tuple (set (size 2) of int(6, 7))
[matrixToTuple] x_Set~ExplicitVarSize_tuple2∑1
[repr] 1
[representation] find x_Set~ExplicitVarSize_tuple2_tuple1:
                         matrix indexed by [int(1..1)] of set (size 2) of int(6, 7)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] x_Set~ExplicitVarSize_tuple2_tuple1§region1#Set~Explicit
[addedDecl] find x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit:
                    matrix indexed by [int(1..1), int(1..2)] of int(6, 7)
[refn] 1
[applied] (forAll v__0 in x_Set~ExplicitVarSize_tuple2_tuple1§region1#Set~Explicit[1]
               . 6 = v__0 \/ 7 = v__0)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__16 : int(1..2)
                   . 6 = x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, v__16]
                     \/
                     7 = x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, v__16])
[applied] (exists v__0 in x_Set~ExplicitVarSize_tuple2_tuple1§region1#Set~Explicit[1]
               . v__0 = 6)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__17 : int(1..2)
                   . x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, v__17] = 6)
[applied] (exists v__0 in x_Set~ExplicitVarSize_tuple2_tuple1§region1#Set~Explicit[1]
               . v__0 = 7)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__18 : int(1..2)
                   . x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, v__18] = 7)
[applied] x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, 1]
          .<
          x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, 1]
              <
              x_Set~ExplicitVarSize_tuple2_tuple1_Set~Explicit§region1[1, 2]
[removeRefinedDecl] find x_Set~ExplicitVarSize_tuple2_tuple1:
                            matrix indexed by [int(1..1)] of set (size 2) of int(6, 7)
[repr] 2