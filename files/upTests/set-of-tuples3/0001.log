[representation] find x: set (minSize 1) of tuple (set (size 2) of int(6, 7))
                 (#1)
                 ExplicitVarSize
[configuration] x§region1#ExplicitVarSize
[addedDecl] find x_ExplicitVarSize:
                    matrix indexed by [int(1..2 ** (1 + 1))] of (bool,
                                                                 tuple (set (size 2) of int(6, 7)))
[simplified] 1 + 1
             ~~>
             2
[simplified] 2 ** 2
             ~~>
             4
[applied] tuple ({6, 7}) in x§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__4 in x§region1#ExplicitVarSize . v__4[1] = tuple ({6, 7})[1])
[simplified] tuple ({6, 7})[1]
             ~~>
             {6, 7}
[applied] v__4[1] = {6, 7}
          {rules/refns/set-eq-to-subsets.rule}
              v__4[1] subsetEq {6, 7} /\ v__4[1] supsetEq {6, 7}
[applied] v__4[1] subsetEq {6, 7}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__5 in v__4[1] . v__5 in {6, 7})
[applied] v__5 in {6, 7}
          {rules/refns/set-in-to-quantified.rule}
              false \/ 6 = v__5 \/ 7 = v__5
[simplified] 6
             ~~>
             6
[simplified] false \/ 6 = v__5
             ~~>
             6 = v__5
[simplified] 7
             ~~>
             7
[applied] v__4[1] supsetEq {6, 7}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {6, 7} subsetEq v__4[1]
[applied] {6, 7} subsetEq v__4[1]
          {rules/refns/set-subseteq-to-quantified.rule}
              true /\ 6 in v__4[1] /\ 7 in v__4[1]
[applied] 6 in v__4[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__8 in v__4[1] . v__8 = 6)
[simplified] true /\ (exists v__8 in v__4[1] . v__8 = 6)
             ~~>
             (exists v__8 in v__4[1] . v__8 = 6)
[applied] 7 in v__4[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__9 in v__4[1] . v__9 = 7)
[applied] (exists v__4 in x§region1#ExplicitVarSize
               . (forAll v__5 in v__4[1] . 6 = v__5 \/ 7 = v__5)
                 /\
                 ((exists v__8 in v__4[1] . v__8 = 6) /\ (exists v__9 in v__4[1] . v__9 = 7)))
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__10 : int(1..4) , x_ExplicitVarSize§region1[v__10, 1]
                   . (forAll v__5 in x_ExplicitVarSize§region1[v__10, 2, 1] . 6 = v__5 \/ 7 = v__5)
                     /\
                     ((exists v__8 in x_ExplicitVarSize§region1[v__10, 2, 1] . v__8 = 6)
                      /\
                      (exists v__9 in x_ExplicitVarSize§region1[v__10, 2, 1] . v__9 = 7)))
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          !=
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-neq-to-eq.rule}
              !(x_ExplicitVarSize§regionS[v__1, 2, 1] = x_ExplicitVarSize§regionS[v__2, 2, 1])
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          =
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-eq-to-subsets.rule}
              x_ExplicitVarSize§regionS[v__1, 2, 1]
              subsetEq
              x_ExplicitVarSize§regionS[v__2, 2, 1]
              /\
              x_ExplicitVarSize§regionS[v__1, 2, 1]
              supsetEq
              x_ExplicitVarSize§regionS[v__2, 2, 1]
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          subsetEq
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__11 in x_ExplicitVarSize§regionS[v__1, 2, 1]
                   . v__11 in x_ExplicitVarSize§regionS[v__2, 2, 1])
[applied] v__11 in x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__12 in x_ExplicitVarSize§regionS[v__2, 2, 1] . v__12 = v__11)
[applied] x_ExplicitVarSize§regionS[v__1, 2, 1]
          supsetEq
          x_ExplicitVarSize§regionS[v__2, 2, 1]
          {rules/refns/set-supseteq-to-subseteq.rule}
              x_ExplicitVarSize§regionS[v__2, 2, 1]
              subsetEq
              x_ExplicitVarSize§regionS[v__1, 2, 1]
[applied] x_ExplicitVarSize§regionS[v__2, 2, 1]
          subsetEq
          x_ExplicitVarSize§regionS[v__1, 2, 1]
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__13 in x_ExplicitVarSize§regionS[v__2, 2, 1]
                   . v__13 in x_ExplicitVarSize§regionS[v__1, 2, 1])
[applied] v__13 in x_ExplicitVarSize§regionS[v__1, 2, 1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__14 in x_ExplicitVarSize§regionS[v__1, 2, 1] . v__14 = v__13)
[simplified] 4 - 1
             ~~>
             3
[removedDecl] find x_ExplicitVarSize:
                      matrix indexed by [int(1..4)] of (bool, tuple (set (size 2) of int(6, 7)))
[removedDecl] find x_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..4)] of tuple (set (size 2) of int(6, 7))
[removedDecl] find x: set (minSize 1) of tuple (set (size 2) of int(6, 7))
[representation] find x_ExplicitVarSize_tuple2_tuple1:
                         matrix indexed by [int(1..4)] of set (size 2) of int(6, 7)
                 (#2)
                 Explicit, Occurrence
[configuration] x_ExplicitVarSize_tuple2_tuple1§region1#Explicit x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit
[addedDecl] find x_ExplicitVarSize_tuple2_tuple1_Explicit:
                    matrix indexed by [int(1..4), int(1..2)] of int(6, 7)
[applied] (forAll v__5 in x_ExplicitVarSize_tuple2_tuple1§region1#Explicit[v__10]
               . 6 = v__5 \/ 7 = v__5)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__21 : int(1..2)
                   . 6 = x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__10, v__21]
                     \/
                     7 = x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__10, v__21])
[applied] (exists v__8 in x_ExplicitVarSize_tuple2_tuple1§region1#Explicit[v__10]
               . v__8 = 6)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__22 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__10, v__22] = 6)
[applied] (exists v__9 in x_ExplicitVarSize_tuple2_tuple1§region1#Explicit[v__10]
               . v__9 = 7)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__23 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§region1[v__10, v__23] = 7)
[applied] (exists v__12 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__2]
               . v__12 = v__11)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__24 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__24] = v__11)
[applied] (forAll v__11 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__1]
               . (exists v__24 : int(1..2)
                      . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__24] = v__11))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__25 : int(1..2)
                   . (exists v__24 : int(1..2)
                          . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__24]
                            =
                            x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__25]))
[applied] (exists v__14 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__1]
               . v__14 = v__13)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__26 : int(1..2)
                   . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__26] = v__13)
[applied] (forAll v__13 in x_ExplicitVarSize_tuple2_tuple1§regionS#Explicit[v__2]
               . (exists v__26 : int(1..2)
                      . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__26] = v__13))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__27 : int(1..2)
                   . (exists v__26 : int(1..2)
                          . x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__1, v__26]
                            =
                            x_ExplicitVarSize_tuple2_tuple1_Explicit§regionS[v__2, v__27]))
[removedDecl] find x_ExplicitVarSize_tuple2_tuple1:
                      matrix indexed by [int(1..4)] of set (size 2) of int(6, 7)
[addSlicing] x_ExplicitVarSize_tuple2_tuple1_Explicit[v__17]
             x_ExplicitVarSize_tuple2_tuple1_Explicit[v__17, ..]