language ESSENCE' 1.0

given n: int
find x_SetExplicitVarSizeWithDefault:
        matrix indexed by [int(1..2)] of int(-1..10 + n)
find aux__7: int(0..10 + n)
such that
    x_SetExplicitVarSizeWithDefault[1] != -1
    /\
    x_SetExplicitVarSizeWithDefault[2] != -1
    ->
    x_SetExplicitVarSizeWithDefault[1] < x_SetExplicitVarSizeWithDefault[2],
    8 < aux__7,
    x_SetExplicitVarSizeWithDefault[1] <= x_SetExplicitVarSizeWithDefault[2],
    exists v__0 : int(1..2)
        . x_SetExplicitVarSizeWithDefault[v__0] != -1
          /\
          x_SetExplicitVarSizeWithDefault[v__0] = aux__7,
    exists v__0 : int(1..2)
        . x_SetExplicitVarSizeWithDefault[v__0] != -1
          /\
          x_SetExplicitVarSizeWithDefault[v__0] = 2,
    forAll v__0 : int(1..2)
        . x_SetExplicitVarSizeWithDefault[v__0] != -1
          ->
          x_SetExplicitVarSizeWithDefault[v__0] <= aux__7
