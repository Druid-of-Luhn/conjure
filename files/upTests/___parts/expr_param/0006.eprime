language ESSENCE' 1.0

given n: int
find x_SetExplicitVarSizeWithDefault:
        matrix indexed by [int(1..2)] of int(-1..10 + n)
find x_SetOccurrence: matrix indexed by [int(0..10 + n)] of bool
find aux__5: int(0..10 + n)
such that
    x_SetExplicitVarSizeWithDefault[1] != -1
    /\
    x_SetExplicitVarSizeWithDefault[2] != -1
    ->
    x_SetExplicitVarSizeWithDefault[1] < x_SetExplicitVarSizeWithDefault[2],
    8 < aux__5,
    x_SetExplicitVarSizeWithDefault[1] <= x_SetExplicitVarSizeWithDefault[2],
    (sum v__0 : int(0..10 + n) . x_SetOccurrence[v__0]) <= 2,
    x_SetOccurrence[2] = true,
    exists v__0 : int(1..2)
        . x_SetExplicitVarSizeWithDefault[v__0] != -1
          /\
          x_SetExplicitVarSizeWithDefault[v__0] = aux__5,
    forAll v__0 : int(0..10 + n)
        . (exists v__1 : int(1..2)
               . x_SetExplicitVarSizeWithDefault[v__1] != -1
                 /\
                 x_SetExplicitVarSizeWithDefault[v__1] = v__0)
          <->
          x_SetOccurrence[v__0] = true,
    forAll v__0 : int(1..2)
        . x_SetExplicitVarSizeWithDefault[v__0] != -1
          ->
          x_SetExplicitVarSizeWithDefault[v__0] <= aux__5
