[useChannelling] True
[representation] find x: set (maxSize 2) of int(0..10 + n)
                 (#3)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~Occurrence
[configuration] x§region1#Set~Occurrence x§region2#Set~ExplicitVarSizeWithDefault
[addedDecl] find x_Set~ExplicitVarSizeWithDefault:
                    matrix indexed by [int(1..2)] of int(-1..10 + n)
[addedDecl] find x_Set~Occurrence: matrix indexed by [int(0..10 + n)] of bool
[refn] 0
[applied] 2 in x§region1#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              x_Set~Occurrence§region1[2] = true
[applied] max(x§region2#Set~ExplicitVarSizeWithDefault)
          {rules/refns/horizontal/set-max.rule}
              (aux__5§regionS @ find aux__5: int(0..10 + n)
                                such that
                                    forAll v__4 in x§region2#Set~ExplicitVarSizeWithDefault . v__4 <= aux__5§regionS
                                such that aux__5§regionS in x§region2#Set~ExplicitVarSizeWithDefault)
[applied] (forAll v__4 in x§region2#Set~ExplicitVarSizeWithDefault
               . v__4 <= aux__5§regionS)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (forAll v__6 : int(1..2) , x_Set~ExplicitVarSizeWithDefault§region2[v__6] != -1
                   . x_Set~ExplicitVarSizeWithDefault§region2[v__6] <= aux__5§regionS)
[applied] aux__5§regionS in x§region2#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__7 in x§region2#Set~ExplicitVarSizeWithDefault
                   . v__7 = aux__5§regionS)
[applied] (exists v__7 in x§region2#Set~ExplicitVarSizeWithDefault
               . v__7 = aux__5§regionS)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__8 : int(1..2) , x_Set~ExplicitVarSizeWithDefault§region2[v__8] != -1
                   . x_Set~ExplicitVarSizeWithDefault§region2[v__8] = aux__5§regionS)
[applied] x#Set~ExplicitVarSizeWithDefault = x#Set~Occurrence
          {rules/refns/horizontal/set-eq-better.rule}
              (forAll v__9 : int(0..10 + n)
                   . v__9 in x#Set~ExplicitVarSizeWithDefault <-> v__9 in x#Set~Occurrence)
              /\
              (forAll v__9 : int(0..10 + n)
                   . v__9 in x#Set~ExplicitVarSizeWithDefault <-> v__9 in x#Set~Occurrence)
[applied] v__9 in x#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__10 in x#Set~ExplicitVarSizeWithDefault . v__10 = v__9)
[applied] (exists v__10 in x#Set~ExplicitVarSizeWithDefault . v__10 = v__9)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__11 : int(1..2) , x_Set~ExplicitVarSizeWithDefault[v__11] != -1
                   . x_Set~ExplicitVarSizeWithDefault[v__11] = v__9)
[applied] v__9 in x#Set~Occurrence
          {rules/refns/vertical/Set~Occurrence/in.rule}
              x_Set~Occurrence[v__9] = true
[applied] v__9 in x#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__12 in x#Set~ExplicitVarSizeWithDefault . v__12 = v__9)
[applied] (exists v__12 in x#Set~ExplicitVarSizeWithDefault . v__12 = v__9)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__13 : int(1..2) , x_Set~ExplicitVarSizeWithDefault[v__13] != -1
                   . x_Set~ExplicitVarSizeWithDefault[v__13] = v__9)
[removeRefinedDecl] find x: set (maxSize 2) of int(0..10 + n)
[repr] 1