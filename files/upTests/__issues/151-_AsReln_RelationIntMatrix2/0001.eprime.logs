[useChannelling] True
[representation] find seq: function (total) int(1..3) --> int(-1, 1)
                 (#2)
                 AsReln, Matrix1D
[configuration] seq§region1#AsReln
[addedDecl] find seq_AsReln: relation of (int(1..3) * int(-1, 1))
[refn] 0
[applied] seq§region1#AsReln = function(1 --> -1, 2 --> -1, 3 --> 1)
          {rules/refns/horizontal/function-eq.rule}
              (forAll v__3 in defined(seq§region1#AsReln)
                   . seq§region1#AsReln(v__3) = function(1 --> -1, 2 --> -1, 3 --> 1)(v__3))
[applied] seq§region1#AsReln(v__3)
          {rules/refns/vertical/function-asreln/function-asreln-image-int.rule}
              (sum v__4 in toSet(seq_AsReln§region1) , v__4[1] = v__3 . v__4[2])
[applied] function(1 --> -1, 2 --> -1, 3 --> 1)(v__3)
          {builtIn.functionLiteralApply}
              toInt(1 = v__3) * -1 + toInt(2 = v__3) * -1 + toInt(3 = v__3)
[applied] (forAll v__3 in defined(seq§region1#AsReln)
               . (sum v__4 in toSet(seq_AsReln§region1) , v__4[1] = v__3 . v__4[2])
                 =
                 toInt(1 = v__3) * -1 + toInt(2 = v__3) * -1 + toInt(3 = v__3))
          {rules/refns/horizontal/function-defined-quantified.rule}
              (forAll v__6 in toSet(seq§region1#AsReln)
                   . (sum v__4 in toSet(seq_AsReln§region1) , v__4[1] = v__6[1] . v__4[2])
                     =
                     toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]) * -1 + toInt(3 = v__6[1]))
[applied] (forAll v__6 in toSet(seq§region1#AsReln)
               . (sum v__4 in toSet(seq_AsReln§region1) , v__4[1] = v__6[1] . v__4[2])
                 =
                 toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]) * -1 + toInt(3 = v__6[1]))
          {rules/refns/vertical/function-asreln/function-toSet-quantified.rule}
              (forAll v__6 in toSet(seq_AsReln§region1)
                   . (sum v__4 in toSet(seq_AsReln§region1) , v__4[1] = v__6[1] . v__4[2])
                     =
                     toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]) * -1 + toInt(3 = v__6[1]))
[removeRefinedDecl] find seq: function (total) int(1..3) --> int(-1, 1)
[repr] 1
[representation] find seq_AsReln: relation of (int(1..3) * int(-1, 1))
                 (#2)
                 RelationIntMatrix2, RelationAsSet
[configuration] seq_AsReln§region1#RelationIntMatrix2
[addedDecl] find seq_AsReln_RelationIntMatrix2:
                    matrix indexed by [int(1..3), int(-1, 1)] of bool
[refn] 1
[applied] (sum v__4 in toSet(seq_AsReln§region1#RelationIntMatrix2)
               , v__4[1] = v__6[1]
               . v__4[2])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__7 : int(1..3)
                   . (sum v__8 : int(-1, 1)
                          , v__7 = v__6[1] /\ seq_AsReln_RelationIntMatrix2§region1[v__7, v__8]
                          . v__8))
[applied] (forAll v__6 in toSet(seq_AsReln§region1#RelationIntMatrix2)
               . (sum v__7 : int(1..3)
                      . (sum v__8 : int(-1, 1)
                             , v__7 = v__6[1] /\ seq_AsReln_RelationIntMatrix2§region1[v__7, v__8]
                             . v__8))
                 =
                 toInt(1 = v__6[1]) * -1 + toInt(2 = v__6[1]) * -1 + toInt(3 = v__6[1]))
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (forAll v__9 : int(1..3)
                   . (forAll v__10 : int(-1, 1)
                          , seq_AsReln_RelationIntMatrix2§region1[v__9, v__10]
                          . (sum v__7 : int(1..3)
                                 . (sum v__8 : int(-1, 1)
                                        , v__7 = v__9 /\ seq_AsReln_RelationIntMatrix2§region1[v__7, v__8]
                                        . v__8))
                            =
                            toInt(1 = v__9) * -1 + toInt(2 = v__9) * -1 + toInt(3 = v__9)))
[applied] (sum v__2 in toSet(seq_AsReln§region1#RelationIntMatrix2)
               . v__1 = v__2[1])
          {rules/refns/vertical/relation-IntMatrix2/relation-IntMatrix2-toSet.rule}
              (sum v__11 : int(1..3)
                   . (sum v__12 : int(-1, 1) , seq_AsReln_RelationIntMatrix2§region1[v__11, v__12]
                          . v__1 = v__11))
[removeRefinedDecl] find seq_AsReln: relation of (int(1..3) * int(-1, 1))
[repr] 2