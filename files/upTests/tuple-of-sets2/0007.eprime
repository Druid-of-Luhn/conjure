language ESSENCE' 1.0

find a_tuple1: int(0..9)
find b_tuple1: int(0..9)
find b_tuple2: int(3..8)
find b_tuple3_SetOccurrence: matrix indexed by [int(3..4)] of bool
find c_tuple1: int(0..9)
find c_tuple2_SetExplicitVarSize_tuple1: matrix indexed by [int(1..2)] of bool
find c_tuple2_SetExplicitVarSize_tuple2:
        matrix indexed by [int(1..2)] of int(3..4)
such that
    c_tuple2_SetExplicitVarSize_tuple1[1] /\ c_tuple2_SetExplicitVarSize_tuple1[2]
    ->
    c_tuple2_SetExplicitVarSize_tuple2[1] < c_tuple2_SetExplicitVarSize_tuple2[2],
    c_tuple2_SetExplicitVarSize_tuple1[1] <= c_tuple2_SetExplicitVarSize_tuple1[2],
    c_tuple1 = a_tuple1,
    forAll v__0 : int(3..4)
        . (exists v__1 : int(1..2)
               . c_tuple2_SetExplicitVarSize_tuple1[v__1]
                 /\
                 c_tuple2_SetExplicitVarSize_tuple2[v__1] = v__0)
          <->
          b_tuple3_SetOccurrence[v__0] = true
