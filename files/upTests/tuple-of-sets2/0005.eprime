language ESSENCE' 1.0

find a_tuple1: int(0..9)
find b_tuple1: int(0..9)
find b_tuple2: int(3..8)
find b_tuple3_SetExplicitVarSizeWithDefault:
        matrix indexed by [int(1..2)] of int(3..5)
find c_tuple1: int(0..9)
find c_tuple2_SetExplicitVarSizeWithDefault:
        matrix indexed by [int(1..2)] of int(3..5)
such that
    b_tuple3_SetExplicitVarSizeWithDefault[1] != 5
    /\
    b_tuple3_SetExplicitVarSizeWithDefault[2] != 5
    ->
    b_tuple3_SetExplicitVarSizeWithDefault[1]
    <
    b_tuple3_SetExplicitVarSizeWithDefault[2],
    c_tuple2_SetExplicitVarSizeWithDefault[1] != 5
    /\
    c_tuple2_SetExplicitVarSizeWithDefault[2] != 5
    ->
    c_tuple2_SetExplicitVarSizeWithDefault[1]
    <
    c_tuple2_SetExplicitVarSizeWithDefault[2],
    b_tuple3_SetExplicitVarSizeWithDefault[1]
    <=
    b_tuple3_SetExplicitVarSizeWithDefault[2],
    c_tuple2_SetExplicitVarSizeWithDefault[1]
    <=
    c_tuple2_SetExplicitVarSizeWithDefault[2],
    c_tuple1 = a_tuple1,
    forAll v__0 : int(3..4)
        . (exists v__1 : int(1..2)
               . c_tuple2_SetExplicitVarSizeWithDefault[v__1] != 5
                 /\
                 c_tuple2_SetExplicitVarSizeWithDefault[v__1] = v__0)
          <->
          (exists v__1 : int(1..2)
               . b_tuple3_SetExplicitVarSizeWithDefault[v__1] != 5
                 /\
                 b_tuple3_SetExplicitVarSizeWithDefault[v__1] = v__0)
