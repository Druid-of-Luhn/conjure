[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1)] of (int(2),
                                                     (int(1), int(9), int(3), int(4)),
                                                     (int(5), int(6), int(7), int(8)),
                                                     ((int(10), int(11)), int(12)),
                                                     int(14),
                                                     set (size 1) of (int(15), int(16)))
[matrixToTuple] pain∑1
[removedDecl] find pain_tuple2:
                      matrix indexed by [int(1)] of (int(1), int(9), int(3), int(4))
[matrixToTuple] pain_tuple2∑1
[removedDecl] find pain_tuple3:
                      matrix indexed by [int(1)] of (int(5), int(6), int(7), int(8))
[matrixToTuple] pain_tuple3∑1
[removedDecl] find pain_tuple4:
                      matrix indexed by [int(1)] of ((int(10), int(11)), int(12))
[matrixToTuple] pain_tuple4∑1
[removedDecl] find pain_tuple4_tuple1:
                      matrix indexed by [int(1)] of (int(10), int(11))
[matrixToTuple] pain_tuple4_tuple1∑1
[representation] find pain_tuple6:
                         matrix indexed by [int(1)] of set (size 1) of (int(15), int(16))
                 (#1)
                 Set~Explicit
[configuration] pain_tuple6§region1#Set~Explicit
[addedDecl] find pain_tuple6_Set~Explicit:
                    matrix indexed by [int(1), int(1..1)] of (int(15), int(16))
[refn] 0
[applied] pain_tuple6§region1#Set~Explicit[1] = {(15, 16)}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple6§region1#Set~Explicit[1] subsetEq {(15, 16)}
              /\
              pain_tuple6§region1#Set~Explicit[1] supsetEq {(15, 16)}
[applied] pain_tuple6§region1#Set~Explicit[1] subsetEq {(15, 16)}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__4 in pain_tuple6§region1#Set~Explicit[1] . v__4 in {(15, 16)})
[applied] v__4 in {(15, 16)}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              15 = v__4[1] /\ 16 = v__4[2]
[applied] (forAll v__4 in pain_tuple6§region1#Set~Explicit[1]
               . 15 = v__4[1] /\ 16 = v__4[2])
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              15 = pain_tuple6_Set~Explicit§region1[1, 1, 1]
              /\
              16 = pain_tuple6_Set~Explicit§region1[1, 1, 2]
[applied] pain_tuple6§region1#Set~Explicit[1] supsetEq {(15, 16)}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {(15, 16)} subsetEq pain_tuple6§region1#Set~Explicit[1]
[applied] {(15, 16)} subsetEq pain_tuple6§region1#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (15, 16) in pain_tuple6§region1#Set~Explicit[1]
[applied] (15, 16) in pain_tuple6§region1#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__8 in pain_tuple6§region1#Set~Explicit[1]
                   . v__8[1] = 15 /\ v__8[2] = 16)
[applied] (exists v__8 in pain_tuple6§region1#Set~Explicit[1]
               . v__8[1] = 15 /\ v__8[2] = 16)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple6_Set~Explicit§region1[1, 1, 1] = 15
              /\
              pain_tuple6_Set~Explicit§region1[1, 1, 2] = 16
[removeRefinedDecl] find pain_tuple6:
                            matrix indexed by [int(1)] of set (size 1) of (int(15), int(16))
[removedDecl] find pain_tuple6_Set~Explicit:
                      matrix indexed by [int(1), int(1..1)] of (int(15), int(16))
[matrixToTuple] pain_tuple6_Set~Explicit∑2
[repr] 1