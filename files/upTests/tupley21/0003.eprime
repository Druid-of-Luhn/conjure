language ESSENCE' 1.0

find pain_tuple1_tuple1_tuple1_SetExplicit:
        matrix indexed by [int(1..2), int(3), int(1..1)] of int(1, 2)
find pain_tuple1_tuple1_tuple2_SetExplicit:
        matrix indexed by [int(1..2), int(3), int(1..1)] of int(4, 5)
find pain_tuple1_tuple1_tuple2_SetOccurrence:
        matrix indexed by [int(1..2), int(3), int(4, 5)] of bool
find pain_tuple1_tuple2: matrix indexed by [int(1..2), int(3)] of int(3, 6)
find pain_tuple2: matrix indexed by [int(1..2), int(3)] of int(8, 9)
such that
    pain_tuple1_tuple1_tuple1_SetExplicit[1, 3, 1] = 2,
    pain_tuple1_tuple1_tuple1_SetExplicit[2, 3, 1] = 1,
    pain_tuple1_tuple1_tuple2_SetExplicit[2, 3, 1] = 4,
    pain_tuple1_tuple1_tuple2_SetOccurrence[1, 3, 5] = true,
    pain_tuple1_tuple2[1, 3] = 3,
    pain_tuple1_tuple2[2, 3] = 6,
    pain_tuple2[1, 3] = 8,
    pain_tuple2[2, 3] = 9,
    1 = pain_tuple1_tuple1_tuple1_SetExplicit[2, 3, 1],
    2 = pain_tuple1_tuple1_tuple1_SetExplicit[1, 3, 1],
    4 = pain_tuple1_tuple1_tuple2_SetExplicit[2, 3, 1],
    forAll v__0 : int(1..2)
        . (forAll v__1 : int(3)
               . (forAll v__2 : int(4, 5)
                      . pain_tuple1_tuple1_tuple2_SetExplicit[v__0, v__1, 1] = v__2
                        <->
                        pain_tuple1_tuple1_tuple2_SetOccurrence[v__0, v__1, v__2] = true)
                 /\
                 (forAll v__2 : int(4, 5)
                      . pain_tuple1_tuple1_tuple2_SetExplicit[v__0, v__1, 1] = v__2
                        <->
                        pain_tuple1_tuple1_tuple2_SetOccurrence[v__0, v__1, v__2] = true)),
    forAll v__0 : int(1..2)
        . (forAll v__1 : int(3)
               . (sum v__2 : int(4, 5)
                      . pain_tuple1_tuple1_tuple2_SetOccurrence[v__0, v__1, v__2])
                 =
                 1),
    forAll v__0 : int(4, 5)
        . pain_tuple1_tuple1_tuple2_SetOccurrence[1, 3, v__0] -> 5 = v__0
