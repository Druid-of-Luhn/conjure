[representation] find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                              (int(4, 5, 6), int(7, 8, 9))
                 (#1)
                 ExplicitVarSize
[configuration] x§region1#ExplicitVarSize x§region2#ExplicitVarSize
[addedDecl] (find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                          (int(4, 5, 6), int(7, 8, 9)),
             find x_ExplicitVarSize:
                     matrix indexed by [int(1..2), int(1..(1 + (1 + 1)) * (1 + (1 + 1)))] of (bool,
                                                                                              (int(4, 5, 6),
                                                                                               int(7, 8, 9))))
[simplified] 1 + 1
             ~~>
             2
[simplified] 1 + 2
             ~~>
             3
[simplified] 3 * 3
             ~~>
             9
[applied] (4, 7) in x§region1#ExplicitVarSize[1]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__8 in x§region1#ExplicitVarSize[1]
                   . v__8[1] = (4, 7)[1] /\ v__8[2] = (4, 7)[2])
[simplified] (4, 7)[1]
             ~~>
             4
[simplified] (4, 7)[2]
             ~~>
             7
[applied] (exists v__8 in x§region1#ExplicitVarSize[1]
               . v__8[1] = 4 /\ v__8[2] = 7)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__9 : int(1..9) , x_ExplicitVarSize§region1[1, v__9, 1]
                   . x_ExplicitVarSize§region1[1, v__9, 2, 1] = 4
                     /\
                     x_ExplicitVarSize§region1[1, v__9, 2, 2] = 7)
[applied] x§region2#ExplicitVarSize[2] = {(5, 8), (6, 9)}
          {rules/refns/set-eq-to-subsets.rule}
              x§region2#ExplicitVarSize[2] subsetEq {(5, 8), (6, 9)}
              /\
              x§region2#ExplicitVarSize[2] supsetEq {(5, 8), (6, 9)}
[applied] x§region2#ExplicitVarSize[2] subsetEq {(5, 8), (6, 9)}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__10 in x§region2#ExplicitVarSize[2] . v__10 in {(5, 8), (6, 9)})
[applied] v__10 in {(5, 8), (6, 9)}
          {rules/refns/set-in-to-quantified.rule}
              false \/ (5, 8)[1] = v__10[1] /\ (5, 8)[2] = v__10[2]
              \/
              (6, 9)[1] = v__10[1] /\ (6, 9)[2] = v__10[2]
[simplified] (5, 8)
             ~~>
             (5, 8)
[simplified] (5, 8)[1]
             ~~>
             5
[simplified] (5, 8)[2]
             ~~>
             8
[simplified] false \/ 5 = v__10[1] /\ 8 = v__10[2]
             ~~>
             5 = v__10[1] /\ 8 = v__10[2]
[simplified] (6, 9)
             ~~>
             (6, 9)
[simplified] (6, 9)[1]
             ~~>
             6
[simplified] (6, 9)[2]
             ~~>
             9
[applied] (forAll v__10 in x§region2#ExplicitVarSize[2]
               . 5 = v__10[1] /\ 8 = v__10[2] \/ 6 = v__10[1] /\ 9 = v__10[2])
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__12 : int(1..9) , x_ExplicitVarSize§region2[2, v__12, 1]
                   . 5 = x_ExplicitVarSize§region2[2, v__12, 2, 1]
                     /\
                     8 = x_ExplicitVarSize§region2[2, v__12, 2, 2]
                     \/
                     6 = x_ExplicitVarSize§region2[2, v__12, 2, 1]
                     /\
                     9 = x_ExplicitVarSize§region2[2, v__12, 2, 2])
[applied] x§region2#ExplicitVarSize[2] supsetEq {(5, 8), (6, 9)}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {(5, 8), (6, 9)} subsetEq x§region2#ExplicitVarSize[2]
[applied] {(5, 8), (6, 9)} subsetEq x§region2#ExplicitVarSize[2]
          {rules/refns/set-subseteq-to-quantified.rule}
              true /\ (5, 8) in x§region2#ExplicitVarSize[2]
              /\
              (6, 9) in x§region2#ExplicitVarSize[2]
[applied] (5, 8) in x§region2#ExplicitVarSize[2]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__14 in x§region2#ExplicitVarSize[2]
                   . v__14[1] = (5, 8)[1] /\ v__14[2] = (5, 8)[2])
[applied] (exists v__14 in x§region2#ExplicitVarSize[2]
               . v__14[1] = 5 /\ v__14[2] = 8)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__15 : int(1..9) , x_ExplicitVarSize§region2[2, v__15, 1]
                   . x_ExplicitVarSize§region2[2, v__15, 2, 1] = 5
                     /\
                     x_ExplicitVarSize§region2[2, v__15, 2, 2] = 8)
[simplified] true
             /\
             (exists v__15 : int(1..9) , x_ExplicitVarSize§region2[2, v__15, 1]
                  . x_ExplicitVarSize§region2[2, v__15, 2, 1] = 5
                    /\
                    x_ExplicitVarSize§region2[2, v__15, 2, 2] = 8)
             ~~>
             (exists v__15 : int(1..9) , x_ExplicitVarSize§region2[2, v__15, 1]
                  . x_ExplicitVarSize§region2[2, v__15, 2, 1] = 5
                    /\
                    x_ExplicitVarSize§region2[2, v__15, 2, 2] = 8)
[applied] (6, 9) in x§region2#ExplicitVarSize[2]
          {rules/refns/set-in-to-quantified.rule}
              (exists v__16 in x§region2#ExplicitVarSize[2]
                   . v__16[1] = (6, 9)[1] /\ v__16[2] = (6, 9)[2])
[applied] (exists v__16 in x§region2#ExplicitVarSize[2]
               . v__16[1] = 6 /\ v__16[2] = 9)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__17 : int(1..9) , x_ExplicitVarSize§region2[2, v__17, 1]
                   . x_ExplicitVarSize§region2[2, v__17, 2, 1] = 6
                     /\
                     x_ExplicitVarSize§region2[2, v__17, 2, 2] = 9)
[simplified] 9 - 1
             ~~>
             8
[from-cached] such that
                  forAll v__4 : int(1..2)
                      . (forAll v__2 : int(1..(1 + (1 + 1)) * (1 + (1 + 1)))
                             . (forAll v__3 : int(1..(1 + (1 + 1)) * (1 + (1 + 1)))
                                    , v__2 < v__3 /\ x_ExplicitVarSize§regionS[v__4, v__2, 1]
                                      /\
                                      x_ExplicitVarSize§regionS[v__4, v__3, 1]
                                    . x_ExplicitVarSize§regionS[v__4, v__2, 2, 1]
                                      !=
                                      x_ExplicitVarSize§regionS[v__4, v__3, 2, 1]
                                      \/
                                      x_ExplicitVarSize§regionS[v__4, v__2, 2, 2]
                                      !=
                                      x_ExplicitVarSize§regionS[v__4, v__3, 2, 2]))
                        /\
                        (forAll v__2 : int(1..(1 + (1 + 1)) * (1 + (1 + 1)) - 1)
                             . x_ExplicitVarSize§regionS[v__4, v__2, 1]
                               <=
                               x_ExplicitVarSize§regionS[v__4, v__2 + 1, 1])
              ~~>
              such that
                  forAll v__4 : int(1..2)
                      . (forAll v__2 : int(1..9)
                             . (forAll v__3 : int(1..9)
                                    , v__2 < v__3 /\ x_ExplicitVarSize§regionS[v__4, v__2, 1]
                                      /\
                                      x_ExplicitVarSize§regionS[v__4, v__3, 1]
                                    . x_ExplicitVarSize§regionS[v__4, v__2, 2, 1]
                                      !=
                                      x_ExplicitVarSize§regionS[v__4, v__3, 2, 1]
                                      \/
                                      x_ExplicitVarSize§regionS[v__4, v__2, 2, 2]
                                      !=
                                      x_ExplicitVarSize§regionS[v__4, v__3, 2, 2]))
                        /\
                        (forAll v__2 : int(1..8)
                             . x_ExplicitVarSize§regionS[v__4, v__2, 1]
                               <=
                               x_ExplicitVarSize§regionS[v__4, v__2 + 1, 1])
[from-cached] such that
                  forAll v__7 : int(1..2)
                      . (sum v__6 : int(1..(1 + (1 + 1)) * (1 + (1 + 1)))
                             . x_ExplicitVarSize§regionS[v__7, v__6, 1])
                        >=
                        1
              ~~>
              such that
                  forAll v__7 : int(1..2)
                      . (sum v__6 : int(1..9) . x_ExplicitVarSize§regionS[v__7, v__6, 1]) >= 1
[removedDecl] find x_ExplicitVarSize:
                      matrix indexed by [int(1..2), int(1..9)] of (bool, (int(4, 5, 6), int(7, 8, 9)))
[removedDecl] find x_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..2), int(1..9)] of (int(4, 5, 6), int(7, 8, 9))
[removedDecl] find x: matrix indexed by [int(1..2)] of set (minSize 1) of
                                                           (int(4, 5, 6), int(7, 8, 9))