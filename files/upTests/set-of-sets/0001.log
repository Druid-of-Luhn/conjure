[representation] find x: set (size 6) of set (size 4) of int(0..9) (#1) Explicit
[representation] find y: set (size 4) of int(2..7) (#2) Explicit, Occurrence
[configuration] x§region2#Explicit y§region1#Explicit
[addedDecl] (find x: set (size 6) of set (size 4) of int(0..9),
             find x_Explicit: matrix indexed by [int(1..6)] of set (size 4) of int(0..9))
[addedDecl] (find y: set (size 4) of int(2..7),
             find y_Explicit: matrix indexed by [int(1..4)] of int(2..7))
[applied] y§region1#Explicit in x§region2#Explicit
          {rules/refns/set-in-to-quantified.rule}
              (exists v__3 in x§region2#Explicit . v__3 = y§region1#Explicit)
[applied] v__3 = y§region1#Explicit
          {rules/refns/set-eq-to-subsets.rule}
              v__3 subsetEq y§region1#Explicit /\ v__3 supsetEq y§region1#Explicit
[applied] v__3 subsetEq y§region1#Explicit
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__4 in v__3 . v__4 in y§region1#Explicit)
[applied] v__4 in y§region1#Explicit
          {rules/refns/set-in-to-quantified.rule}
              (exists v__5 in y§region1#Explicit . v__5 = v__4)
[applied] (exists v__5 in y§region1#Explicit . v__5 = v__4)
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__6 : int(1..4) . y_Explicit§region1[v__6] = v__4)
[applied] v__3 supsetEq y§region1#Explicit
          {rules/refns/set-supseteq-to-subseteq.rule}
              y§region1#Explicit subsetEq v__3
[applied] y§region1#Explicit subsetEq v__3
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__7 in y§region1#Explicit . v__7 in v__3)
[applied] v__7 in v__3
          {rules/refns/set-in-to-quantified.rule}
              (exists v__8 in v__3 . v__8 = v__7)
[applied] (forAll v__7 in y§region1#Explicit
               . (exists v__8 in v__3 . v__8 = v__7))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__9 : int(1..4)
                   . (exists v__8 in v__3 . v__8 = y_Explicit§region1[v__9]))
[applied] (exists v__3 in x§region2#Explicit
               . (forAll v__4 in v__3
                      . (exists v__6 : int(1..4) . y_Explicit§region1[v__6] = v__4))
                 /\
                 (forAll v__9 : int(1..4)
                      . (exists v__8 in v__3 . v__8 = y_Explicit§region1[v__9])))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__10 : int(1..6)
                   . (forAll v__4 in x_Explicit§region2[v__10]
                          . (exists v__6 : int(1..4) . y_Explicit§region1[v__6] = v__4))
                     /\
                     (forAll v__9 : int(1..4)
                          . (exists v__8 in x_Explicit§region2[v__10] . v__8 = y_Explicit§region1[v__9])))
[removedDecl] find y: set (size 4) of int(2..7)
[removedDecl] find x: set (size 6) of set (size 4) of int(0..9)
[representation] find x_Explicit:
                         matrix indexed by [int(1..6)] of set (size 4) of int(0..9)
                 (#2)
                 Explicit, Occurrence
[configuration] x_Explicit§region2#Explicit
[addedDecl] (find x_Explicit:
                     matrix indexed by [int(1..6)] of set (size 4) of int(0..9),
             find x_Explicit_Explicit: matrix indexed by [int(1..6), int(1..4)] of int(0..9))
[applied] (forAll v__4 in x_Explicit§region2#Explicit[v__10]
               . (exists v__6 : int(1..4) . y_Explicit§region1[v__6] = v__4))
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (forAll v__17 : int(1..4)
                   . (exists v__6 : int(1..4)
                          . y_Explicit§region1[v__6] = x_Explicit_Explicit§region2[v__10, v__17]))
[applied] (exists v__8 in x_Explicit§region2#Explicit[v__10]
               . v__8 = y_Explicit§region1[v__9])
          {rules/refns/set-explicit/set-explicit-quantified.rule}
              (exists v__18 : int(1..4)
                   . x_Explicit_Explicit§region2[v__10, v__18] = y_Explicit§region1[v__9])
[removedDecl] find x_Explicit:
                      matrix indexed by [int(1..6)] of set (size 4) of int(0..9)
[addSlicing] x_Explicit_Explicit[v__13] x_Explicit_Explicit[v__13, ..]