[useChannelling] True
[representation] find x: set (size 6) of set (size 4) of int(0..9)
                 (#1)
                 Set~Explicit
[representation] find y: set (size 4) of int(2..7)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] y§region1#Set~Explicit x§region2#Set~Explicit
[addedDecl] find x_Set~Explicit:
                    matrix indexed by [int(1..6)] of set (size 4) of int(0..9)
[addedDecl] find y_Set~Explicit: matrix indexed by [int(1..4)] of int(2..7)
[refn] 0
[applied] y§region1#Set~Explicit in x§region2#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__4 in x§region2#Set~Explicit . v__4 = y§region1#Set~Explicit)
[applied] v__4 = y§region1#Set~Explicit
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              v__4 subsetEq y§region1#Set~Explicit /\ v__4 supsetEq y§region1#Set~Explicit
[applied] v__4 subsetEq y§region1#Set~Explicit
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__5 in v__4 . v__5 in y§region1#Set~Explicit)
[applied] v__5 in y§region1#Set~Explicit
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__6 in y§region1#Set~Explicit . v__6 = v__5)
[applied] (exists v__6 in y§region1#Set~Explicit . v__6 = v__5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__7 : int(1..4) . y_Set~Explicit§region1[v__7] = v__5)
[applied] v__4 supsetEq y§region1#Set~Explicit
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              y§region1#Set~Explicit subsetEq v__4
[applied] y§region1#Set~Explicit subsetEq v__4
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__8 in y§region1#Set~Explicit . v__8 in v__4)
[applied] v__8 in v__4
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__9 in v__4 . v__9 = v__8)
[applied] (forAll v__8 in y§region1#Set~Explicit
               . (exists v__9 in v__4 . v__9 = v__8))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__10 : int(1..4)
                   . (exists v__9 in v__4 . v__9 = y_Set~Explicit§region1[v__10]))
[applied] (exists v__4 in x§region2#Set~Explicit
               . (forAll v__5 in v__4
                      . (exists v__7 : int(1..4) . y_Set~Explicit§region1[v__7] = v__5))
                 /\
                 (forAll v__10 : int(1..4)
                      . (exists v__9 in v__4 . v__9 = y_Set~Explicit§region1[v__10])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__11 : int(1..6)
                   . (forAll v__5 in x_Set~Explicit§region2[v__11]
                          . (exists v__7 : int(1..4) . y_Set~Explicit§region1[v__7] = v__5))
                     /\
                     (forAll v__10 : int(1..4)
                          . (exists v__9 in x_Set~Explicit§region2[v__11]
                                 . v__9 = y_Set~Explicit§region1[v__10])))
[applied] y_Set~Explicit§region1[v__2] .< y_Set~Explicit§region1[v__2 + 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              y_Set~Explicit§region1[v__2] < y_Set~Explicit§region1[v__2 + 1]
[removeRefinedDecl] find x: set (size 6) of set (size 4) of int(0..9)
[removeRefinedDecl] find y: set (size 4) of int(2..7)
[repr] 1
[representation] find x_Set~Explicit:
                         matrix indexed by [int(1..6)] of set (size 4) of int(0..9)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] x_Set~Explicit§region1#Set~Explicit x_Set~Explicit§region2#Set~Explicit
[addedDecl] find x_Set~Explicit_Set~Explicit:
                    matrix indexed by [int(1..6), int(1..4)] of int(0..9)
[refn] 1
[applied] (forAll v__1 in x_Set~Explicit§region2#Set~Explicit[v__0]
               . (exists v__2 : int(1..4) . y_Set~Explicit§region1[v__2] = v__1))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__18 : int(1..4)
                   . (exists v__2 : int(1..4)
                          . y_Set~Explicit§region1[v__2]
                            =
                            x_Set~Explicit_Set~Explicit§region2[v__0, v__18]))
[applied] (exists v__2 in x_Set~Explicit§region2#Set~Explicit[v__0]
               . v__2 = y_Set~Explicit§region1[v__1])
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (exists v__19 : int(1..4)
                   . x_Set~Explicit_Set~Explicit§region2[v__0, v__19]
                     =
                     y_Set~Explicit§region1[v__1])
[applied] x_Set~Explicit§region2#Set~Explicit[v__0]
          .<
          x_Set~Explicit§region2#Set~Explicit[v__0 + 1]
          {rules/refns/vertical/Set~Explicit/DotLt.rule}
              x_Set~Explicit_Set~Explicit§region2[v__0]
              .<
              x_Set~Explicit_Set~Explicit§region2[v__0 + 1]
[applied] x_Set~Explicit_Set~Explicit§region1[v__13, v__14]
          .<
          x_Set~Explicit_Set~Explicit§region1[v__13, v__14 + 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~Explicit_Set~Explicit§region1[v__13, v__14]
              <
              x_Set~Explicit_Set~Explicit§region1[v__13, v__14 + 1]
[applied] x_Set~Explicit_Set~Explicit§region2[v__13, v__14]
          .<
          x_Set~Explicit_Set~Explicit§region2[v__13, v__14 + 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              x_Set~Explicit_Set~Explicit§region2[v__13, v__14]
              <
              x_Set~Explicit_Set~Explicit§region2[v__13, v__14 + 1]
[removeRefinedDecl] find x_Set~Explicit:
                            matrix indexed by [int(1..6)] of set (size 4) of int(0..9)
[repr] 2