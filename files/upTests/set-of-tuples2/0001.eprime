language ESSENCE' 1.0

find x_SetExplicitVarSize_tuple1: matrix indexed by [int(1..8)] of bool
find x_SetExplicitVarSize_tuple2_tuple1:
        matrix indexed by [int(1..8)] of int(2, 3)
find x_SetExplicitVarSize_tuple2_tuple2:
        matrix indexed by [int(1..8)] of int(4, 5)
find x_SetExplicitVarSize_tuple2_tuple3:
        matrix indexed by [int(1..8)] of int(6, 7)
such that
    (sum v__0 : int(1..8) . x_SetExplicitVarSize_tuple1[v__0]) >= 2,
    exists v__0 : int(1..8)
        . x_SetExplicitVarSize_tuple1[v__0]
          /\
          (x_SetExplicitVarSize_tuple2_tuple1[v__0] = 2
           /\
           (x_SetExplicitVarSize_tuple2_tuple2[v__0] = 4
            /\
            x_SetExplicitVarSize_tuple2_tuple3[v__0] = 6)),
    forAll v__0 : int(1..7)
        . x_SetExplicitVarSize_tuple1[v__0] /\ x_SetExplicitVarSize_tuple1[v__0 + 1]
          ->
          x_SetExplicitVarSize_tuple2_tuple1[v__0]
          <
          x_SetExplicitVarSize_tuple2_tuple1[v__0 + 1]
          \/
          x_SetExplicitVarSize_tuple2_tuple1[v__0]
          =
          x_SetExplicitVarSize_tuple2_tuple1[v__0 + 1]
          /\
          (x_SetExplicitVarSize_tuple2_tuple2[v__0]
           <
           x_SetExplicitVarSize_tuple2_tuple2[v__0 + 1]
           \/
           x_SetExplicitVarSize_tuple2_tuple2[v__0]
           =
           x_SetExplicitVarSize_tuple2_tuple2[v__0 + 1]
           /\
           x_SetExplicitVarSize_tuple2_tuple3[v__0]
           <
           x_SetExplicitVarSize_tuple2_tuple3[v__0 + 1]),
    forAll v__0 : int(1..7)
        . x_SetExplicitVarSize_tuple1[v__0] <= x_SetExplicitVarSize_tuple1[v__0 + 1]
