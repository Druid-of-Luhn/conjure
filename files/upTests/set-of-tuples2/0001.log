[representation] find x: set (minSize 2) of (int(2, 3), int(4, 5), int(6, 7))
                 (#1)
                 ExplicitVarSize
[configuration] x§region1#ExplicitVarSize
[addedDecl] (find x: set (minSize 2) of (int(2, 3), int(4, 5), int(6, 7)),
             find x_ExplicitVarSize:
                     matrix indexed by [int(1..(1 + 1) * ((1 + 1) * (1 + 1)))] of (bool,
                                                                                   (int(2, 3), int(4, 5), int(6, 7))))
[simplified] 1 + 1
             ~~>
             2
[from-cached] {-# left.binOp.operator := +
                  left.binOp.left.value.literal := 1
                  left.binOp.right.value.literal := 1 #-}
              ~~>
              {-# left.value.literal := 2 #-}
[simplified] 2 * 2
             ~~>
             4
[simplified] 2 * 4
             ~~>
             8
[applied] (2, 4, 6) in x§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__4 in x§region1#ExplicitVarSize
                   . v__4[1] = (2, 4, 6)[1] /\ (v__4[2] = (2, 4, 6)[2] /\ v__4[3] = (2, 4, 6)[3]))
[simplified] (2, 4, 6)[1]
             ~~>
             2
[simplified] (2, 4, 6)[2]
             ~~>
             4
[simplified] (2, 4, 6)[3]
             ~~>
             6
[applied] (exists v__4 in x§region1#ExplicitVarSize
               . v__4[1] = 2 /\ (v__4[2] = 4 /\ v__4[3] = 6))
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__5 : int(1..8) , x_ExplicitVarSize§region1[v__5, 1]
                   . x_ExplicitVarSize§region1[v__5, 2, 1] = 2
                     /\
                     (x_ExplicitVarSize§region1[v__5, 2, 2] = 4
                      /\
                      x_ExplicitVarSize§region1[v__5, 2, 3] = 6))
[simplified] 8 - 1
             ~~>
             7
[removedDecl] find x_ExplicitVarSize:
                      matrix indexed by [int(1..8)] of (bool, (int(2, 3), int(4, 5), int(6, 7)))
[removedDecl] find x_ExplicitVarSize_tuple2:
                      matrix indexed by [int(1..8)] of (int(2, 3), int(4, 5), int(6, 7))
[removedDecl] find x: set (minSize 2) of (int(2, 3), int(4, 5), int(6, 7))