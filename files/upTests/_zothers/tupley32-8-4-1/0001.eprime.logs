[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1)] of (int(1),
                                                     set (size 1) of
                                                         (matrix indexed by [int(1, 2)] of int(12), (int(14), int(15))))
[matrixToTuple] pain∑1
[representation] find pain_tuple2:
                         matrix indexed by [int(1)] of set (size 1) of
                                                           (matrix indexed by [int(1, 2)] of int(12),
                                                            (int(14), int(15)))
                 (#1)
                 Set~Explicit
[configuration] pain_tuple2§region1#Set~Explicit
[addedDecl] find pain_tuple2_Set~Explicit:
                    matrix indexed by [int(1), int(1..1)] of (matrix indexed by [int(1,
                                                                                     2)] of int(12),
                                                              (int(14), int(15)))
[refn] 0
[applied] pain_tuple2§region1#Set~Explicit[1] = {([12, 12], (14, 15))}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple2§region1#Set~Explicit[1] subsetEq {([12, 12], (14, 15))}
              /\
              pain_tuple2§region1#Set~Explicit[1] supsetEq {([12, 12], (14, 15))}
[applied] pain_tuple2§region1#Set~Explicit[1] subsetEq {([12, 12], (14, 15))}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__4 in pain_tuple2§region1#Set~Explicit[1]
                   . v__4 in {([12, 12], (14, 15))})
[applied] v__4 in {([12, 12], (14, 15))}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              [12, 12] = v__4[1] /\ (14 = v__4[2, 1] /\ 15 = v__4[2, 2])
[applied] (forAll v__4 in pain_tuple2§region1#Set~Explicit[1]
               . [12, 12] = v__4[1] /\ (14 = v__4[2, 1] /\ 15 = v__4[2, 2]))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__7 : int(1, 2)
                   . [12, 12][v__7] = pain_tuple2_Set~Explicit§region1[1, 1, 1, v__7])
              /\
              (14 = pain_tuple2_Set~Explicit§region1[1, 1, 2, 1]
               /\
               15 = pain_tuple2_Set~Explicit§region1[1, 1, 2, 2])
[applied] pain_tuple2§region1#Set~Explicit[1] supsetEq {([12, 12], (14, 15))}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {([12, 12], (14, 15))} subsetEq pain_tuple2§region1#Set~Explicit[1]
[applied] {([12, 12], (14, 15))} subsetEq pain_tuple2§region1#Set~Explicit[1]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              ([12, 12], (14, 15)) in pain_tuple2§region1#Set~Explicit[1]
[applied] ([12, 12], (14, 15)) in pain_tuple2§region1#Set~Explicit[1]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__9 in pain_tuple2§region1#Set~Explicit[1]
                   . v__9[1] = [12, 12] /\ (v__9[2, 1] = 14 /\ v__9[2, 2] = 15))
[applied] (exists v__9 in pain_tuple2§region1#Set~Explicit[1]
               . v__9[1] = [12, 12] /\ (v__9[2, 1] = 14 /\ v__9[2, 2] = 15))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__11 : int(1, 2)
                   . pain_tuple2_Set~Explicit§region1[1, 1, 1, v__11] = [12, 12][v__11])
              /\
              (pain_tuple2_Set~Explicit§region1[1, 1, 2, 1] = 14
               /\
               pain_tuple2_Set~Explicit§region1[1, 1, 2, 2] = 15)
[removeRefinedDecl] find pain_tuple2:
                            matrix indexed by [int(1)] of set (size 1) of
                                                              (matrix indexed by [int(1, 2)] of int(12),
                                                               (int(14), int(15)))
[removedDecl] find pain_tuple2_Set~Explicit:
                      matrix indexed by [int(1), int(1..1)] of (matrix indexed by [int(1,
                                                                                       2)] of int(12),
                                                                (int(14), int(15)))
[matrixToTuple] pain_tuple2_Set~Explicit∑2
[removedDecl] find pain_tuple2_Set~Explicit_tuple2:
                      matrix indexed by [int(1), int(1..1)] of (int(14), int(15))
[matrixToTuple] pain_tuple2_Set~Explicit_tuple2∑2
[repr] 1