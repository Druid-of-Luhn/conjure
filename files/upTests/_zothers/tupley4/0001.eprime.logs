[removedDecl] find pain:
        matrix indexed by [int(1..2), int(3..4)] of (set (size 1) of int(6, 7, 8, 9),
                                                     int(3, 4),
                                                     bool)
[representation] find pain_tuple1:
        matrix indexed by [int(1..2), int(3..4)] of set (size 1) of int(6, 7, 8, 9)
(#2)
Explicit, Occurrence
[configuration] pain_tuple1§region1#Explicit pain_tuple1§region3#Explicit pain_tuple1§region2#Explicit pain_tuple1§region4#Explicit
[addedDecl] find pain_tuple1_Explicit:
        matrix indexed by [int(1..2), int(3..4), int(1..1)] of int(6, 7, 8, 9)
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region4[1, 3, v__3]
       <
       pain_tuple1_Explicit§region4[1, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region4[1, 4, v__3]
       <
       pain_tuple1_Explicit§region4[1, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region4[2, 3, v__3]
       <
       pain_tuple1_Explicit§region4[2, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region4[2, 4, v__3]
       <
       pain_tuple1_Explicit§region4[2, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region3[1, 3, v__3]
       <
       pain_tuple1_Explicit§region3[1, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region3[1, 4, v__3]
       <
       pain_tuple1_Explicit§region3[1, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region3[2, 3, v__3]
       <
       pain_tuple1_Explicit§region3[2, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region3[2, 4, v__3]
       <
       pain_tuple1_Explicit§region3[2, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region2[1, 3, v__3]
       <
       pain_tuple1_Explicit§region2[1, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region2[1, 4, v__3]
       <
       pain_tuple1_Explicit§region2[1, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region2[2, 3, v__3]
       <
       pain_tuple1_Explicit§region2[2, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region2[2, 4, v__3]
       <
       pain_tuple1_Explicit§region2[2, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region1[1, 3, v__3]
       <
       pain_tuple1_Explicit§region1[1, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region1[1, 4, v__3]
       <
       pain_tuple1_Explicit§region1[1, 4, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region1[2, 3, v__3]
       <
       pain_tuple1_Explicit§region1[2, 3, v__3 + 1])
[fullEvaluator empty range] (forAll v__3 : int(1..0)
     . pain_tuple1_Explicit§region1[2, 4, v__3]
       <
       pain_tuple1_Explicit§region1[2, 4, v__3 + 1])
[applied] pain_tuple1§region1#Explicit[1, 3] = {6}
{rules/refns/set-eq-to-subsets.rule}
    pain_tuple1§region1#Explicit[1, 3] subsetEq {6}
    /\
    pain_tuple1§region1#Explicit[1, 3] supsetEq {6}
[applied] pain_tuple1§region1#Explicit[1, 3] subsetEq {6}
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__1 in pain_tuple1§region1#Explicit[1, 3] . v__1 in {6})
[applied] v__1 in {6}
{rules/refns/set-in-to-quantified.rule}
    6 = v__1
[applied] (forAll v__1 in pain_tuple1§region1#Explicit[1, 3] . 6 = v__1)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    6 = pain_tuple1_Explicit§region1[1, 3, 1]
[applied] pain_tuple1§region1#Explicit[1, 3] supsetEq {6}
{rules/refns/set-supseteq-to-subseteq.rule}
    {6} subsetEq pain_tuple1§region1#Explicit[1, 3]
[applied] {6} subsetEq pain_tuple1§region1#Explicit[1, 3]
{rules/refns/set-subseteq-to-quantified.rule}
    6 in pain_tuple1§region1#Explicit[1, 3]
[applied] 6 in pain_tuple1§region1#Explicit[1, 3]
{rules/refns/set-in-to-quantified.rule}
    (exists v__5 in pain_tuple1§region1#Explicit[1, 3] . v__5 = 6)
[applied] (exists v__5 in pain_tuple1§region1#Explicit[1, 3] . v__5 = 6)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    pain_tuple1_Explicit§region1[1, 3, 1] = 6
[applied] pain_tuple1§region2#Explicit[1, 4] = {7}
{rules/refns/set-eq-to-subsets.rule}
    pain_tuple1§region2#Explicit[1, 4] subsetEq {7}
    /\
    pain_tuple1§region2#Explicit[1, 4] supsetEq {7}
[applied] pain_tuple1§region2#Explicit[1, 4] subsetEq {7}
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__7 in pain_tuple1§region2#Explicit[1, 4] . v__7 in {7})
[applied] v__7 in {7}
{rules/refns/set-in-to-quantified.rule}
    7 = v__7
[applied] (forAll v__7 in pain_tuple1§region2#Explicit[1, 4] . 7 = v__7)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    7 = pain_tuple1_Explicit§region2[1, 4, 1]
[applied] pain_tuple1§region2#Explicit[1, 4] supsetEq {7}
{rules/refns/set-supseteq-to-subseteq.rule}
    {7} subsetEq pain_tuple1§region2#Explicit[1, 4]
[applied] {7} subsetEq pain_tuple1§region2#Explicit[1, 4]
{rules/refns/set-subseteq-to-quantified.rule}
    7 in pain_tuple1§region2#Explicit[1, 4]
[applied] 7 in pain_tuple1§region2#Explicit[1, 4]
{rules/refns/set-in-to-quantified.rule}
    (exists v__11 in pain_tuple1§region2#Explicit[1, 4] . v__11 = 7)
[applied] (exists v__11 in pain_tuple1§region2#Explicit[1, 4] . v__11 = 7)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    pain_tuple1_Explicit§region2[1, 4, 1] = 7
[applied] pain_tuple1§region3#Explicit[2, 3] = {8}
{rules/refns/set-eq-to-subsets.rule}
    pain_tuple1§region3#Explicit[2, 3] subsetEq {8}
    /\
    pain_tuple1§region3#Explicit[2, 3] supsetEq {8}
[applied] pain_tuple1§region3#Explicit[2, 3] subsetEq {8}
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__13 in pain_tuple1§region3#Explicit[2, 3] . v__13 in {8})
[applied] v__13 in {8}
{rules/refns/set-in-to-quantified.rule}
    8 = v__13
[applied] (forAll v__13 in pain_tuple1§region3#Explicit[2, 3] . 8 = v__13)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    8 = pain_tuple1_Explicit§region3[2, 3, 1]
[applied] pain_tuple1§region3#Explicit[2, 3] supsetEq {8}
{rules/refns/set-supseteq-to-subseteq.rule}
    {8} subsetEq pain_tuple1§region3#Explicit[2, 3]
[applied] {8} subsetEq pain_tuple1§region3#Explicit[2, 3]
{rules/refns/set-subseteq-to-quantified.rule}
    8 in pain_tuple1§region3#Explicit[2, 3]
[applied] 8 in pain_tuple1§region3#Explicit[2, 3]
{rules/refns/set-in-to-quantified.rule}
    (exists v__17 in pain_tuple1§region3#Explicit[2, 3] . v__17 = 8)
[applied] (exists v__17 in pain_tuple1§region3#Explicit[2, 3] . v__17 = 8)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    pain_tuple1_Explicit§region3[2, 3, 1] = 8
[applied] pain_tuple1§region4#Explicit[2, 4] = {9}
{rules/refns/set-eq-to-subsets.rule}
    pain_tuple1§region4#Explicit[2, 4] subsetEq {9}
    /\
    pain_tuple1§region4#Explicit[2, 4] supsetEq {9}
[applied] pain_tuple1§region4#Explicit[2, 4] subsetEq {9}
{rules/refns/set-subseteq-to-quantified.rule}
    (forAll v__19 in pain_tuple1§region4#Explicit[2, 4] . v__19 in {9})
[applied] v__19 in {9}
{rules/refns/set-in-to-quantified.rule}
    9 = v__19
[applied] (forAll v__19 in pain_tuple1§region4#Explicit[2, 4] . 9 = v__19)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    9 = pain_tuple1_Explicit§region4[2, 4, 1]
[applied] pain_tuple1§region4#Explicit[2, 4] supsetEq {9}
{rules/refns/set-supseteq-to-subseteq.rule}
    {9} subsetEq pain_tuple1§region4#Explicit[2, 4]
[applied] {9} subsetEq pain_tuple1§region4#Explicit[2, 4]
{rules/refns/set-subseteq-to-quantified.rule}
    9 in pain_tuple1§region4#Explicit[2, 4]
[applied] 9 in pain_tuple1§region4#Explicit[2, 4]
{rules/refns/set-in-to-quantified.rule}
    (exists v__23 in pain_tuple1§region4#Explicit[2, 4] . v__23 = 9)
[applied] (exists v__23 in pain_tuple1§region4#Explicit[2, 4] . v__23 = 9)
{rules/refns/set-explicit/set-explicit-quantified.rule}
    pain_tuple1_Explicit§region4[2, 4, 1] = 9
[removedDecl] find pain_tuple1:
        matrix indexed by [int(1..2), int(3..4)] of set (size 1) of int(6, 7, 8, 9)
[addSlicing] pain_tuple1_Explicit[1, 3] pain_tuple1_Explicit[1, 3, ..]
[addSlicing] pain_tuple1_Explicit[1, 4] pain_tuple1_Explicit[1, 4, ..]
[addSlicing] pain_tuple1_Explicit[2, 3] pain_tuple1_Explicit[2, 3, ..]
[addSlicing] pain_tuple1_Explicit[2, 4] pain_tuple1_Explicit[2, 4, ..]