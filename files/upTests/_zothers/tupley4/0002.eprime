language ESSENCE' 1.0

find pain_tuple1_SetExplicit:
        matrix indexed by [int(1..2), int(3..4), int(1..1)] of int(6, 7, 8, 9)
find pain_tuple1_SetOccurrence:
        matrix indexed by [int(1..2), int(3..4), int(6, 7, 8, 9)] of bool
find pain_tuple2: matrix indexed by [int(1..2), int(3..4)] of int(3, 4)
find pain_tuple3: matrix indexed by [int(1..2), int(3..4)] of bool
such that
    pain_tuple1_SetExplicit[1, 4, 1] = 7,
    pain_tuple1_SetExplicit[2, 3, 1] = 8,
    pain_tuple1_SetExplicit[2, 4, 1] = 9,
    pain_tuple1_SetOccurrence[1, 3, 6] = true,
    pain_tuple2[1, 3] = 3,
    pain_tuple2[1, 4] = 3,
    pain_tuple2[2, 3] = 3,
    pain_tuple2[2, 4] = 3,
    pain_tuple3[1, 3] = true,
    pain_tuple3[1, 4] = true,
    pain_tuple3[2, 3] = true,
    pain_tuple3[2, 4] = true,
    7 = pain_tuple1_SetExplicit[1, 4, 1],
    8 = pain_tuple1_SetExplicit[2, 3, 1],
    9 = pain_tuple1_SetExplicit[2, 4, 1],
    forAll v__0 : int(1..2)
        . (forAll v__1 : int(3..4)
               . (forAll v__2 : int(6, 7, 8, 9)
                      . pain_tuple1_SetExplicit[v__0, v__1, 1] = v__2
                        <->
                        pain_tuple1_SetOccurrence[v__0, v__1, v__2] = true)
                 /\
                 (forAll v__2 : int(6, 7, 8, 9)
                      . pain_tuple1_SetExplicit[v__0, v__1, 1] = v__2
                        <->
                        pain_tuple1_SetOccurrence[v__0, v__1, v__2] = true)),
    forAll v__0 : int(1..2)
        . (forAll v__1 : int(3..4)
               . (sum v__2 : int(6, 7, 8, 9) . pain_tuple1_SetOccurrence[v__0, v__1, v__2])
                 =
                 1),
    forAll v__0 : int(6, 7, 8, 9)
        . pain_tuple1_SetOccurrence[1, 3, v__0] -> 6 = v__0
