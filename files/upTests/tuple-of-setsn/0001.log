[removedDecl] find c: (int(0..9),
                       set of int(3..4),
                       (set of int(3..4), (int(3..4), bool)))
[removedDecl] find c_tuple3: (set of int(3..4), (int(3..4), bool))
[removedDecl] find c_tuple3_tuple2: (int(3..4), bool)
[representation] find c_tuple2: set of int(3..4)
                 (#2)
                 ExplicitVarSize, Occurrence
[representation] find c_tuple3_tuple1: set of int(3..4)
                 (#2)
                 ExplicitVarSize, Occurrence
[configuration] c_tuple2§region1#ExplicitVarSize c_tuple3_tuple1§region2#ExplicitVarSize
[addedDecl] (find c_tuple3_tuple1: set of int(3..4),
             find c_tuple3_tuple1_ExplicitVarSize:
                     matrix indexed by [int(1..4 - 3 + 1)] of (bool, int(3..4)))
[addedDecl] (find c_tuple2: set of int(3..4),
             find c_tuple2_ExplicitVarSize:
                     matrix indexed by [int(1..4 - 3 + 1)] of (bool, int(3..4)))
[simplified] 4 - 3
             ~~>
             1
[simplified] 1 + 1
             ~~>
             2
[applied] c_tuple2§region1#ExplicitVarSize = {3, 4}
          {rules/refns/set-eq-to-subsets.rule}
              c_tuple2§region1#ExplicitVarSize subsetEq {3, 4}
              /\
              c_tuple2§region1#ExplicitVarSize supsetEq {3, 4}
[applied] c_tuple2§region1#ExplicitVarSize subsetEq {3, 4}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__5 in c_tuple2§region1#ExplicitVarSize . v__5 in {3, 4})
[applied] v__5 in {3, 4}
          {rules/refns/set-in-to-quantified.rule}
              false \/ 3 = v__5 \/ 4 = v__5
[simplified] 3
             ~~>
             3
[simplified] false \/ 3 = v__5
             ~~>
             3 = v__5
[simplified] 4
             ~~>
             4
[applied] (forAll v__5 in c_tuple2§region1#ExplicitVarSize
               . 3 = v__5 \/ 4 = v__5)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__7 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__7, 1]
                   . 3 = c_tuple2_ExplicitVarSize§region1[v__7, 2]
                     \/
                     4 = c_tuple2_ExplicitVarSize§region1[v__7, 2])
[applied] c_tuple2§region1#ExplicitVarSize supsetEq {3, 4}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {3, 4} subsetEq c_tuple2§region1#ExplicitVarSize
[applied] {3, 4} subsetEq c_tuple2§region1#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              true /\ 3 in c_tuple2§region1#ExplicitVarSize
              /\
              4 in c_tuple2§region1#ExplicitVarSize
[applied] 3 in c_tuple2§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__9 in c_tuple2§region1#ExplicitVarSize . v__9 = 3)
[applied] (exists v__9 in c_tuple2§region1#ExplicitVarSize . v__9 = 3)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__10 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__10, 1]
                   . c_tuple2_ExplicitVarSize§region1[v__10, 2] = 3)
[simplified] true
             /\
             (exists v__10 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__10, 1]
                  . c_tuple2_ExplicitVarSize§region1[v__10, 2] = 3)
             ~~>
             (exists v__10 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__10, 1]
                  . c_tuple2_ExplicitVarSize§region1[v__10, 2] = 3)
[applied] 4 in c_tuple2§region1#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__11 in c_tuple2§region1#ExplicitVarSize . v__11 = 4)
[applied] (exists v__11 in c_tuple2§region1#ExplicitVarSize . v__11 = 4)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__12 : int(1..2) , c_tuple2_ExplicitVarSize§region1[v__12, 1]
                   . c_tuple2_ExplicitVarSize§region1[v__12, 2] = 4)
[applied] c_tuple3_tuple1§region2#ExplicitVarSize = {3, 4}
          {rules/refns/set-eq-to-subsets.rule}
              c_tuple3_tuple1§region2#ExplicitVarSize subsetEq {3, 4}
              /\
              c_tuple3_tuple1§region2#ExplicitVarSize supsetEq {3, 4}
[applied] c_tuple3_tuple1§region2#ExplicitVarSize subsetEq {3, 4}
          {rules/refns/set-subseteq-to-quantified.rule}
              (forAll v__13 in c_tuple3_tuple1§region2#ExplicitVarSize . v__13 in {3, 4})
[applied] v__13 in {3, 4}
          {rules/refns/set-in-to-quantified.rule}
              false \/ 3 = v__13 \/ 4 = v__13
[simplified] false \/ 3 = v__13
             ~~>
             3 = v__13
[applied] (forAll v__13 in c_tuple3_tuple1§region2#ExplicitVarSize
               . 3 = v__13 \/ 4 = v__13)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (forAll v__15 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region2[v__15, 1]
                   . 3 = c_tuple3_tuple1_ExplicitVarSize§region2[v__15, 2]
                     \/
                     4 = c_tuple3_tuple1_ExplicitVarSize§region2[v__15, 2])
[applied] c_tuple3_tuple1§region2#ExplicitVarSize supsetEq {3, 4}
          {rules/refns/set-supseteq-to-subseteq.rule}
              {3, 4} subsetEq c_tuple3_tuple1§region2#ExplicitVarSize
[applied] {3, 4} subsetEq c_tuple3_tuple1§region2#ExplicitVarSize
          {rules/refns/set-subseteq-to-quantified.rule}
              true /\ 3 in c_tuple3_tuple1§region2#ExplicitVarSize
              /\
              4 in c_tuple3_tuple1§region2#ExplicitVarSize
[applied] 3 in c_tuple3_tuple1§region2#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__17 in c_tuple3_tuple1§region2#ExplicitVarSize . v__17 = 3)
[applied] (exists v__17 in c_tuple3_tuple1§region2#ExplicitVarSize . v__17 = 3)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__18 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region2[v__18, 1]
                   . c_tuple3_tuple1_ExplicitVarSize§region2[v__18, 2] = 3)
[simplified] true
             /\
             (exists v__18 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region2[v__18, 1]
                  . c_tuple3_tuple1_ExplicitVarSize§region2[v__18, 2] = 3)
             ~~>
             (exists v__18 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region2[v__18, 1]
                  . c_tuple3_tuple1_ExplicitVarSize§region2[v__18, 2] = 3)
[applied] 4 in c_tuple3_tuple1§region2#ExplicitVarSize
          {rules/refns/set-in-to-quantified.rule}
              (exists v__19 in c_tuple3_tuple1§region2#ExplicitVarSize . v__19 = 4)
[applied] (exists v__19 in c_tuple3_tuple1§region2#ExplicitVarSize . v__19 = 4)
          {rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
              (exists v__20 : int(1..2) , c_tuple3_tuple1_ExplicitVarSize§region2[v__20, 1]
                   . c_tuple3_tuple1_ExplicitVarSize§region2[v__20, 2] = 4)
[removedDecl] find c_tuple2_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[removedDecl] find c_tuple3_tuple1_ExplicitVarSize:
                      matrix indexed by [int(1..2)] of (bool, int(3..4))
[removedDecl] find c_tuple3_tuple1: set of int(3..4)
[removedDecl] find c_tuple2: set of int(3..4)