[useChannelling] True
[representation] find valid:
                         matrix indexed by [int(1, 3), int(5, 9)] of set (minSize 1) of
                                                                         function (total)
                                                                             int(4..5) --> (int(6, 7), int(9))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] valid§region1#Set~ExplicitVarSize
[addedDecl] find valid_Set~ExplicitVarSize:
                    matrix indexed by [int(1, 3), int(5, 9), int(1..4)] of (bool,
                                                                            function (total)
                                                                                int(4..5) --> (int(6, 7), int(9)))
[addedStructuralCons] (forAll v__4 : int(1, 3)
                           . (forAll v__3 : int(5, 9)
                                  . (forAll v__5 : int(1..3)
                                         , valid_Set~ExplicitVarSize§region1[v__4, v__3, v__5, 1]
                                           /\
                                           valid_Set~ExplicitVarSize§region1[v__4, v__3, v__5 + 1, 1]
                                         . valid_Set~ExplicitVarSize§region1[v__4, v__3, v__5, 2]
                                           .<
                                           valid_Set~ExplicitVarSize§region1[v__4, v__3, v__5 + 1, 2])
                                    /\
                                    (forAll v__5 : int(1..3)
                                         . valid_Set~ExplicitVarSize§region1[v__4, v__3, v__5, 1]
                                           >=
                                           valid_Set~ExplicitVarSize§region1[v__4, v__3, v__5 + 1, 1])))
                      (forAll v__8 : int(1, 3)
                           . (forAll v__10 : int(5, 9)
                                  . (sum v__9 : int(1..4)
                                         . valid_Set~ExplicitVarSize§region1[v__8, v__10, v__9, 1])
                                    >=
                                    1))
[refn] 0
[removeRefinedDecl] find valid:
                            matrix indexed by [int(1, 3), int(5, 9)] of set (minSize 1) of
                                                                            function (total)
                                                                                int(4..5) --> (int(6, 7), int(9))
[matrixToTuple] valid_Set~ExplicitVarSize∑3
[removedDecl] find valid_Set~ExplicitVarSize:
                      matrix indexed by [int(1, 3), int(5, 9), int(1..4)] of (bool,
                                                                              function (total)
                                                                                  int(4..5) --> (int(6, 7), int(9)))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple1:
                      matrix indexed by [int(1, 3), int(5, 9), int(1..4)] of bool
              find valid_Set~ExplicitVarSize_tuple2:
                      matrix indexed by [int(1, 3), int(5, 9), int(1..4)] of function (total)
                                                                                 int(4..5) --> (int(6, 7), int(9))
[repr] 1
[representation] find valid_Set~ExplicitVarSize_tuple2:
                         matrix indexed by [int(1, 3), int(5, 9), int(1..4)] of function (total)
                                                                                    int(4..5) --> (int(6, 7), int(9))
                 (#2)
                 AsReln, Matrix1D
[configuration] valid_Set~ExplicitVarSize_tuple2§region1#Matrix1D
[addedDecl] find valid_Set~ExplicitVarSize_tuple2_Matrix1D:
                    matrix indexed by [int(1, 3), int(5, 9), int(1..4), int(4..5)] of (int(6, 7),
                                                                                       int(9))
[refn] 1
[applied] valid_Set~ExplicitVarSize_tuple2§region1#Matrix1D[v__0, v__1, v__2]
          .<
          valid_Set~ExplicitVarSize_tuple2§region1#Matrix1D[v__0, v__1, v__2 + 1]
          {rules/refns/vertical/function-matrix1d/DotLt.rule}
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 1]
              .<
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 1]
              \/
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 1]
              =
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 1]
              /\
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 2]
              .<
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 2]
              \/
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 1]
              =
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 1]
              /\
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 2]
              =
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 2]
              /\
              (valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 2, 1]
               .<
               valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 1]
               \/
               valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 2, 1]
               =
               valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 1]
               /\
               valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 2, 2]
               .<
               valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 2])
[applied] valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0,
                                                            v__1,
                                                            v__2,
                                                            1,
                                                            1]
          .<
          valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 1]
              <
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 1]
[applied] valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0,
                                                            v__1,
                                                            v__2,
                                                            1,
                                                            2]
          .<
          valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 1, 2]
              <
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 1, 2]
[applied] valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0,
                                                            v__1,
                                                            v__2,
                                                            2,
                                                            1]
          .<
          valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 2, 1]
              <
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 1]
[applied] valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0,
                                                            v__1,
                                                            v__2,
                                                            2,
                                                            2]
          .<
          valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2, 2, 2]
              <
              valid_Set~ExplicitVarSize_tuple2_Matrix1D§region1[v__0, v__1, v__2 + 1, 2, 2]
[removeRefinedDecl] find valid_Set~ExplicitVarSize_tuple2:
                            matrix indexed by [int(1, 3), int(5, 9), int(1..4)] of function (total)
                                                                                       int(4..5) --> (int(6, 7), int(9))
[matrixToTuple] valid_Set~ExplicitVarSize_tuple2_Matrix1D∑4
[removedDecl] find valid_Set~ExplicitVarSize_tuple2_Matrix1D:
                      matrix indexed by [int(1, 3), int(5, 9), int(1..4), int(4..5)] of (int(6, 7),
                                                                                         int(9))
              Added the following:
              find valid_Set~ExplicitVarSize_tuple2_Matrix1D_tuple1:
                      matrix indexed by [int(1, 3), int(5, 9), int(1..4), int(4..5)] of int(6, 7)
              find valid_Set~ExplicitVarSize_tuple2_Matrix1D_tuple2:
                      matrix indexed by [int(1, 3), int(5, 9), int(1..4), int(4..5)] of int(9)
[repr] 2