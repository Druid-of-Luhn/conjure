[useChannelling] True
[removedDecl] find pain:
                      matrix indexed by [int(1..2), int(3)] of ((set (size 1) of int(1, 2),
                                                                 set (size 1) of int(4, 5)),
                                                                int(8, 9))
[matrixToTuple] pain∑2
[removedDecl] find pain_tuple1:
                      matrix indexed by [int(1..2), int(3)] of (set (size 1) of int(1, 2),
                                                                set (size 1) of int(4, 5))
[matrixToTuple] pain_tuple1∑2
[representation] find pain_tuple1_tuple1:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
                 (#2)
                 Set~Explicit, Set~Occurrence
[representation] find pain_tuple1_tuple2:
                         matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
                 (#2)
                 Set~Explicit, Set~Occurrence
[configuration] pain_tuple1_tuple1§region1#Set~Occurrence pain_tuple1_tuple2§region2#Set~Explicit pain_tuple1_tuple2§region4#Set~Occurrence pain_tuple1_tuple1§region3#Set~Explicit
[addedDecl] find pain_tuple1_tuple2_Set~Occurrence:
                    matrix indexed by [int(1..2), int(3), int(4, 5)] of bool
[addedDecl] find pain_tuple1_tuple1_Set~Explicit:
                    matrix indexed by [int(1..2), int(3), int(1..1)] of int(1, 2)
[addedDecl] find pain_tuple1_tuple2_Set~Explicit:
                    matrix indexed by [int(1..2), int(3), int(1..1)] of int(4, 5)
[addedDecl] find pain_tuple1_tuple1_Set~Occurrence:
                    matrix indexed by [int(1..2), int(3), int(1, 2)] of bool
[refn] 0
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] = {5}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region2#Set~Explicit[1, 3] subsetEq {5}
              /\
              pain_tuple1_tuple2§region2#Set~Explicit[1, 3] supsetEq {5}
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] subsetEq {5}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__25 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3] . v__25 in {5})
[applied] v__25 in {5}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              5 = v__25
[applied] (forAll v__25 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
               . 5 = v__25)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              5 = pain_tuple1_tuple2_Set~Explicit§region2[1, 3, 1]
[applied] pain_tuple1_tuple2§region2#Set~Explicit[1, 3] supsetEq {5}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {5} subsetEq pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
[applied] {5} subsetEq pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              5 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
[applied] 5 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
          {rules/refns/horizontal/set-in-to-quantified.rule}
              (exists v__29 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3] . v__29 = 5)
[applied] (exists v__29 in pain_tuple1_tuple2§region2#Set~Explicit[1, 3]
               . v__29 = 5)
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              pain_tuple1_tuple2_Set~Explicit§region2[1, 3, 1] = 5
[applied] pain_tuple1_tuple2§region4#Set~Occurrence[2, 3] = {4}
          {rules/refns/horizontal/set-eq-to-subsets.rule}
              pain_tuple1_tuple2§region4#Set~Occurrence[2, 3] subsetEq {4}
              /\
              pain_tuple1_tuple2§region4#Set~Occurrence[2, 3] supsetEq {4}
[applied] pain_tuple1_tuple2§region4#Set~Occurrence[2, 3] subsetEq {4}
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              (forAll v__31 in pain_tuple1_tuple2§region4#Set~Occurrence[2, 3] . v__31 in {4})
[applied] v__31 in {4}
          {rules/refns/horizontal/set-in-to-quantified.rule}
              4 = v__31
[applied] (forAll v__31 in pain_tuple1_tuple2§region4#Set~Occurrence[2, 3]
               . 4 = v__31)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__33 : int(4, 5)
                   , pain_tuple1_tuple2_Set~Occurrence§region4[2, 3, v__33]
                   . 4 = v__33)
[applied] pain_tuple1_tuple2§region4#Set~Occurrence[2, 3] supsetEq {4}
          {rules/refns/horizontal/set-supseteq-to-subseteq.rule}
              {4} subsetEq pain_tuple1_tuple2§region4#Set~Occurrence[2, 3]
[applied] {4} subsetEq pain_tuple1_tuple2§region4#Set~Occurrence[2, 3]
          {rules/refns/horizontal/set-subseteq-to-quantified.rule}
              4 in pain_tuple1_tuple2§region4#Set~Occurrence[2, 3]
[applied] 4 in pain_tuple1_tuple2§region4#Set~Occurrence[2, 3]
          {rules/refns/vertical/Set~Occurrence/in.rule}
              pain_tuple1_tuple2_Set~Occurrence§region4[2, 3, 4] = true
[removeRefinedDecl] find pain_tuple1_tuple1:
                            matrix indexed by [int(1..2), int(3)] of set (size 1) of int(1, 2)
[removeRefinedDecl] find pain_tuple1_tuple2:
                            matrix indexed by [int(1..2), int(3)] of set (size 1) of int(4, 5)
[repr] 1