language ESSENCE' 1.0

find pain_tuple1_tuple1_Explicit:
        matrix indexed by [int(1..2), int(3), int(1..1)] of int(1, 2)
find pain_tuple1_tuple2_Explicit:
        matrix indexed by [int(1..2), int(3), int(1..1)] of int(4, 5)
find pain_tuple2: matrix indexed by [int(1..2), int(3)] of int(8, 9)
such that
    forAll v__23 : int(1..1) . 2 = pain_tuple1_tuple1_Explicit[1, 3, v__23],
    exists v__26 : int(1..1) . pain_tuple1_tuple1_Explicit[1, 3, v__26] = 2,
    forAll v__29 : int(1..1) . 5 = pain_tuple1_tuple2_Explicit[1, 3, v__29],
    exists v__32 : int(1..1) . pain_tuple1_tuple2_Explicit[1, 3, v__32] = 5,
    forAll v__35 : int(1..1) . 1 = pain_tuple1_tuple1_Explicit[2, 3, v__35],
    exists v__38 : int(1..1) . pain_tuple1_tuple1_Explicit[2, 3, v__38] = 1,
    forAll v__41 : int(1..1) . 4 = pain_tuple1_tuple2_Explicit[2, 3, v__41],
    exists v__44 : int(1..1) . pain_tuple1_tuple2_Explicit[2, 3, v__44] = 4,
    pain_tuple2[1, 3] = 8,
    pain_tuple2[2, 3] = 9,
    forAll v__14 : int(1..2)
        . (forAll v__15 : int(3)
               . allDiff(pain_tuple1_tuple2_Explicit[v__14, v__15, ..])),
    forAll v__4 : int(1..2)
        . (forAll v__5 : int(3) . allDiff(pain_tuple1_tuple1_Explicit[v__4, v__5, ..]))
