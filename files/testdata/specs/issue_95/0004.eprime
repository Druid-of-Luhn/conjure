language ESSENCE' 1.0

find x_tuple1_Occurrence:
        matrix indexed by [int(1..2), int(1, 2), int(6..8)] of bool
find x_tuple1_ExplicitVarSize_tuple1:
        matrix indexed by [int(1..2), int(1, 2), int(1..3)] of bool
find x_tuple1_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..2), int(1, 2), int(1..3)] of int(6..8)
find x_tuple2: matrix indexed by [int(1..2), int(1, 2)] of int(8, 5)
such that
    forAll v__3 : int(1..3)
        . x_tuple1_ExplicitVarSize_tuple1[1, 1, v__3]
          ->
          6 = x_tuple1_ExplicitVarSize_tuple2[1, 1, v__3],
    exists v__9 : int(1..3)
        . x_tuple1_ExplicitVarSize_tuple1[1, 1, v__9]
          /\
          x_tuple1_ExplicitVarSize_tuple2[1, 1, v__9] = 6,
    x_tuple2[1, 1] = 8,
    forAll v__13 : int(6..8) . x_tuple1_Occurrence[1, 2, v__13] -> 7 = v__13,
    exists v__16 : int(6..8) . x_tuple1_Occurrence[1, 2, v__16] /\ v__16 = 7,
    x_tuple2[1, 2] = 5,
    forAll v__21 : int(1..3)
        . x_tuple1_ExplicitVarSize_tuple1[1, 1, v__21]
          ->
          (exists v__20 : int(6..8)
               . x_tuple1_Occurrence[1, 1, v__20]
                 /\
                 v__20 = x_tuple1_ExplicitVarSize_tuple2[1, 1, v__21]),
    forAll v__25 : int(6..8)
        . x_tuple1_Occurrence[1, 1, v__25]
          ->
          (exists v__24 : int(1..3)
               . x_tuple1_ExplicitVarSize_tuple1[1, 1, v__24]
                 /\
                 x_tuple1_ExplicitVarSize_tuple2[1, 1, v__24] = v__25),
    forAll v__29 : int(1..3)
        . x_tuple1_ExplicitVarSize_tuple1[1, 2, v__29]
          ->
          (exists v__28 : int(6..8)
               . x_tuple1_Occurrence[1, 2, v__28]
                 /\
                 v__28 = x_tuple1_ExplicitVarSize_tuple2[1, 2, v__29]),
    forAll v__33 : int(6..8)
        . x_tuple1_Occurrence[1, 2, v__33]
          ->
          (exists v__32 : int(1..3)
               . x_tuple1_ExplicitVarSize_tuple1[1, 2, v__32]
                 /\
                 x_tuple1_ExplicitVarSize_tuple2[1, 2, v__32] = v__33),
    forAll v__38 : int(1..3)
        . x_tuple1_ExplicitVarSize_tuple1[2, 1, v__38]
          ->
          (exists v__37 : int(6..8)
               . x_tuple1_Occurrence[2, 1, v__37]
                 /\
                 v__37 = x_tuple1_ExplicitVarSize_tuple2[2, 1, v__38]),
    forAll v__42 : int(6..8)
        . x_tuple1_Occurrence[2, 1, v__42]
          ->
          (exists v__41 : int(1..3)
               . x_tuple1_ExplicitVarSize_tuple1[2, 1, v__41]
                 /\
                 x_tuple1_ExplicitVarSize_tuple2[2, 1, v__41] = v__42),
    forAll v__46 : int(1..3)
        . x_tuple1_ExplicitVarSize_tuple1[2, 2, v__46]
          ->
          (exists v__45 : int(6..8)
               . x_tuple1_Occurrence[2, 2, v__45]
                 /\
                 v__45 = x_tuple1_ExplicitVarSize_tuple2[2, 2, v__46]),
    forAll v__50 : int(6..8)
        . x_tuple1_Occurrence[2, 2, v__50]
          ->
          (exists v__49 : int(1..3)
               . x_tuple1_ExplicitVarSize_tuple1[2, 2, v__49]
                 /\
                 x_tuple1_ExplicitVarSize_tuple2[2, 2, v__49] = v__50),
    (sum v__11 : int(6..8) . x_tuple1_Occurrence[1, 1, v__11]) >= 1,
    (sum v__11 : int(6..8) . x_tuple1_Occurrence[1, 2, v__11]) >= 1,
    (sum v__11 : int(6..8) . x_tuple1_Occurrence[2, 1, v__11]) >= 1,
    (sum v__11 : int(6..8) . x_tuple1_Occurrence[2, 2, v__11]) >= 1,
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_tuple1_ExplicitVarSize_tuple1[1, 1, v__4]
                 /\
                 x_tuple1_ExplicitVarSize_tuple1[1, 1, v__5]
                 ->
                 x_tuple1_ExplicitVarSize_tuple2[1, 1, v__4]
                 <
                 x_tuple1_ExplicitVarSize_tuple2[1, 1, v__5]),
    forAll v__4 : int(1..2)
        . x_tuple1_ExplicitVarSize_tuple1[1, 1, v__4]
          <=
          x_tuple1_ExplicitVarSize_tuple1[1, 1, v__4 + 1],
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_tuple1_ExplicitVarSize_tuple1[1, 2, v__4]
                 /\
                 x_tuple1_ExplicitVarSize_tuple1[1, 2, v__5]
                 ->
                 x_tuple1_ExplicitVarSize_tuple2[1, 2, v__4]
                 <
                 x_tuple1_ExplicitVarSize_tuple2[1, 2, v__5]),
    forAll v__4 : int(1..2)
        . x_tuple1_ExplicitVarSize_tuple1[1, 2, v__4]
          <=
          x_tuple1_ExplicitVarSize_tuple1[1, 2, v__4 + 1],
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_tuple1_ExplicitVarSize_tuple1[2, 1, v__4]
                 /\
                 x_tuple1_ExplicitVarSize_tuple1[2, 1, v__5]
                 ->
                 x_tuple1_ExplicitVarSize_tuple2[2, 1, v__4]
                 <
                 x_tuple1_ExplicitVarSize_tuple2[2, 1, v__5]),
    forAll v__4 : int(1..2)
        . x_tuple1_ExplicitVarSize_tuple1[2, 1, v__4]
          <=
          x_tuple1_ExplicitVarSize_tuple1[2, 1, v__4 + 1],
    forAll v__4 : int(1..3)
        . (forAll v__5 : int(1..3)
               . v__4 < v__5 /\ x_tuple1_ExplicitVarSize_tuple1[2, 2, v__4]
                 /\
                 x_tuple1_ExplicitVarSize_tuple1[2, 2, v__5]
                 ->
                 x_tuple1_ExplicitVarSize_tuple2[2, 2, v__4]
                 <
                 x_tuple1_ExplicitVarSize_tuple2[2, 2, v__5]),
    forAll v__4 : int(1..2)
        . x_tuple1_ExplicitVarSize_tuple1[2, 2, v__4]
          <=
          x_tuple1_ExplicitVarSize_tuple1[2, 2, v__4 + 1],
    (sum v__8 : int(1..3) . x_tuple1_ExplicitVarSize_tuple1[1, 1, v__8]) >= 1,
    (sum v__8 : int(1..3) . x_tuple1_ExplicitVarSize_tuple1[1, 2, v__8]) >= 1,
    (sum v__8 : int(1..3) . x_tuple1_ExplicitVarSize_tuple1[2, 1, v__8]) >= 1,
    (sum v__8 : int(1..3) . x_tuple1_ExplicitVarSize_tuple1[2, 2, v__8]) >= 1
