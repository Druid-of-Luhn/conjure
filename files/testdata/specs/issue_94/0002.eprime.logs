[representation] find f: function (total) Index --> int(-1, 1) (#2) AsReln, Matrix1D
[configuration] f§region1#AsReln
[addedDecl] find f_AsReln: relation of (Index * int(-1, 1))
[applied] f§region1#AsReln = function(1 --> -1, 2 --> 1)
{rules/refns/function-eq.rule}
    (forAll v__3 in defined(f§region1#AsReln)
         . f§region1#AsReln(v__3) = function(1 --> -1, 2 --> 1)(v__3))
[applied] f§region1#AsReln(v__3)
{rules/refns/function-asreln/function-asreln-image.rule}
    (sum v__4 in toSet(f_AsReln§region1) , v__4[1] = v__3 . v__4[2])
[applied] function(1 --> -1, 2 --> 1)(v__3)
{builtIn.functionLiteralApply}
    toInt(!((1, -1) in (mset() : `mset of (int, int)`)) /\ 1 = v__3) * -1
    +
    toInt(!((2, 1) in mset((1, -1))) /\ 2 = v__3)
[applied] (1, -1) in (mset() : `mset of (int, int)`)
{rules/refns/mset-in.rule}
    false
[simplified] !false
~~>
true
[simplified] true /\ 1 = v__3
~~>
1 = v__3
[applied] (2, 1) in mset((1, -1))
{rules/refns/mset-in.rule}
    false
[simplified] true /\ 2 = v__3
~~>
2 = v__3
[applied] (forAll v__3 in defined(f§region1#AsReln)
     . (sum v__4 in toSet(f_AsReln§region1) , v__4[1] = v__3 . v__4[2])
       =
       toInt(1 = v__3) * -1 + toInt(2 = v__3))
{rules/refns/function-defined-quantified.rule}
    (forAll v__8 in toSet(f§region1#AsReln)
         . (sum v__4 in toSet(f_AsReln§region1) , v__4[1] = v__8[1] . v__4[2])
           =
           toInt(1 = v__8[1]) * -1 + toInt(2 = v__8[1]))
[applied] (forAll v__8 in toSet(f§region1#AsReln)
     . (sum v__4 in toSet(f_AsReln§region1) , v__4[1] = v__8[1] . v__4[2])
       =
       toInt(1 = v__8[1]) * -1 + toInt(2 = v__8[1]))
{rules/refns/function-asreln/function-toSet-quantified.rule}
    (forAll v__8 in toSet(f_AsReln§region1)
         . (sum v__4 in toSet(f_AsReln§region1) , v__4[1] = v__8[1] . v__4[2])
           =
           toInt(1 = v__8[1]) * -1 + toInt(2 = v__8[1]))
[removedDecl] find f: function (total) Index --> int(-1, 1)
[representation] find f_AsReln: relation of (Index * int(-1, 1)) (#1) RelationAsSet
[configuration] f_AsReln§region1#RelationAsSet f_AsReln§regionS#RelationAsSet
[addedDecl] find f_AsReln_RelationAsSet: set of (Index, int(-1, 1))
[applied] (sum v__4 in toSet(f_AsReln§region1#RelationAsSet) , v__4[1] = v__8[1]
     . v__4[2])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__4 in f_AsReln_RelationAsSet§region1 , v__4[1] = v__8[1] . v__4[2])
[applied] (forAll v__8 in toSet(f_AsReln§region1#RelationAsSet)
     . (sum v__4 in f_AsReln_RelationAsSet§region1 , v__4[1] = v__8[1] . v__4[2])
       =
       toInt(1 = v__8[1]) * -1 + toInt(2 = v__8[1]))
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (forAll v__8 in f_AsReln_RelationAsSet§region1
         . (sum v__4 in f_AsReln_RelationAsSet§region1 , v__4[1] = v__8[1] . v__4[2])
           =
           toInt(1 = v__8[1]) * -1 + toInt(2 = v__8[1]))
[applied] (sum v__2 in toSet(f_AsReln§regionS#RelationAsSet) . v__1 = v__2[1])
{rules/refns/relation-asset/relation-asset-toSet.rule}
    (sum v__2 in f_AsReln_RelationAsSet§regionS . v__1 = v__2[1])
[removedDecl] find f_AsReln: relation of (Index * int(-1, 1))
[representation] find f_AsReln_RelationAsSet: set of (Index, int(-1, 1)) (#1) ExplicitVarSize
[configuration] f_AsReln_RelationAsSet§region1#ExplicitVarSize f_AsReln_RelationAsSet§regionS#ExplicitVarSize
[addedDecl] find f_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..4)] of (bool, (Index, int(-1, 1)))
[applied] (sum v__4 in f_AsReln_RelationAsSet§region1#ExplicitVarSize , v__4[1] = v__8[1]
     . v__4[2])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__6 : int(1..4)
         , f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 2, 1] = v__8[1]
           /\
           f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 1]
         . f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 2, 2])
[applied] (forAll v__8 in f_AsReln_RelationAsSet§region1#ExplicitVarSize
     . (sum v__6 : int(1..4)
            , f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 2, 1] = v__8[1]
              /\
              f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 1]
            . f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 2, 2])
       =
       toInt(1 = v__8[1]) * -1 + toInt(2 = v__8[1]))
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (forAll v__7 : int(1..4)
         , f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__7, 1]
         . (sum v__6 : int(1..4)
                , f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 2, 1]
                  =
                  f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__7, 2, 1]
                  /\
                  f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 1]
                . f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__6, 2, 2])
           =
           toInt(1 = f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__7, 2, 1]) * -1
           +
           toInt(2 = f_AsReln_RelationAsSet_ExplicitVarSize§region1[v__7, 2, 1]))
[applied] (sum v__2 in f_AsReln_RelationAsSet§regionS#ExplicitVarSize . v__1 = v__2[1])
{rules/refns/set-explicitvarsize/set-explicitvarsize-quantified.rule}
    (sum v__9 : int(1..4) , f_AsReln_RelationAsSet_ExplicitVarSize§regionS[v__9, 1]
         . v__1 = f_AsReln_RelationAsSet_ExplicitVarSize§regionS[v__9, 2, 1])
[removedDecl] find f_AsReln_RelationAsSet_ExplicitVarSize:
        matrix indexed by [int(1..4)] of (bool, (Index, int(-1, 1)))
[removedDecl] find f_AsReln_RelationAsSet_ExplicitVarSize_tuple2:
        matrix indexed by [int(1..4)] of (Index, int(-1, 1))
[removedDecl] find f_AsReln_RelationAsSet: set of (Index, int(-1, 1))