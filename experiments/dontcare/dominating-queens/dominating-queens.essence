language Essence 1.3

given n : int
letting ROW, COL be domain int(1..n)

$ there is at most one queen at every row.
$ queens are at different columns thanks to injectivity of the function.
find queenAtRow : function (injective) ROW --> COL

minimising |queenAtRow|

such that
    $ queens are at different diagonals
    forAll (r1,c1),(r2,c2) in toSet(queenAtRow)
         , r1 < r2
         . |c1-c2| != |r1-r2|,

    forAll r : ROW
        , !(r in defined(queenAtRow))                                           $ for all rows without a queen
        . forAll c : COL .
            (exists r2 : ROW , r != r2 . queenAtRow(r2) = c) \/                 $ each square must have a queen on the same column
            (exists r2 : ROW , r != r2 . |queenAtRow(r2) - c| = |r2 - r|)       $ or a diagonal
